{"ast":null,"code":"import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\n\nvar Workbook =\n/** @class */\nfunction () {\n  /* tslint:disable:no-any */\n  function Workbook(json, saveType, culture, currencyString, separator) {\n    this.sharedStringCount = 0;\n    this.unitsProportions = [96 / 75.0, 96 / 300.0, 96, 96 / 25.4, 96 / 2.54, 1, 96 / 72.0, 96 / 72.0 / 12700];\n    /* tslint:disable:no-any */\n\n    this.hyperlinkStyle = {\n      fontColor: '#0000FF',\n      underline: true\n    };\n\n    if (culture !== undefined) {\n      this.culture = culture;\n    } else {\n      this.culture = 'en-US';\n    }\n\n    if (currencyString !== undefined) {\n      this.currency = currencyString;\n    } else {\n      this.currency = 'USD';\n    }\n\n    this.intl = new Internationalization(this.culture);\n    this.mSaveType = saveType;\n\n    if (saveType === 'xlsx') {\n      this.mArchive = new ZipArchive();\n      this.sharedString = [];\n      this.mFonts = [];\n      this.mBorders = [];\n      this.mStyles = [];\n      this.printTitles = new Map();\n      this.cellStyles = new Map();\n      this.mNumFmt = new Map();\n      this.mFills = new Map();\n      this.mStyles.push(new CellStyle());\n      this.mFonts.push(new Font());\n      /* tslint:disable */\n\n      this.cellStyles.set('Normal', new CellStyles());\n      /* tslint:enable */\n\n      this.mCellXfs = [];\n      this.mCellStyleXfs = [];\n      this.drawingCount = 0;\n      this.imageCount = 0;\n\n      if (json.styles !== null && json.styles !== undefined) {\n        /* tslint:disable-next-line:no-any */\n        this.globalStyles = new Map();\n\n        for (var i = 0; i < json.styles.length; i++) {\n          if (json.styles[i].name !== undefined) {\n            if (!this.cellStyles.has(json.styles[i].name)) {\n              var cellStyle = new CellStyle();\n              cellStyle.isGlobalStyle = true;\n              this.parserCellStyle(json.styles[i], cellStyle, 'none');\n              var cellStylesIn = new CellStyles();\n              cellStylesIn.name = cellStyle.name;\n              cellStylesIn.xfId = cellStyle.index - 1;\n              this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n              /* tslint:disable-next-line:no-any */\n\n              var tFormat = {};\n\n              if (json.styles[i].numberFormat !== undefined) {\n                tFormat.format = json.styles[i].numberFormat;\n              }\n\n              if (json.styles[i].type !== undefined) {\n                tFormat.type = json.styles[i].type;\n              } else {\n                tFormat.type = 'datetime';\n              }\n\n              if (tFormat.format !== undefined) {\n                this.globalStyles.set(json.styles[i].name, tFormat);\n              }\n            } else {\n              throw Error('Style name ' + json.styles[i].name + ' is already existed');\n            }\n          }\n        }\n      } // Parses Worksheets data to DOM.        \n\n\n      if (json.worksheets !== null && json.worksheets !== undefined) {\n        this.parserWorksheets(json.worksheets);\n      } else {\n        throw Error('Worksheet is expected.');\n      } // Parses the BuiltInProperties data to DOM.        \n\n\n      if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n        this.builtInProperties = new BuiltInProperties();\n        this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n      }\n    } else {\n      this.csvHelper = new CsvHelper(json, separator);\n    }\n  }\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n    //Author\n    if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n      builtInProperties.author = jsonBuiltInProperties.author;\n    } //Comments\n\n\n    if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n      builtInProperties.comments = jsonBuiltInProperties.comments;\n    } //Category\n\n\n    if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n      builtInProperties.category = jsonBuiltInProperties.category;\n    } //Company\n\n\n    if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n      builtInProperties.company = jsonBuiltInProperties.company;\n    } //Manager\n\n\n    if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n      builtInProperties.manager = jsonBuiltInProperties.manager;\n    } //Subject\n\n\n    if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n      builtInProperties.subject = jsonBuiltInProperties.subject;\n    } //Title\n\n\n    if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n      builtInProperties.title = jsonBuiltInProperties.title;\n    } //Creation date\n\n\n    if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n      builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n    } //Modified date\n\n\n    if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n      builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n    } //Tags\n\n\n    if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n      builtInProperties.tags = jsonBuiltInProperties.tags;\n    } //Status\n\n\n    if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n      builtInProperties.status = jsonBuiltInProperties.status;\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserWorksheets = function (json) {\n    this.worksheets = new Worksheets();\n    var length = json.length;\n\n    for (var i = 0; i < length; i++) {\n      var jsonSheet = json[i];\n      var sheet = new Worksheet();\n      this.mergeCells = new MergeCells();\n      this.mergedCellsStyle = new Map();\n      this.mHyperLinks = []; //Name\n\n      if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n        sheet.name = jsonSheet.name;\n      } else {\n        sheet.name = 'Sheet' + (i + 1).toString();\n      }\n\n      sheet.index = i + 1; //Columns\n\n      if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n        this.parserColumns(jsonSheet.columns, sheet);\n      } //Rows\n\n\n      if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n        this.parserRows(jsonSheet.rows, sheet);\n      } //showGridLines\n\n\n      if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n        sheet.showGridLines = jsonSheet.showGridLines;\n      } //FreezePanes\n\n\n      if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n        this.parserFreezePanes(jsonSheet.freeze, sheet);\n      } //Print Title\n\n\n      if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n        this.parserPrintTitle(jsonSheet.printTitle, sheet);\n      }\n\n      if (jsonSheet.pageSetup !== undefined) {\n        if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n          sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n        }\n      }\n\n      if (jsonSheet.images !== undefined) {\n        this.parserImages(jsonSheet.images, sheet);\n      }\n\n      sheet.index = i + 1;\n      sheet.mergeCells = this.mergeCells;\n      sheet.hyperLinks = this.mHyperLinks;\n      this.worksheets.push(sheet);\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n    /* tslint:disable:no-any */\n    var result = {};\n    this.applyProperties(fromJson, result);\n    this.applyProperties(toJson, result);\n    return result;\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n    var keys = Object.keys(sourceJson);\n\n    for (var index = 0; index < keys.length; index++) {\n      if (keys[index] !== 'name') {\n        destJson[keys[index]] = sourceJson[keys[index]];\n      }\n    }\n  };\n\n  Workbook.prototype.getCellName = function (row, column) {\n    return this.getColumnName(column) + row.toString();\n  };\n\n  Workbook.prototype.getColumnName = function (col) {\n    col--;\n    var strColumnName = '';\n\n    do {\n      var iCurrentDigit = col % 26;\n      col = col / 26 - 1;\n      strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n    } while (col >= 0);\n\n    return strColumnName;\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserPrintTitle = function (json, sheet) {\n    var printTitleName = '';\n    var titleRowName;\n\n    if (json.fromRow !== null && json.fromRow !== undefined) {\n      var fromRow = json.fromRow;\n      var toRow = void 0;\n\n      if (json.toRow !== null && json.toRow !== undefined) {\n        toRow = json.toRow;\n      } else {\n        toRow = json.fromRow;\n      }\n\n      titleRowName = '$' + fromRow + ':$' + toRow;\n    }\n\n    var titleColName;\n\n    if (json.fromColumn !== null && json.fromColumn !== undefined) {\n      var fromColumn = json.fromColumn;\n      var toColumn = void 0;\n\n      if (json.toColumn !== null && json.toColumn !== undefined) {\n        toColumn = json.toColumn;\n      } else {\n        toColumn = json.fromColumn;\n      }\n\n      titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n    }\n\n    if (titleRowName !== undefined) {\n      printTitleName += sheet.name + '!' + titleRowName;\n    }\n\n    if (titleColName !== undefined && titleRowName !== undefined) {\n      printTitleName += ',' + (sheet.name + '!' + titleColName);\n    } else if (titleColName !== undefined) {\n      printTitleName += sheet.name + '!' + titleColName;\n    }\n\n    if (printTitleName !== '') {\n      this.printTitles.set(sheet.index - 1, printTitleName);\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserFreezePanes = function (json, sheet) {\n    sheet.freezePanes = new FreezePane();\n\n    if (json.row !== null && json.row !== undefined) {\n      sheet.freezePanes.row = json.row;\n    } else {\n      sheet.freezePanes.row = 0;\n    }\n\n    if (json.column !== null && json.column !== undefined) {\n      sheet.freezePanes.column = json.column;\n    } else {\n      sheet.freezePanes.column = 0;\n    }\n\n    sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserColumns = function (json, sheet) {\n    var columnsLength = json.length;\n    sheet.columns = [];\n\n    for (var column = 0; column < columnsLength; column++) {\n      var col = new Column();\n\n      if (json[column].index !== null && json[column].index !== undefined) {\n        col.index = json[column].index;\n      } else {\n        throw Error('Column index is missing.');\n      }\n\n      if (json[column].width !== null && json[column].width !== undefined) {\n        col.width = json[column].width;\n      }\n\n      sheet.columns.push(col);\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserRows = function (json, sheet) {\n    var rowsLength = json.length;\n    sheet.rows = new Rows();\n    var rowId = 0;\n\n    for (var r = 0; r < rowsLength; r++) {\n      var row = this.parserRow(json[r], rowId);\n      rowId = row.index;\n      sheet.rows.add(row);\n    }\n\n    this.insertMergedCellsStyle(sheet);\n  };\n\n  Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n    var _this = this;\n\n    if (this.mergeCells.length > 0) {\n      this.mergedCellsStyle.forEach(function (value, key) {\n        var row = sheet.rows.filter(function (item) {\n          return item.index === value.y;\n        })[0];\n\n        if (!isNullOrUndefined(row)) {\n          var cell = row.cells.filter(function (item) {\n            return item.index === value.x;\n          })[0];\n\n          if (!isNullOrUndefined(cell)) {\n            cell.styleIndex = value.styleIndex;\n          } else {\n            var cells = row.cells.filter(function (item) {\n              return item.index <= value.x;\n            });\n            var insertIndex = 0;\n\n            if (cells.length > 0) {\n              insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n            }\n\n            row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n          }\n        } else {\n          var rows = sheet.rows.filter(function (item) {\n            return item.index <= value.y;\n          });\n          var rowToInsert = new Row();\n          rowToInsert.index = value.y;\n          rowToInsert.cells = new Cells();\n          rowToInsert.cells.add(_this.createCell(value, key));\n          var insertIndex = 0;\n\n          if (rows.length > 0) {\n            insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n          }\n\n          sheet.rows.splice(insertIndex, 0, rowToInsert);\n        }\n      });\n    }\n  };\n\n  Workbook.prototype.createCell = function (value, key) {\n    var cellToInsert = new Cell();\n    cellToInsert.refName = key;\n    cellToInsert.index = value.x;\n    cellToInsert.cellStyle = new CellStyle();\n    cellToInsert.styleIndex = value.styleIndex;\n    return cellToInsert;\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserRow = function (json, rowIndex) {\n    var row = new Row(); //Row Height\n\n    if (json.height !== null && json.height !== undefined) {\n      row.height = json.height;\n    } //Row index\n\n\n    if (json.index !== null && json.index !== undefined) {\n      row.index = json.index;\n    } else {\n      throw Error('Row index is missing.');\n    }\n\n    if (json.grouping !== null && json.grouping !== undefined) {\n      this.parseGrouping(json.grouping, row);\n    }\n\n    this.parseCells(json.cells, row);\n    return row;\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parseGrouping = function (json, row) {\n    row.grouping = new Grouping();\n\n    if (json.outlineLevel !== undefined) {\n      row.grouping.outlineLevel = json.outlineLevel;\n    }\n\n    if (json.isCollapsed !== undefined) {\n      row.grouping.isCollapsed = json.isCollapsed;\n    }\n\n    if (json.isHidden !== undefined) {\n      row.grouping.isHidden = json.isHidden;\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parseCells = function (json, row) {\n    row.cells = new Cells();\n    var cellsLength = json !== undefined ? json.length : 0;\n    var spanMin = 1;\n    var spanMax = 1;\n    var curCellIndex = 0;\n\n    for (var cellId = 0; cellId < cellsLength; cellId++) {\n      /* tslint:disable:no-any */\n      var jsonCell = json[cellId];\n      var cell = new Cell(); //cell index\n\n      if (jsonCell.index !== null && jsonCell.index !== undefined) {\n        cell.index = jsonCell.index;\n      } else {\n        throw Error('Cell index is missing.');\n      }\n\n      if (cell.index < spanMin) {\n        spanMin = cell.index;\n      } else if (cell.index > spanMax) {\n        spanMax = cell.index;\n      } //Update the Cell name\n\n\n      cell.refName = this.getCellName(row.index, cell.index); //Row span\n\n      if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n        cell.rowSpan = jsonCell.rowSpan - 1;\n      } else {\n        cell.rowSpan = 0;\n      } //Column span\n\n\n      if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n        cell.colSpan = jsonCell.colSpan - 1;\n      } else {\n        cell.colSpan = 0;\n      } //Hyperlink\n\n\n      if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n        var hyperLink = new HyperLink();\n\n        if (jsonCell.hyperlink.target !== undefined) {\n          hyperLink.target = jsonCell.hyperlink.target;\n\n          if (jsonCell.hyperlink.displayText !== undefined) {\n            cell.value = jsonCell.hyperlink.displayText;\n          } else {\n            cell.value = jsonCell.hyperlink.target;\n          }\n\n          cell.type = this.getCellValueType(cell.value);\n          hyperLink.ref = cell.refName;\n          hyperLink.rId = this.mHyperLinks.length + 1;\n          this.mHyperLinks.push(hyperLink);\n          cell.cellStyle = new CellStyle();\n          /* tslint:disable-next-line:max-line-length */\n\n          this.parserCellStyle(jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle, cell.cellStyle, 'string');\n          cell.styleIndex = cell.cellStyle.index;\n        }\n      } // formulas\n\n\n      if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n        cell.formula = jsonCell.formula;\n        cell.type = 'formula';\n      } //Cell value\n\n\n      if (jsonCell.value !== null && jsonCell.value !== undefined) {\n        if (cell.formula !== undefined) {\n          cell.value = 0;\n        } else {\n          cell.value = jsonCell.value;\n          cell.type = this.getCellValueType(cell.value);\n        }\n      }\n\n      if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n        cell.cellStyle = new CellStyle();\n\n        if (cell.value instanceof Date) {\n          this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n        } else {\n          this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n        }\n\n        cell.styleIndex = cell.cellStyle.index;\n      } else if (cell.value instanceof Date) {\n        cell.cellStyle = new CellStyle();\n        this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n        cell.styleIndex = cell.cellStyle.index;\n      }\n\n      this.parseCellType(cell);\n      this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n      row.cells.add(cell);\n      curCellIndex = cell.index + 1;\n    }\n\n    row.spans = spanMin + ':' + spanMax;\n  };\n\n  Workbook.prototype.GetColors = function () {\n    var colors;\n    colors = new Map();\n    /* tslint:disable */\n\n    colors.set('WHITE', 'FFFFFFFF');\n    /* tslint:disable */\n\n    colors.set('SILVER', 'FFC0C0C0');\n    /* tslint:disable */\n\n    colors.set('GRAY', 'FF808080');\n    /* tslint:disable */\n\n    colors.set('BLACK', 'FF000000');\n    /* tslint:disable */\n\n    colors.set('RED', 'FFFF0000');\n    /* tslint:disable */\n\n    colors.set('MAROON', 'FF800000');\n    /* tslint:disable */\n\n    colors.set('YELLOW', 'FFFFFF00');\n    /* tslint:disable */\n\n    colors.set('OLIVE', 'FF808000');\n    /* tslint:disable */\n\n    colors.set('LIME', 'FF00FF00');\n    /* tslint:disable */\n\n    colors.set('GREEN', 'FF008000');\n    /* tslint:disable */\n\n    colors.set('AQUA', 'FF00FFFF');\n    /* tslint:disable */\n\n    colors.set('TEAL', 'FF008080');\n    /* tslint:disable */\n\n    colors.set('BLUE', 'FF0000FF');\n    /* tslint:disable */\n\n    colors.set('NAVY', 'FF000080');\n    /* tslint:disable */\n\n    colors.set('FUCHSIA', 'FFFF00FF');\n    /* tslint:disable */\n\n    colors.set('PURPLE', 'FF800080');\n    return colors;\n  };\n\n  Workbook.prototype.processColor = function (colorVal) {\n    if (colorVal.indexOf('#') === 0) {\n      return colorVal.replace('#', 'FF');\n    }\n\n    colorVal = colorVal.toUpperCase();\n    this.rgbColors = this.GetColors();\n\n    if (this.rgbColors.has(colorVal)) {\n      colorVal = this.rgbColors.get(colorVal);\n    } else {\n      colorVal = 'FF000000';\n    }\n\n    return colorVal;\n  };\n\n  Workbook.prototype.processCellValue = function (value, cell) {\n    var cellValue = value;\n\n    if (value.indexOf(\"<font\") !== -1 || value.indexOf(\"<a\") !== -1 || value.indexOf(\"<b>\") !== -1 || value.indexOf(\"<i>\") !== -1 || value.indexOf(\"<u>\") !== -1) {\n      var processedVal = '';\n      var startindex = value.indexOf('<', 0);\n      var endIndex = value.indexOf('>', startindex + 1);\n\n      if (startindex >= 0 && endIndex >= 0) {\n        if (startindex !== 0) {\n          processedVal += '<r><t xml:space=\"preserve\">' + value.substring(0, startindex) + '</t></r>';\n        }\n\n        while (startindex >= 0 && endIndex >= 0) {\n          endIndex = value.indexOf('>', startindex + 1);\n\n          if (endIndex >= 0) {\n            var subString = value.substring(startindex + 1, endIndex);\n            startindex = value.indexOf('<', endIndex + 1);\n\n            if (startindex < 0) {\n              startindex = cellValue.length;\n            }\n\n            var text = cellValue.substring(endIndex + 1, startindex);\n\n            if (text.length !== 0) {\n              var subSplit = subString.split(' ');\n\n              if (subSplit.length > 0) {\n                processedVal += '<r><rPr>';\n              }\n\n              if (subSplit.length > 1) {\n                for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                  var element = subSplit_1[_i];\n                  var start = element.trim().substring(0, 5);\n\n                  switch (start) {\n                    case 'size=':\n                      processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                      break;\n\n                    case 'face=':\n                      processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                      break;\n\n                    case 'color':\n                      processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                      break;\n\n                    case 'href=':\n                      var hyperLink = new HyperLink();\n                      hyperLink.target = element.substring(6, element.length - 1).trim();\n                      hyperLink.ref = cell.refName;\n                      hyperLink.rId = this.mHyperLinks.length + 1;\n                      this.mHyperLinks.push(hyperLink);\n                      processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                      break;\n                  }\n                }\n              } else if (subSplit.length === 1) {\n                var style = subSplit[0].trim();\n\n                switch (style) {\n                  case 'b':\n                    processedVal += '<b/>';\n                    break;\n\n                  case 'i':\n                    processedVal += '<i/>';\n                    break;\n\n                  case 'u':\n                    processedVal += '<u/>';\n                    break;\n                }\n              }\n\n              processedVal += '</rPr><t xml:space=\"preserve\">' + text + '</t></r>';\n            }\n          }\n        }\n\n        if (processedVal === '') {\n          return cellValue;\n        }\n\n        return processedVal;\n      } else {\n        return cellValue;\n      }\n    } else {\n      return cellValue;\n    }\n  };\n\n  Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n    var index = 0;\n\n    if (this.cellStyles.has(json.name)) {\n      cellStyle.index = this.mStyles.filter(function (a) {\n        return a.name === json.name;\n      })[0].index;\n      cellStyle.name = json.name;\n    }\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n    //name\n    if (json.name !== null && json.name !== undefined) {\n      if (cellStyle.isGlobalStyle) {\n        cellStyle.name = json.name;\n      } else {\n        this.applyGlobalStyle(json, cellStyle);\n        return;\n      }\n    } //background color\n\n\n    if (json.backColor !== null && json.backColor !== undefined) {\n      cellStyle.backColor = json.backColor;\n    } //borders\n    //leftBorder\n\n\n    cellStyle.borders = new Borders(); //AllBorder\n\n    if (json.borders !== null && json.borders !== undefined) {\n      this.parserBorder(json.borders, cellStyle.borders.all);\n    } //leftborder\n\n\n    if (json.leftBorder !== null && json.leftBorder !== undefined) {\n      this.parserBorder(json.leftBorder, cellStyle.borders.left);\n    } //rightBorder\n\n\n    if (json.rightBorder !== null && json.rightBorder !== undefined) {\n      this.parserBorder(json.rightBorder, cellStyle.borders.right);\n    } //topBorder\n\n\n    if (json.topBorder !== null && json.topBorder !== undefined) {\n      this.parserBorder(json.topBorder, cellStyle.borders.top);\n    } //bottomBorder\n\n\n    if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n      this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n    } //fontName\n\n\n    if (json.fontName !== null && json.fontName !== undefined) {\n      cellStyle.fontName = json.fontName;\n    } //fontSize\n\n\n    if (json.fontSize !== null && json.fontSize !== undefined) {\n      cellStyle.fontSize = json.fontSize;\n    } //fontColor\n\n\n    if (json.fontColor !== null && json.fontColor !== undefined) {\n      cellStyle.fontColor = json.fontColor;\n    } //italic\n\n\n    if (json.italic !== null && json.italic !== undefined) {\n      cellStyle.italic = json.italic;\n    } //bold\n\n\n    if (json.bold !== null && json.bold !== undefined) {\n      cellStyle.bold = json.bold;\n    } //hAlign\n\n\n    if (json.hAlign !== null && json.hAlign !== undefined) {\n      cellStyle.hAlign = json.hAlign.toLowerCase();\n    } //indent\n\n\n    if (json.indent !== null && json.indent !== undefined) {\n      cellStyle.indent = json.indent;\n\n      if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n        cellStyle.hAlign = 'left';\n      }\n    }\n\n    if (json.rotation !== null && json.rotation !== undefined) {\n      cellStyle.rotation = json.rotation;\n    } //vAlign\n\n\n    if (json.vAlign !== null && json.vAlign !== undefined) {\n      cellStyle.vAlign = json.vAlign.toLowerCase();\n    } //underline\n\n\n    if (json.underline !== null && json.underline !== undefined) {\n      cellStyle.underline = json.underline;\n    } //wrapText\n\n\n    if (json.wrapText !== null && json.wrapText !== undefined) {\n      cellStyle.wrapText = json.wrapText;\n    } //numberFormat\n\n\n    if (json.numberFormat !== null && json.numberFormat !== undefined) {\n      if (json.type !== null && json.type !== undefined) {\n        cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n      } else {\n        cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n      }\n    } else if (defStyleIndex !== undefined) {\n      cellStyle.numFmtId = 14;\n      cellStyle.numberFormat = 'GENERAL';\n    } else {\n      cellStyle.numberFormat = 'GENERAL';\n    }\n\n    cellStyle.index = this.processCellStyle(cellStyle);\n  };\n\n  Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n    var format = this.getNumberFormat(numberFormat, type);\n\n    if (format !== numberFormat) {\n      var numFmt = this.mNumFmt.get(numberFormat);\n\n      if (numFmt !== undefined) {\n        numFmt.formatCode = format;\n\n        if (this.mNumFmt.has(format)) {\n          for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n            var cellStyleXfs = _a[_i];\n\n            if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n              cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n            }\n          }\n\n          for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n            var cellXfs = _c[_b];\n\n            if (cellXfs.numFmtId === numFmt.numFmtId) {\n              cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n    var returnFormat;\n\n    switch (type) {\n      case 'number':\n        try {\n          returnFormat = this.intl.getNumberPattern({\n            format: numberFormat,\n            currency: this.currency,\n            useGrouping: true\n          });\n        } catch (error) {\n          returnFormat = numberFormat;\n        }\n\n        break;\n\n      case 'datetime':\n        try {\n          returnFormat = this.intl.getDatePattern({\n            skeleton: numberFormat,\n            type: 'dateTime'\n          }, true);\n        } catch (error) {\n          try {\n            returnFormat = this.intl.getDatePattern({\n              format: numberFormat,\n              type: 'dateTime'\n            }, true);\n          } catch (error) {\n            returnFormat = numberFormat;\n          }\n        }\n\n        break;\n\n      case 'date':\n        try {\n          returnFormat = this.intl.getDatePattern({\n            skeleton: numberFormat,\n            type: 'date'\n          }, true);\n        } catch (error) {\n          try {\n            returnFormat = this.intl.getDatePattern({\n              format: numberFormat,\n              type: 'date'\n            }, true);\n          } catch (error) {\n            returnFormat = numberFormat;\n          }\n        }\n\n        break;\n\n      case 'time':\n        try {\n          returnFormat = this.intl.getDatePattern({\n            skeleton: numberFormat,\n            type: 'time'\n          }, true);\n        } catch (error) {\n          try {\n            returnFormat = this.intl.getDatePattern({\n              format: numberFormat,\n              type: 'time'\n            }, true);\n          } catch (error) {\n            returnFormat = numberFormat;\n          }\n        }\n\n        break;\n\n      default:\n        returnFormat = numberFormat;\n        break;\n    }\n\n    return returnFormat;\n  };\n  /* tslint:disable:no-any */\n\n\n  Workbook.prototype.parserBorder = function (json, border) {\n    if (json.color !== null && json.color !== undefined) {\n      border.color = json.color;\n    } else {\n      border.color = '#000000';\n    }\n\n    if (json.lineStyle !== null && json.lineStyle !== undefined) {\n      border.lineStyle = json.lineStyle;\n    } else {\n      border.lineStyle = 'thin';\n    }\n  };\n\n  Workbook.prototype.processCellStyle = function (style) {\n    if (style.isGlobalStyle) {\n      this.processNumFormatId(style);\n      this.mStyles.push(style);\n      return this.mStyles.length;\n    } else {\n      var compareResult = this.compareStyle(style);\n\n      if (!compareResult.result) {\n        this.processNumFormatId(style);\n        this.mStyles.push(style);\n        return this.mStyles.length;\n      } else {\n        //Return the index of the already existing style.\n        return compareResult.index;\n      }\n    }\n  };\n\n  Workbook.prototype.processNumFormatId = function (style) {\n    if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n      var id = this.mNumFmt.size + 164;\n      this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n    }\n  };\n\n  Workbook.prototype.isNewFont = function (toCompareStyle) {\n    var result = false;\n    var index = 0;\n\n    for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n      var font = _a[_i];\n      index++;\n      var fontColor = undefined;\n\n      if (toCompareStyle.fontColor !== undefined) {\n        fontColor = 'FF' + toCompareStyle.fontColor.replace('#', '');\n      }\n\n      result = font.color === fontColor && font.b === toCompareStyle.bold && font.i === toCompareStyle.italic && font.u === toCompareStyle.underline && font.name === toCompareStyle.fontName && font.sz === toCompareStyle.fontSize;\n\n      if (result) {\n        break;\n      }\n    }\n\n    index = index - 1;\n    return {\n      index: index,\n      result: result\n    };\n  };\n\n  Workbook.prototype.isNewBorder = function (toCompareStyle) {\n    var bStyle = new CellStyle();\n\n    if (this.isAllBorder(toCompareStyle.borders)) {\n      return bStyle.borders.all.color === toCompareStyle.borders.all.color && bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle;\n    } else {\n      return bStyle.borders.left.color === toCompareStyle.borders.left.color && bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle && bStyle.borders.right.color === toCompareStyle.borders.right.color && bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle && bStyle.borders.top.color === toCompareStyle.borders.top.color && bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle && bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color && bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle;\n    }\n  };\n\n  Workbook.prototype.isAllBorder = function (toCompareBorder) {\n    var allBorderStyle = new CellStyle();\n    return allBorderStyle.borders.all.color !== toCompareBorder.all.color && allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n  };\n\n  Workbook.prototype.compareStyle = function (toCompareStyle) {\n    var result = true;\n    var index = 0;\n    var globalStyleIndex = 0;\n\n    for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n      var baseStyle = _a[_i];\n      result = baseStyle.isGlobalStyle ? false : baseStyle.backColor === toCompareStyle.backColor && baseStyle.bold === toCompareStyle.bold && baseStyle.numFmtId === toCompareStyle.numFmtId && baseStyle.numberFormat === toCompareStyle.numberFormat && baseStyle.type === toCompareStyle.type && baseStyle.fontColor === toCompareStyle.fontColor && baseStyle.fontName === toCompareStyle.fontName && baseStyle.fontSize === toCompareStyle.fontSize && baseStyle.hAlign === toCompareStyle.hAlign && baseStyle.italic === toCompareStyle.italic && baseStyle.underline === toCompareStyle.underline && baseStyle.vAlign === toCompareStyle.vAlign && baseStyle.indent === toCompareStyle.indent && baseStyle.rotation === toCompareStyle.rotation && baseStyle.wrapText === toCompareStyle.wrapText && baseStyle.borders.all.color === toCompareStyle.borders.all.color && baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle && baseStyle.borders.left.color === toCompareStyle.borders.left.color && baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle && baseStyle.borders.right.color === toCompareStyle.borders.right.color && baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle && baseStyle.borders.top.color === toCompareStyle.borders.top.color && baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle && baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color && baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle;\n\n      if (result) {\n        index = baseStyle.index;\n        break;\n      }\n    }\n\n    return {\n      index: index,\n      result: result\n    };\n  };\n\n  Workbook.prototype.contains = function (array, item) {\n    var index = array.indexOf(item);\n    return index > -1 && index < array.length;\n  };\n\n  Workbook.prototype.getCellValueType = function (value) {\n    if (value instanceof Date) {\n      return 'datetime';\n    } else if (typeof value === 'boolean') {\n      return 'boolean';\n    } else if (typeof value === 'number') {\n      return 'number';\n    } else {\n      return 'string';\n    }\n  };\n\n  Workbook.prototype.parseCellType = function (cell) {\n    var type = cell.type;\n    var saveType;\n    var value = cell.value;\n\n    switch (type) {\n      case 'datetime':\n        value = this.toOADate(value);\n\n        if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n          if (this.globalStyles.has(cell.cellStyle.name)) {\n            var value_1 = this.globalStyles.get(cell.cellStyle.name);\n            this.switchNumberFormat(value_1.format, value_1.type);\n          }\n        }\n\n        saveType = 'n';\n        break;\n      //TODO: Update the number format index and style\n\n      case 'boolean':\n        value = value ? 1 : 0;\n        saveType = 'b';\n        break;\n\n      case 'number':\n        saveType = 'n';\n\n        if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n          if (this.globalStyles.has(cell.cellStyle.name)) {\n            this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n          }\n        }\n\n        break;\n\n      case 'string':\n        this.sharedStringCount++;\n        saveType = 's';\n        var sstvalue = this.processCellValue(value, cell);\n\n        if (!this.contains(this.sharedString, sstvalue)) {\n          this.sharedString.push(sstvalue);\n        }\n\n        value = this.sharedString.indexOf(sstvalue);\n        break;\n\n      default:\n        break;\n    }\n\n    cell.saveType = saveType;\n    cell.value = value;\n  };\n\n  Workbook.prototype.parserImages = function (json, sheet) {\n    var imagesLength = json.length;\n    sheet.images = [];\n    var imageId = 0;\n\n    for (var p = 0; p < imagesLength; p++) {\n      var image = this.parserImage(json[p]);\n      sheet.images.push(image);\n    }\n  };\n\n  Workbook.prototype.parserImage = function (json) {\n    var image = new Image();\n\n    if (json.image !== null && json.image !== undefined) {\n      image.image = json.image;\n    }\n\n    if (json.row !== null && json.row !== undefined) {\n      image.row = json.row;\n    }\n\n    if (json.column !== null && json.column !== undefined) {\n      image.column = json.column;\n    }\n\n    if (json.lastRow !== null && json.lastRow !== undefined) {\n      image.lastRow = json.lastRow;\n    }\n\n    if (json.lastColumn !== null && json.lastColumn !== undefined) {\n      image.lastColumn = json.lastColumn;\n    }\n\n    if (json.width !== null && json.width !== undefined) {\n      image.width = json.width;\n    }\n\n    if (json.height !== null && json.height !== undefined) {\n      image.height = json.height;\n    }\n\n    if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n      image.horizontalFlip = json.horizontalFlip;\n    }\n\n    if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n      image.verticalFlip = json.verticalFlip;\n    }\n\n    if (json.rotation !== null && json.rotation !== undefined) {\n      image.rotation = json.rotation;\n    }\n\n    return image;\n  };\n\n  Workbook.prototype.saveAsBlob = function (blobSaveType) {\n    var _this = this;\n\n    switch (blobSaveType) {\n      case 'text/csv':\n        return new Promise(function (resolve, reject) {\n          var obj = {};\n          obj.blobData = _this.csvHelper.saveAsBlob();\n          resolve(obj);\n        });\n\n      default:\n        return new Promise(function (resolve, reject) {\n          _this.saveInternal();\n\n          _this.mArchive.saveAsBlob().then(function (blob) {\n            var obj = {};\n            obj.blobData = new Blob([blob], {\n              type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            });\n            resolve(obj);\n          });\n        });\n    }\n  };\n\n  Workbook.prototype.save = function (fileName, proxyUrl) {\n    var _this = this;\n\n    if (fileName === null || fileName === undefined || fileName === '') {\n      throw new Error('Argument Null Exception: fileName cannot be null or empty');\n    }\n\n    var xlsxMatch = fileName.match('.xlsx$');\n    var csvMatch = fileName.match('.csv$');\n\n    if (xlsxMatch !== null && xlsxMatch[0] === '.' + this.mSaveType) {\n      this.saveInternal();\n      this.mArchive.save(fileName).then(function () {\n        _this.mArchive.destroy();\n      });\n    } else if (csvMatch !== null && csvMatch[0] === '.' + this.mSaveType) {\n      this.csvHelper.save(fileName);\n    } else {\n      throw Error('Save type and file extension is different.');\n    }\n  };\n\n  Workbook.prototype.saveInternal = function () {\n    this.saveWorkbook();\n    this.saveWorksheets();\n    this.saveSharedString();\n    this.saveStyles();\n    this.saveApp(this.builtInProperties);\n    this.saveCore(this.builtInProperties);\n    this.saveContentType();\n    this.saveTopLevelRelation();\n    this.saveWorkbookRelation();\n  };\n\n  Workbook.prototype.saveWorkbook = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n    var sheets = '<sheets>';\n    var length = this.worksheets.length;\n\n    for (var i = 0; i < length; i++) {\n      /* tslint:disable-next-line:max-line-length */\n      sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n    }\n\n    sheets += '</sheets>';\n    workbookTemp += sheets;\n\n    if (this.printTitles.size > 0) {\n      var printTitle_1 = '<definedNames>';\n      this.printTitles.forEach(function (value, key) {\n        printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n      });\n      printTitle_1 += '</definedNames>';\n      workbookTemp += printTitle_1;\n    }\n\n    this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n  };\n\n  Workbook.prototype.saveWorksheets = function () {\n    var length = this.worksheets.length;\n\n    for (var i = 0; i < length; i++) {\n      this.saveWorksheet(this.worksheets[i], i);\n    }\n  };\n\n  Workbook.prototype.saveWorksheet = function (sheet, index) {\n    var sheetBlob = new BlobHelper();\n    /* tslint:disable-next-line:max-line-length */\n\n    var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n\n    if (!sheet.isSummaryRowBelow) {\n      sheetString += '<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>';\n    } else {\n      sheetString += '<sheetPr />';\n    }\n\n    sheetString += this.saveSheetView(sheet);\n\n    if (sheet.columns !== undefined) {\n      var colString = '<cols>';\n\n      for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n        /* tslint:disable-next-line:max-line-length */\n\n        if (column.width !== undefined) {\n          colString += '<col min=\"' + column.index + '\" max=\"' + column.index + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n        } else {\n          colString += '<col min=\"' + column.index + '\" max=\"' + column.index + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n        }\n      }\n\n      sheetString += colString + '</cols>';\n    }\n\n    sheetString += '<sheetData>';\n    sheetBlob.append(sheetString);\n    sheetString = '';\n\n    if (sheet.rows !== undefined) {\n      for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n        var row = _c[_b];\n        var rowString = '<row r=\"' + row.index + '\" ';\n\n        if (!isNullOrUndefined(row.spans)) {\n          rowString += 'spans=\"' + row.spans + '\" ';\n        }\n\n        if (row.height !== undefined) {\n          rowString += 'ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ';\n        }\n\n        if (row.grouping !== undefined) {\n          if (row.grouping.isHidden) {\n            rowString += 'hidden=\"1\" ';\n          }\n\n          if (row.grouping.outlineLevel !== undefined) {\n            rowString += 'outlineLevel=\"' + row.grouping.outlineLevel + '\" ';\n          }\n\n          if (row.grouping.isCollapsed) {\n            rowString += 'collapsed=\"1\" ';\n          }\n        }\n\n        rowString += '>';\n\n        for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n          var cell = _e[_d];\n\n          if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n            rowString += '<c r=\"' + cell.refName + '\" ';\n\n            if (cell.saveType !== undefined) {\n              rowString += 't=\"' + cell.saveType + '\" ';\n            }\n\n            if (cell.styleIndex !== undefined) {\n              rowString += 's=\"' + cell.styleIndex + '\" ';\n            }\n\n            rowString += ' >';\n\n            if (cell.formula !== undefined) {\n              rowString += '<f>' + cell.formula + '</f>';\n            }\n\n            if (cell.value !== undefined) {\n              rowString += '<v>' + cell.value + '</v></c>';\n            } else {\n              rowString += '</c>';\n            }\n          }\n        }\n\n        rowString += '</row>';\n        sheetBlob.append(rowString);\n      }\n    }\n\n    sheetString += '</sheetData>';\n\n    if (sheet.mergeCells.length > 0) {\n      sheetString += '<mergeCells count=\"' + sheet.mergeCells.length + '\">';\n\n      for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n        var mCell = _g[_f];\n        sheetString += '<mergeCell ref=\"' + mCell.ref + '\" />';\n      }\n\n      sheetString += '</mergeCells>';\n    }\n\n    if (sheet.hyperLinks.length > 0) {\n      sheetString += '<hyperlinks>';\n\n      for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n        var hLink = _j[_h];\n        sheetString += '<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />';\n      }\n\n      sheetString += '</hyperlinks>';\n    }\n    /* tslint:disable-next-line:max-line-length */\n\n\n    sheetString += '<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />';\n\n    if (sheet.images != undefined && sheet.images.length > 0) {\n      this.drawingCount++;\n      this.saveDrawings(sheet, sheet.index);\n      sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n    }\n\n    this.addToArchive(this.saveSheetRelations(sheet), 'xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels');\n    sheetBlob.append(sheetString + '</worksheet>');\n    this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n  };\n\n  Workbook.prototype.saveDrawings = function (sheet, index) {\n    var drawings = new BlobHelper();\n    /* tslint:disable-next-line:max-line-length */\n\n    var sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n\n    if (sheet.images !== undefined) {\n      var imgId = 0;\n\n      for (var _i = 0, _a = sheet.images; _i < _a.length; _i++) {\n        var pic = _a[_i];\n\n        if (pic.height !== undefined && pic.width !== undefined) {\n          this.updatelastRowOffset(sheet, pic);\n          this.updatelastColumnOffSet(sheet, pic);\n        } else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n          pic.lastRowOffset = 0;\n          pic.lastColOffset = 0;\n        }\n\n        imgId++;\n        sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n        sheetDrawingString += '<xdr:from><xdr:col>'; //col\n\n        sheetDrawingString += pic.column - 1;\n        sheetDrawingString += '</xdr:col><xdr:colOff>'; //colOff\n\n        sheetDrawingString += 0;\n        sheetDrawingString += '</xdr:colOff><xdr:row>'; //row\n\n        sheetDrawingString += pic.row - 1;\n        sheetDrawingString += '</xdr:row><xdr:rowOff>'; //rowOff\n\n        sheetDrawingString += 0;\n        sheetDrawingString += '</xdr:rowOff></xdr:from>';\n        sheetDrawingString += '<xdr:to><xdr:col>'; //col\n\n        sheetDrawingString += pic.lastColumn;\n        sheetDrawingString += '</xdr:col><xdr:colOff>'; //colOff\n\n        sheetDrawingString += pic.lastColOffset;\n        sheetDrawingString += '</xdr:colOff><xdr:row>'; //row\n\n        sheetDrawingString += pic.lastRow;\n        sheetDrawingString += '</xdr:row><xdr:rowOff>'; //rowOff\n\n        sheetDrawingString += pic.lastRowOffset;\n        sheetDrawingString += '</xdr:rowOff></xdr:to>';\n        sheetDrawingString += '<xdr:pic>';\n        sheetDrawingString += '<xdr:nvPicPr>';\n        sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n        sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n        sheetDrawingString += '<xdr:blipFill>';\n        /* tslint:disable-next-line:max-line-length */\n\n        sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n        sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n        sheetDrawingString += '<xdr:spPr>';\n        sheetDrawingString += '<a:xfrm';\n\n        if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n          sheetDrawingString += ' rot=\"' + pic.rotation * 60000 + '\"';\n        }\n\n        if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n          sheetDrawingString += ' flipV=\"1\"';\n        }\n\n        if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n          sheetDrawingString += ' flipH=\"1\"';\n        }\n\n        sheetDrawingString += '/>';\n        sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n        sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n        var imageFile = new BlobHelper();\n        var imageData = this.convertBase64toImage(pic.image);\n        this.imageCount += 1;\n        this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n      }\n\n      drawings.append(sheetDrawingString);\n      drawings.append('</xdr:wsDr>');\n      this.saveDrawingRelations(sheet);\n      this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n    }\n  };\n\n  Workbook.prototype.updatelastRowOffset = function (sheet, picture) {\n    var iCurHeight = picture.height;\n    var iCurRow = picture.row;\n    var iCurOffset = 0;\n\n    while (iCurHeight >= 0) {\n      var iRowHeight = 0;\n      if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined) iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);else iRowHeight = this.convertToPixels(15);\n      var iSpaceInCell = iRowHeight - iCurOffset * iRowHeight / 256;\n\n      if (iSpaceInCell > iCurHeight) {\n        picture.lastRow = iCurRow;\n        picture.lastRowOffset = iCurOffset + iCurHeight * 256 / iRowHeight;\n        var rowHiddenHeight = 0;\n        if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined) rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);else rowHiddenHeight = this.convertToPixels(15);\n        picture.lastRowOffset = rowHiddenHeight * picture.lastRowOffset / 256;\n        picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n        break;\n      } else {\n        iCurHeight -= iSpaceInCell;\n        iCurRow++;\n        iCurOffset = 0;\n      }\n    }\n  };\n\n  Workbook.prototype.updatelastColumnOffSet = function (sheet, picture) {\n    var iCurWidth = picture.width;\n    var iCurCol = picture.column;\n    var iCurOffset = 0;\n\n    while (iCurWidth >= 0) {\n      var iColWidth = 0;\n      if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined) iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);else iColWidth = this.ColumnWidthToPixels(8.43);\n      var iSpaceInCell = iColWidth - iCurOffset * iColWidth / 1024;\n\n      if (iSpaceInCell > iCurWidth) {\n        picture.lastColumn = iCurCol;\n        picture.lastColOffset = iCurOffset + iCurWidth * 1024 / iColWidth;\n        var colHiddenWidth = 0;\n        if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined) colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol].width);else colHiddenWidth = this.ColumnWidthToPixels(8.43);\n        picture.lastColOffset = colHiddenWidth * picture.lastColOffset / 1024;\n        picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n        break;\n      } else {\n        iCurWidth -= iSpaceInCell;\n        iCurCol++;\n        iCurOffset = 0;\n      }\n    }\n  };\n\n  Workbook.prototype.convertToPixels = function (value) {\n    return value * this.unitsProportions[6];\n  };\n\n  Workbook.prototype.convertBase64toImage = function (img) {\n    var byteStr = window.atob(img);\n    var buffer = new ArrayBuffer(byteStr.length);\n    var data = new Uint8Array(buffer);\n\n    for (var i = 0; i < byteStr.length; i++) {\n      data[i] = byteStr.charCodeAt(i);\n    }\n\n    var blob = new Blob([data], {\n      type: 'image/png'\n    });\n    return blob;\n  };\n\n  Workbook.prototype.saveDrawingRelations = function (sheet) {\n    /* tslint:disable-next-line:max-line-length */\n    var drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n    var length = sheet.images.length;\n    var id = this.imageCount - sheet.images.length;\n\n    for (var i = 1; i <= length; i++) {\n      id++;\n      /* tslint:disable-next-line:max-line-length */\n\n      drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n    }\n\n    this.addToArchive(drawingRelation + '</Relationships>', 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n  };\n\n  Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n    var dDigitWidth = 7;\n    var val = pixels > dDigitWidth + 5 ? this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 : pixels / (dDigitWidth + 5);\n    return val > 1 ? (val * dDigitWidth + 5) / dDigitWidth * 256.0 / 256.0 : val * (dDigitWidth + 5) / dDigitWidth * 256.0 / 256.0;\n  };\n\n  Workbook.prototype.ColumnWidthToPixels = function (val) {\n    var dDigitWidth = 7;\n    var fileWidth = val > 1 ? (val * dDigitWidth + 5) / dDigitWidth * 256.0 / 256.0 : val * (dDigitWidth + 5) / dDigitWidth * 256.0 / 256.0;\n    return this.trunc((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256 * dDigitWidth);\n  };\n\n  Workbook.prototype.trunc = function (x) {\n    var n = x - x % 1;\n    return n === 0 && (x < 0 || x === 0 && 1 / x !== 1 / 0) ? -0 : n;\n  };\n\n  Workbook.prototype.pixelsToRowHeight = function (pixels) {\n    return pixels * this.unitsProportions[5] / this.unitsProportions[6];\n  };\n\n  Workbook.prototype.saveSheetRelations = function (sheet) {\n    /* tslint:disable-next-line:max-line-length */\n    var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n\n    for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n      var hLink = _a[_i];\n      /* tslint:disable-next-line:max-line-length */\n\n      relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n    }\n\n    if (sheet.images != undefined && sheet.images.length > 0) {\n      /* tslint:disable-next-line:max-line-length */\n      relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n    }\n\n    relStr += '</Relationships>';\n    return relStr;\n  };\n\n  Workbook.prototype.saveSheetView = function (sheet) {\n    var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n\n    if (sheet.showGridLines === false) {\n      paneString += 'showGridLines=\"0\" >';\n    } else {\n      paneString += '>';\n    }\n\n    if (sheet.freezePanes !== undefined) {\n      paneString += '<pane state=\"frozen\"' + ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n\n      if (sheet.freezePanes.row !== 0) {\n        paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n      }\n\n      if (sheet.freezePanes.column !== 0) {\n        paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n      }\n\n      paneString += '/>';\n    }\n\n    paneString += '</sheetView></sheetViews > ';\n    return paneString;\n  };\n\n  Workbook.prototype.saveSharedString = function () {\n    var length = this.sharedString.length;\n\n    if (length > 0) {\n      /* tslint:disable-next-line:max-line-length */\n      var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n      var si = '';\n\n      for (var i = 0; i < length; i++) {\n        if (this.sharedString[i].indexOf('<r>') !== 0) {\n          si += '<si><t>';\n          si += this.processString(this.sharedString[i]);\n          si += '</t></si>';\n        } else {\n          si += '<si>';\n          si += this.sharedString[i];\n          si += '</si>';\n        }\n      }\n\n      si += '</sst>';\n      this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n    }\n  };\n\n  Workbook.prototype.processString = function (value) {\n    if (value.indexOf('&') !== -1) {\n      value = value.replace(/&/g, '&amp;');\n    }\n\n    if (value.indexOf('<') !== -1) {\n      value = value.replace(/</g, '&lt;');\n    }\n\n    if (value.indexOf('>') !== -1) {\n      value = value.replace(/>/g, '&gt;');\n    }\n\n    return value;\n  };\n\n  Workbook.prototype.saveStyles = function () {\n    this.updateCellXfsStyleXfs();\n    /* tslint:disable-next-line:max-line-length */\n\n    var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n    styleTemp += this.saveNumberFormats();\n    styleTemp += this.saveFonts();\n    styleTemp += this.saveFills();\n    styleTemp += this.saveBorders();\n    styleTemp += this.saveCellStyleXfs();\n    styleTemp += this.saveCellXfs();\n    styleTemp += this.saveCellStyles();\n    this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n  };\n\n  Workbook.prototype.updateCellXfsStyleXfs = function () {\n    for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n      var style = _a[_i];\n      var cellXfs = undefined;\n\n      if (style.isGlobalStyle) {\n        cellXfs = new CellStyleXfs();\n        cellXfs.xfId = style.index - 1;\n      } else {\n        cellXfs = new CellXfs();\n        cellXfs.xfId = 0;\n      } //Add font\n\n\n      var compareFontResult = this.isNewFont(style);\n\n      if (!compareFontResult.result) {\n        var font = new Font();\n        font.b = style.bold;\n        font.i = style.italic;\n        font.name = style.fontName;\n        font.sz = style.fontSize;\n        font.u = style.underline;\n        font.color = 'FF' + style.fontColor.replace('#', '');\n        this.mFonts.push(font);\n        cellXfs.fontId = this.mFonts.length - 1;\n      } else {\n        cellXfs.fontId = compareFontResult.index;\n      } //Add fill\n\n\n      if (style.backColor !== 'none') {\n        var backColor = 'FF' + style.backColor.replace('#', '');\n\n        if (this.mFills.has(backColor)) {\n          var fillId = this.mFills.get(backColor);\n          cellXfs.fillId = fillId;\n        } else {\n          var fillId = this.mFills.size + 2;\n          this.mFills.set(backColor, fillId);\n          cellXfs.fillId = fillId;\n        }\n      } else {\n        cellXfs.fillId = 0;\n      } //Add border            \n\n\n      if (!this.isNewBorder(style)) {\n        this.mBorders.push(style.borders);\n        cellXfs.borderId = this.mBorders.length;\n      } else {\n        cellXfs.borderId = 0;\n      } //Add Number Format            \n\n\n      if (style.numberFormat !== 'GENERAL') {\n        if (this.mNumFmt.has(style.numberFormat)) {\n          var numFmt = this.mNumFmt.get(style.numberFormat);\n          cellXfs.numFmtId = numFmt.numFmtId;\n        } else {\n          var id = this.mNumFmt.size + 164;\n          this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n          cellXfs.numFmtId = id;\n        }\n      } else {\n        if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n          cellXfs.numFmtId = 14;\n        } else {\n          cellXfs.numFmtId = 0;\n        }\n      } //Add alignment            \n\n\n      if (!style.isGlobalStyle) {\n        cellXfs.applyAlignment = 1;\n      }\n\n      cellXfs.alignment = new Alignment();\n      cellXfs.alignment.indent = style.indent;\n      cellXfs.alignment.horizontal = style.hAlign;\n      cellXfs.alignment.vertical = style.vAlign;\n      cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n      cellXfs.alignment.rotation = style.rotation;\n\n      if (style.isGlobalStyle) {\n        this.mCellStyleXfs.push(cellXfs);\n        this.mCellXfs.push(cellXfs);\n      } else {\n        //Add cellxfs\n        this.mCellXfs.push(cellXfs);\n      }\n    }\n  };\n\n  Workbook.prototype.saveNumberFormats = function () {\n    if (this.mNumFmt.size >= 1) {\n      var numFmtStyle_1 = '<numFmts count=\"' + this.mNumFmt.size + '\">';\n      this.mNumFmt.forEach(function (value, key) {\n        numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n      });\n      return numFmtStyle_1 += '</numFmts>';\n    } else {\n      return '';\n    }\n  };\n\n  Workbook.prototype.saveFonts = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var fontStyle = '<fonts count=\"' + this.mFonts.length + '\">';\n\n    if (this.mFonts.length >= 1) {\n      for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n        var font = _a[_i];\n        fontStyle += '<font>';\n\n        if (font.b) {\n          fontStyle += '<b />';\n        }\n\n        if (font.i) {\n          fontStyle += '<i />';\n        }\n\n        if (font.u) {\n          fontStyle += '<u />';\n        }\n\n        fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n        fontStyle += '<color rgb=\"' + font.color + '\" />';\n        fontStyle += '<name val=\"' + font.name + '\" /></font>';\n      }\n    }\n\n    return fontStyle + '</fonts>';\n  };\n\n  Workbook.prototype.saveFills = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n\n    if (this.mFills.size >= 1) {\n      this.mFills.forEach(function (value, key) {\n        /* tslint:disable-next-line:max-line-length */\n        fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n      });\n    }\n\n    return fillsStyle + '</fills>';\n  };\n\n  Workbook.prototype.saveBorders = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n\n    if (this.mBorders.length >= 1) {\n      for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n        var borders = _a[_i];\n\n        if (this.isAllBorder(borders)) {\n          var color = borders.all.color.replace('#', '');\n          var lineStyle = borders.all.lineStyle;\n          /* tslint:disable-next-line:max-line-length */\n\n          bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n        } else {\n          /* tslint:disable-next-line:max-line-length */\n          bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n        }\n      }\n    }\n\n    return bordersStyle + '</borders>';\n  };\n\n  Workbook.prototype.saveCellStyles = function () {\n    var _this = this;\n\n    var cellStyleString = '<cellStyles  count=\"' + this.cellStyles.size + '\">';\n    this.cellStyles.forEach(function (value, key) {\n      cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n\n      if (key === 'Normal') {\n        cellStyleString += ' builtinId=\"0\"';\n      }\n\n      cellStyleString += ' />';\n    });\n    return cellStyleString += '</cellStyles>';\n  };\n\n  Workbook.prototype.saveCellStyleXfs = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n\n    if (this.mCellStyleXfs.length >= 1) {\n      for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n        var cellStyleXf = _a[_i];\n        /* tslint:disable-next-line:max-line-length */\n\n        cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n\n        if (cellStyleXf.alignment !== undefined) {\n          cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n        } else {\n          cellXfsStyle += ' />';\n        }\n      }\n    }\n\n    return cellXfsStyle + '</cellStyleXfs>';\n  };\n\n  Workbook.prototype.saveCellXfs = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n\n    if (this.mCellXfs.length >= 1) {\n      for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n        var cellXf = _a[_i];\n        /* tslint:disable-next-line:max-line-length */\n\n        cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n\n        if (cellXf.applyAlignment === 1) {\n          cellXfsStyle += 'applyAlignment=\"1\"';\n        }\n\n        cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n      }\n    }\n\n    return cellXfsStyle + '</cellXfs>';\n  };\n\n  Workbook.prototype.saveAlignment = function (cellXf) {\n    var alignString = '<alignment ';\n\n    if (cellXf.alignment.horizontal !== undefined) {\n      alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n    }\n\n    if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n      alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n    } else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n      alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n    }\n\n    if (cellXf.alignment.vertical !== undefined) {\n      alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n    }\n\n    alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n    return alignString;\n  };\n\n  Workbook.prototype.saveApp = function (builtInProperties) {\n    /* tslint:disable-next-line:max-line-length */\n    var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n\n    if (builtInProperties !== undefined) {\n      if (builtInProperties.manager !== undefined) {\n        appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n      }\n\n      if (builtInProperties.company !== undefined) {\n        appString += '<Company>' + builtInProperties.company + '</Company>';\n      }\n    }\n\n    this.addToArchive(appString + '</Properties>', 'docProps/app.xml');\n  };\n\n  Workbook.prototype.saveCore = function (builtInProperties) {\n    var createdDate = new Date();\n    /* tslint:disable-next-line:max-line-length */\n\n    var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n\n    if (this.builtInProperties !== undefined) {\n      if (builtInProperties.author !== undefined) {\n        coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n      }\n\n      if (builtInProperties.subject !== undefined) {\n        coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n      }\n\n      if (builtInProperties.category !== undefined) {\n        coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n      }\n\n      if (builtInProperties.comments !== undefined) {\n        coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n      }\n\n      if (builtInProperties.title !== undefined) {\n        coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n      }\n\n      if (builtInProperties.tags !== undefined) {\n        coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n      }\n\n      if (builtInProperties.status !== undefined) {\n        coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n      }\n\n      if (builtInProperties.createdDate !== undefined) {\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n      } else {\n        coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n      }\n\n      if (builtInProperties.modifiedDate !== undefined) {\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n      } else {\n        coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n      }\n    } else {\n      coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n      coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n    }\n    /* tslint:disable-next-line:max-line-length */\n\n\n    coreString += '</cp:coreProperties>';\n    this.addToArchive(coreString, 'docProps/core.xml');\n  };\n\n  Workbook.prototype.saveTopLevelRelation = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n    this.addToArchive(topRelation, '_rels/.rels');\n  };\n\n  Workbook.prototype.saveWorkbookRelation = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n    var length = this.worksheets.length;\n    var count = 0;\n\n    for (var i = 0; i < length; i++, count++) {\n      /* tslint:disable-next-line:max-line-length */\n      wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n    }\n    /* tslint:disable-next-line:max-line-length */\n\n\n    wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n\n    if (this.sharedStringCount > 0) {\n      /* tslint:disable-next-line:max-line-length */\n      wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n    }\n\n    this.addToArchive(wbRelation + '</Relationships>', 'xl/_rels/workbook.xml.rels');\n  };\n\n  Workbook.prototype.saveContentType = function () {\n    /* tslint:disable-next-line:max-line-length */\n    var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n    var sheetsOverride = '';\n    var length = this.worksheets.length;\n\n    for (var i = 0; i < length; i++) {\n      /* tslint:disable-next-line:max-line-length */\n      sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n\n      if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n        /* tslint:disable-next-line:max-line-length */\n        sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n      }\n    }\n\n    if (this.imageCount > 0) sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n\n    if (this.sharedStringCount > 0) {\n      /* tslint:disable-next-line:max-line-length */\n      contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n    }\n\n    this.addToArchive(contentTypeString + sheetsOverride + '</Types>', '[Content_Types].xml');\n  };\n\n  Workbook.prototype.addToArchive = function (xmlString, itemName) {\n    if (typeof xmlString === 'string') {\n      var blob = new Blob([xmlString], {\n        type: 'text/plain'\n      });\n      var archiveItem = new ZipArchiveItem(blob, itemName);\n      this.mArchive.addItem(archiveItem);\n    } else {\n      var archiveItem = new ZipArchiveItem(xmlString, itemName);\n      this.mArchive.addItem(archiveItem);\n    }\n  };\n\n  Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n    if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n      var mCell = new MergeCell();\n      mCell.x = cell.index;\n      mCell.width = cell.colSpan;\n      mCell.y = rowIndex;\n      mCell.height = cell.rowSpan;\n      var startCell = this.getCellName(mCell.y, mCell.x);\n      var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n      mCell.ref = startCell + ':' + endCell;\n      var mergedCell = mergeCells.add(mCell);\n      var start = {\n        x: mCell.x,\n        y: mCell.y\n      };\n      var end = {\n        x: cell.index + mCell.width,\n        y: rowIndex + mCell.height\n      };\n      this.updatedMergedCellStyles(start, end, cell);\n    }\n\n    return mergeCells;\n  };\n\n  Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n    for (var x = sCell.x; x <= eCell.x; x++) {\n      for (var y = sCell.y; y <= eCell.y; y++) {\n        this.mergedCellsStyle.set(this.getCellName(y, x), {\n          x: x,\n          y: y,\n          styleIndex: cell.styleIndex\n        });\n      }\n    }\n  };\n  /**\n   * Returns the tick count corresponding to the given year, month, and day.\n   * @param year number value of year\n   * @param month number value of month\n   * @param day number value of day\n   */\n\n\n  Workbook.prototype.dateToTicks = function (year, month, day) {\n    var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n    var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n    var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n\n    if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n      var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n      var y = year - 1;\n      var n = y * 365 + (y / 4 | 0) - (y / 100 | 0) + (y / 400 | 0) + days[month - 1] + day - 1;\n      return n * ticksPerDay;\n    }\n\n    throw new Error('Not a valid date');\n  };\n  /**\n   * Return the tick count corresponding to the given hour, minute, second.\n   * @param hour number value of hour\n   * @param minute number value if minute\n   * @param second number value of second\n   */\n\n\n  Workbook.prototype.timeToTicks = function (hour, minute, second) {\n    if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n      var totalSeconds = hour * 3600 + minute * 60 + second;\n      return totalSeconds * 10000 * 1000;\n    }\n\n    throw new Error('Not valid time');\n  };\n  /**\n   * Checks if given year is a leap year.\n   * @param year Year value.\n   */\n\n\n  Workbook.prototype.isLeapYear = function (year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n  };\n  /**\n   * Converts `DateTime` to the equivalent OLE Automation date.\n   */\n\n\n  Workbook.prototype.toOADate = function (date) {\n    var ticks = 0;\n    /* tslint:disable-next-line:max-line-length */\n\n    ticks = this.dateToTicks(date.getFullYear(), date.getMonth() + 1, date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n\n    if (ticks === 0) {\n      return 0.0;\n    }\n\n    var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n    var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n    var doubleDateOffset = daysTo1899 * ticksPerDay;\n    var oaDateMinAsTicks = ((365 * 4 + 1) * 25 - 1 - 365) * ticksPerDay;\n\n    if (ticks < oaDateMinAsTicks) {\n      throw new Error('Arg_OleAutDateInvalid');\n    }\n\n    var millisPerDay = 1000 * 60 * 60 * 24;\n    return (ticks - doubleDateOffset) / 10000 / millisPerDay;\n  };\n\n  return Workbook;\n}();\n\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\n\nvar BuiltInProperties =\n/** @class */\nfunction () {\n  function BuiltInProperties() {}\n\n  return BuiltInProperties;\n}();\n\nexport { BuiltInProperties };","map":{"version":3,"sources":["C:/Users/rraval/Desktop/schedule-component-copy/node_modules/@syncfusion/ej2-excel-export/src/workbook.js"],"names":["Worksheets","Worksheet","FreezePane","MergeCell","MergeCells","HyperLink","Grouping","CellStyle","Font","Borders","CellXfs","Alignment","NumFmt","CellStyleXfs","CellStyles","Column","Row","Rows","Image","Cell","Cells","ZipArchive","ZipArchiveItem","CsvHelper","Internationalization","isNullOrUndefined","BlobHelper","Workbook","json","saveType","culture","currencyString","separator","sharedStringCount","unitsProportions","hyperlinkStyle","fontColor","underline","undefined","currency","intl","mSaveType","mArchive","sharedString","mFonts","mBorders","mStyles","printTitles","Map","cellStyles","mNumFmt","mFills","push","set","mCellXfs","mCellStyleXfs","drawingCount","imageCount","styles","globalStyles","i","length","name","has","cellStyle","isGlobalStyle","parserCellStyle","cellStylesIn","xfId","index","tFormat","numberFormat","format","type","Error","worksheets","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","prototype","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","rows","parserRows","showGridLines","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","isSummaryRowBelow","images","parserImages","hyperLinks","mergeOptions","fromJson","toJson","result","applyProperties","sourceJson","destJson","keys","Object","getCellName","row","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","printTitleName","titleRowName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","width","rowsLength","rowId","r","parserRow","add","insertMergedCellsStyle","_this","forEach","value","key","filter","item","y","cell","cells","x","styleIndex","insertIndex","indexOf","splice","createCell","rowToInsert","cellToInsert","refName","rowIndex","height","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","curCellIndex","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","displayText","getCellValueType","ref","rId","style","formula","Date","parseCellType","processMergeCells","spans","GetColors","colors","processColor","colorVal","replace","toUpperCase","rgbColors","get","processCellValue","cellValue","processedVal","startindex","endIndex","substring","subString","text","subSplit","split","_i","subSplit_1","element","start","trim","applyGlobalStyle","a","cellType","defStyleIndex","backColor","borders","parserBorder","all","leftBorder","left","rightBorder","right","topBorder","top","bottomBorder","bottom","fontName","fontSize","italic","bold","hAlign","toLowerCase","indent","rotation","vAlign","wrapText","getNumberFormat","numFmtId","processCellStyle","switchNumberFormat","numFmt","formatCode","_a","cellStyleXfs","_b","_c","cellXfs","returnFormat","getNumberPattern","useGrouping","error","getDatePattern","skeleton","border","color","lineStyle","processNumFormatId","compareResult","compareStyle","id","size","isNewFont","toCompareStyle","font","b","u","sz","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","globalStyleIndex","baseStyle","contains","array","toOADate","value_1","sstvalue","imagesLength","imageId","p","image","parserImage","lastRow","lastColumn","horizontalFlip","verticalFlip","saveAsBlob","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","blob","Blob","save","fileName","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","append","rowString","pixelsToRowHeight","_d","_e","_f","_g","mCell","_h","_j","hLink","saveDrawings","saveSheetRelations","getBlob","drawings","sheetDrawingString","imgId","pic","updatelastRowOffset","updatelastColumnOffSet","lastRowOffset","lastColOffset","imageFile","imageData","convertBase64toImage","saveDrawingRelations","picture","iCurHeight","iCurRow","iCurOffset","iRowHeight","convertToPixels","iSpaceInCell","rowHiddenHeight","Math","round","iCurWidth","iCurCol","iColWidth","ColumnWidthToPixels","colHiddenWidth","img","byteStr","window","atob","buffer","ArrayBuffer","data","Uint8Array","charCodeAt","drawingRelation","pixels","dDigitWidth","val","trunc","fileWidth","n","relStr","paneString","sstStart","si","processString","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","topRelation","wbRelation","count","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","addItem","startCell","endCell","mergedCell","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","ticksPerDay","daysToMonth365","daysToMonth366","days","isLeapYear","timeToTicks","hour","minute","second","totalSeconds","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899","doubleDateOffset","oaDateMinAsTicks","millisPerDay"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,SAAvD,EAAkEC,QAAlE,QAAkF,aAAlF;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CC,SAA5C,EAAuDC,MAAvD,EAA+DC,YAA/D,EAA6EC,UAA7E,QAA+F,cAA/F;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,QAA5B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,6BAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,sBAAxD;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA;;;;AAGA,IAAIC,QAAQ;AAAG;AAAe,YAAY;AACtC;AACA,WAASA,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2CC,cAA3C,EAA2DC,SAA3D,EAAsE;AAClE,SAAKC,iBAAL,GAAyB,CAAzB;AACA,SAAKC,gBAAL,GAAwB,CACpB,KAAK,IADe,EAEpB,KAAK,KAFe,EAGpB,EAHoB,EAIpB,KAAK,IAJe,EAKpB,KAAK,IALe,EAMpB,CANoB,EAOpB,KAAK,IAPe,EAQpB,KAAK,IAAL,GAAY,KARQ,CAAxB;AAUA;;AACA,SAAKC,cAAL,GAAsB;AAAEC,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAAtB;;AACA,QAAIP,OAAO,KAAKQ,SAAhB,EAA2B;AACvB,WAAKR,OAAL,GAAeA,OAAf;AACH,KAFD,MAGK;AACD,WAAKA,OAAL,GAAe,OAAf;AACH;;AACD,QAAIC,cAAc,KAAKO,SAAvB,EAAkC;AAC9B,WAAKC,QAAL,GAAgBR,cAAhB;AACH,KAFD,MAGK;AACD,WAAKQ,QAAL,GAAgB,KAAhB;AACH;;AACD,SAAKC,IAAL,GAAY,IAAIhB,oBAAJ,CAAyB,KAAKM,OAA9B,CAAZ;AACA,SAAKW,SAAL,GAAiBZ,QAAjB;;AACA,QAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACrB,WAAKa,QAAL,GAAgB,IAAIrB,UAAJ,EAAhB;AACA,WAAKsB,YAAL,GAAoB,EAApB;AACA,WAAKC,MAAL,GAAc,EAAd;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AACA,WAAKC,UAAL,GAAkB,IAAID,GAAJ,EAAlB;AACA,WAAKE,OAAL,GAAe,IAAIF,GAAJ,EAAf;AACA,WAAKG,MAAL,GAAc,IAAIH,GAAJ,EAAd;AACA,WAAKF,OAAL,CAAaM,IAAb,CAAkB,IAAI7C,SAAJ,EAAlB;AACA,WAAKqC,MAAL,CAAYQ,IAAZ,CAAiB,IAAI5C,IAAJ,EAAjB;AACA;;AACA,WAAKyC,UAAL,CAAgBI,GAAhB,CAAoB,QAApB,EAA8B,IAAIvC,UAAJ,EAA9B;AACA;;AACA,WAAKwC,QAAL,GAAgB,EAAhB;AACA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,YAAL,GAAoB,CAApB;AACA,WAAKC,UAAL,GAAkB,CAAlB;;AACA,UAAI7B,IAAI,CAAC8B,MAAL,KAAgB,IAAhB,IAAwB9B,IAAI,CAAC8B,MAAL,KAAgBpB,SAA5C,EAAuD;AACnD;AACA,aAAKqB,YAAL,GAAoB,IAAIX,GAAJ,EAApB;;AACA,aAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,IAAI,CAAC8B,MAAL,CAAYG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,cAAIhC,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeE,IAAf,KAAwBxB,SAA5B,EAAuC;AACnC,gBAAI,CAAC,KAAKW,UAAL,CAAgBc,GAAhB,CAAoBnC,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeE,IAAnC,CAAL,EAA+C;AAC3C,kBAAIE,SAAS,GAAG,IAAIzD,SAAJ,EAAhB;AACAyD,cAAAA,SAAS,CAACC,aAAV,GAA0B,IAA1B;AACA,mBAAKC,eAAL,CAAqBtC,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,CAArB,EAAqCI,SAArC,EAAgD,MAAhD;AACA,kBAAIG,YAAY,GAAG,IAAIrD,UAAJ,EAAnB;AACAqD,cAAAA,YAAY,CAACL,IAAb,GAAoBE,SAAS,CAACF,IAA9B;AACAK,cAAAA,YAAY,CAACC,IAAb,GAAqBJ,SAAS,CAACK,KAAV,GAAkB,CAAvC;AACA,mBAAKpB,UAAL,CAAgBI,GAAhB,CAAoBc,YAAY,CAACL,IAAjC,EAAuCK,YAAvC;AACA;;AACA,kBAAIG,OAAO,GAAG,EAAd;;AACA,kBAAI1C,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeW,YAAf,KAAgCjC,SAApC,EAA+C;AAC3CgC,gBAAAA,OAAO,CAACE,MAAR,GAAiB5C,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeW,YAAhC;AACH;;AACD,kBAAI3C,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAea,IAAf,KAAwBnC,SAA5B,EAAuC;AACnCgC,gBAAAA,OAAO,CAACG,IAAR,GAAe7C,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAea,IAA9B;AACH,eAFD,MAGK;AACDH,gBAAAA,OAAO,CAACG,IAAR,GAAe,UAAf;AACH;;AACD,kBAAIH,OAAO,CAACE,MAAR,KAAmBlC,SAAvB,EAAkC;AAC9B,qBAAKqB,YAAL,CAAkBN,GAAlB,CAAsBzB,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeE,IAArC,EAA2CQ,OAA3C;AACH;AACJ,aAtBD,MAuBK;AACD,oBAAMI,KAAK,CAAC,gBAAgB9C,IAAI,CAAC8B,MAAL,CAAYE,CAAZ,EAAeE,IAA/B,GAAsC,qBAAvC,CAAX;AACH;AACJ;AACJ;AACJ,OApDoB,CAqDrB;;;AACA,UAAIlC,IAAI,CAAC+C,UAAL,KAAoB,IAApB,IAA4B/C,IAAI,CAAC+C,UAAL,KAAoBrC,SAApD,EAA+D;AAC3D,aAAKsC,gBAAL,CAAsBhD,IAAI,CAAC+C,UAA3B;AACH,OAFD,MAGK;AACD,cAAMD,KAAK,CAAC,wBAAD,CAAX;AACH,OA3DoB,CA4DrB;;;AACA,UAAI9C,IAAI,CAACiD,iBAAL,KAA2B,IAA3B,IAAmCjD,IAAI,CAACiD,iBAAL,KAA2BvC,SAAlE,EAA6E;AACzE,aAAKuC,iBAAL,GAAyB,IAAIC,iBAAJ,EAAzB;AACA,aAAKC,uBAAL,CAA6BnD,IAAI,CAACiD,iBAAlC,EAAqD,KAAKA,iBAA1D;AACH;AACJ,KAjED,MAkEK;AACD,WAAKG,SAAL,GAAiB,IAAIzD,SAAJ,CAAcK,IAAd,EAAoBI,SAApB,CAAjB;AACH;AACJ;AACD;;;AACAL,EAAAA,QAAQ,CAACsD,SAAT,CAAmBF,uBAAnB,GAA6C,UAAUG,qBAAV,EAAiCL,iBAAjC,EAAoD;AAC7F;AACA,QAAIK,qBAAqB,CAACC,MAAtB,KAAiC,IAAjC,IAAyCD,qBAAqB,CAACC,MAAtB,KAAiC7C,SAA9E,EAAyF;AACrFuC,MAAAA,iBAAiB,CAACM,MAAlB,GAA2BD,qBAAqB,CAACC,MAAjD;AACH,KAJ4F,CAK7F;;;AACA,QAAID,qBAAqB,CAACE,QAAtB,KAAmC,IAAnC,IAA2CF,qBAAqB,CAACE,QAAtB,KAAmC9C,SAAlF,EAA6F;AACzFuC,MAAAA,iBAAiB,CAACO,QAAlB,GAA6BF,qBAAqB,CAACE,QAAnD;AACH,KAR4F,CAS7F;;;AACA,QAAIF,qBAAqB,CAACG,QAAtB,KAAmC,IAAnC,IAA2CH,qBAAqB,CAACG,QAAtB,KAAmC/C,SAAlF,EAA6F;AACzFuC,MAAAA,iBAAiB,CAACQ,QAAlB,GAA6BH,qBAAqB,CAACG,QAAnD;AACH,KAZ4F,CAa7F;;;AACA,QAAIH,qBAAqB,CAACI,OAAtB,KAAkC,IAAlC,IAA0CJ,qBAAqB,CAACI,OAAtB,KAAkChD,SAAhF,EAA2F;AACvFuC,MAAAA,iBAAiB,CAACS,OAAlB,GAA4BJ,qBAAqB,CAACI,OAAlD;AACH,KAhB4F,CAiB7F;;;AACA,QAAIJ,qBAAqB,CAACK,OAAtB,KAAkC,IAAlC,IAA0CL,qBAAqB,CAACK,OAAtB,KAAkCjD,SAAhF,EAA2F;AACvFuC,MAAAA,iBAAiB,CAACU,OAAlB,GAA4BL,qBAAqB,CAACK,OAAlD;AACH,KApB4F,CAqB7F;;;AACA,QAAIL,qBAAqB,CAACM,OAAtB,KAAkC,IAAlC,IAA0CN,qBAAqB,CAACM,OAAtB,KAAkClD,SAAhF,EAA2F;AACvFuC,MAAAA,iBAAiB,CAACW,OAAlB,GAA4BN,qBAAqB,CAACM,OAAlD;AACH,KAxB4F,CAyB7F;;;AACA,QAAIN,qBAAqB,CAACO,KAAtB,KAAgC,IAAhC,IAAwCP,qBAAqB,CAACO,KAAtB,KAAgCnD,SAA5E,EAAuF;AACnFuC,MAAAA,iBAAiB,CAACY,KAAlB,GAA0BP,qBAAqB,CAACO,KAAhD;AACH,KA5B4F,CA6B7F;;;AACA,QAAIP,qBAAqB,CAACQ,WAAtB,KAAsC,IAAtC,IAA8CR,qBAAqB,CAACQ,WAAtB,KAAsCpD,SAAxF,EAAmG;AAC/FuC,MAAAA,iBAAiB,CAACa,WAAlB,GAAgCR,qBAAqB,CAACQ,WAAtD;AACH,KAhC4F,CAiC7F;;;AACA,QAAIR,qBAAqB,CAACS,YAAtB,KAAuC,IAAvC,IAA+CT,qBAAqB,CAACS,YAAtB,KAAuCrD,SAA1F,EAAqG;AACjGuC,MAAAA,iBAAiB,CAACc,YAAlB,GAAiCT,qBAAqB,CAACS,YAAvD;AACH,KApC4F,CAqC7F;;;AACA,QAAIT,qBAAqB,CAACU,IAAtB,KAA+B,IAA/B,IAAuCV,qBAAqB,CAACU,IAAtB,KAA+BtD,SAA1E,EAAqF;AACjFuC,MAAAA,iBAAiB,CAACe,IAAlB,GAAyBV,qBAAqB,CAACU,IAA/C;AACH,KAxC4F,CAyC7F;;;AACA,QAAIV,qBAAqB,CAACW,MAAtB,KAAiC,IAAjC,IAAyCX,qBAAqB,CAACW,MAAtB,KAAiCvD,SAA9E,EAAyF;AACrFuC,MAAAA,iBAAiB,CAACgB,MAAlB,GAA2BX,qBAAqB,CAACW,MAAjD;AACH;AACJ,GA7CD;AA8CA;;;AACAlE,EAAAA,QAAQ,CAACsD,SAAT,CAAmBL,gBAAnB,GAAsC,UAAUhD,IAAV,EAAgB;AAClD,SAAK+C,UAAL,GAAkB,IAAI3E,UAAJ,EAAlB;AACA,QAAI6D,MAAM,GAAGjC,IAAI,CAACiC,MAAlB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B,UAAIkC,SAAS,GAAGlE,IAAI,CAACgC,CAAD,CAApB;AACA,UAAImC,KAAK,GAAG,IAAI9F,SAAJ,EAAZ;AACA,WAAK+F,UAAL,GAAkB,IAAI5F,UAAJ,EAAlB;AACA,WAAK6F,gBAAL,GAAwB,IAAIjD,GAAJ,EAAxB;AACA,WAAKkD,WAAL,GAAmB,EAAnB,CAL6B,CAM7B;;AACA,UAAIJ,SAAS,CAAChC,IAAV,KAAmB,IAAnB,IAA2BgC,SAAS,CAAChC,IAAV,KAAmBxB,SAAlD,EAA6D;AACzDyD,QAAAA,KAAK,CAACjC,IAAN,GAAagC,SAAS,CAAChC,IAAvB;AACH,OAFD,MAGK;AACDiC,QAAAA,KAAK,CAACjC,IAAN,GAAa,UAAU,CAACF,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAAvB;AACH;;AACDJ,MAAAA,KAAK,CAAC1B,KAAN,GAAeT,CAAC,GAAG,CAAnB,CAb6B,CAc7B;;AACA,UAAIkC,SAAS,CAACM,OAAV,KAAsB,IAAtB,IAA8BN,SAAS,CAACM,OAAV,KAAsB9D,SAAxD,EAAmE;AAC/D,aAAK+D,aAAL,CAAmBP,SAAS,CAACM,OAA7B,EAAsCL,KAAtC;AACH,OAjB4B,CAkB7B;;;AACA,UAAID,SAAS,CAACQ,IAAV,KAAmB,IAAnB,IAA2BR,SAAS,CAACQ,IAAV,KAAmBhE,SAAlD,EAA6D;AACzD,aAAKiE,UAAL,CAAgBT,SAAS,CAACQ,IAA1B,EAAgCP,KAAhC;AACH,OArB4B,CAsB7B;;;AACA,UAAID,SAAS,CAACU,aAAV,KAA4B,IAA5B,IAAoCV,SAAS,CAACU,aAAV,KAA4BlE,SAApE,EAA+E;AAC3EyD,QAAAA,KAAK,CAACS,aAAN,GAAsBV,SAAS,CAACU,aAAhC;AACH,OAzB4B,CA0B7B;;;AACA,UAAIV,SAAS,CAACW,MAAV,KAAqB,IAArB,IAA6BX,SAAS,CAACW,MAAV,KAAqBnE,SAAtD,EAAiE;AAC7D,aAAKoE,iBAAL,CAAuBZ,SAAS,CAACW,MAAjC,EAAyCV,KAAzC;AACH,OA7B4B,CA8B7B;;;AACA,UAAID,SAAS,CAACa,UAAV,KAAyB,IAAzB,IAAiCb,SAAS,CAACa,UAAV,KAAyBrE,SAA9D,EAAyE;AACrE,aAAKsE,gBAAL,CAAsBd,SAAS,CAACa,UAAhC,EAA4CZ,KAA5C;AACH;;AACD,UAAID,SAAS,CAACe,SAAV,KAAwBvE,SAA5B,EAAuC;AACnC,YAAIwD,SAAS,CAACe,SAAV,CAAoBC,iBAApB,KAA0CxE,SAA9C,EAAyD;AACrDyD,UAAAA,KAAK,CAACe,iBAAN,GAA0BhB,SAAS,CAACe,SAAV,CAAoBC,iBAA9C;AACH;AACJ;;AACD,UAAIhB,SAAS,CAACiB,MAAV,KAAqBzE,SAAzB,EAAoC;AAChC,aAAK0E,YAAL,CAAkBlB,SAAS,CAACiB,MAA5B,EAAoChB,KAApC;AACH;;AACDA,MAAAA,KAAK,CAAC1B,KAAN,GAAeT,CAAC,GAAG,CAAnB;AACAmC,MAAAA,KAAK,CAACC,UAAN,GAAmB,KAAKA,UAAxB;AACAD,MAAAA,KAAK,CAACkB,UAAN,GAAmB,KAAKf,WAAxB;AACA,WAAKvB,UAAL,CAAgBvB,IAAhB,CAAqB2C,KAArB;AACH;AACJ,GAlDD;AAmDA;;;AACApE,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiC,YAAnB,GAAkC,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AAC1D;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKC,eAAL,CAAqBH,QAArB,EAA+BE,MAA/B;AACA,SAAKC,eAAL,CAAqBF,MAArB,EAA6BC,MAA7B;AACA,WAAOA,MAAP;AACH,GAND;AAOA;;;AACA1F,EAAAA,QAAQ,CAACsD,SAAT,CAAmBqC,eAAnB,GAAqC,UAAUC,UAAV,EAAsBC,QAAtB,EAAgC;AACjE,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,UAAZ,CAAX;;AACA,SAAK,IAAIlD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGoD,IAAI,CAAC5D,MAAjC,EAAyCQ,KAAK,EAA9C,EAAkD;AAC9C,UAAIoD,IAAI,CAACpD,KAAD,CAAJ,KAAgB,MAApB,EAA4B;AACxBmD,QAAAA,QAAQ,CAACC,IAAI,CAACpD,KAAD,CAAL,CAAR,GAAwBkD,UAAU,CAACE,IAAI,CAACpD,KAAD,CAAL,CAAlC;AACH;AACJ;AACJ,GAPD;;AAQA1C,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0C,WAAnB,GAAiC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACpD,WAAO,KAAKC,aAAL,CAAmBD,MAAnB,IAA6BD,GAAG,CAACzB,QAAJ,EAApC;AACH,GAFD;;AAGAxE,EAAAA,QAAQ,CAACsD,SAAT,CAAmB6C,aAAnB,GAAmC,UAAUC,GAAV,EAAe;AAC9CA,IAAAA,GAAG;AACH,QAAIC,aAAa,GAAG,EAApB;;AACA,OAAG;AACC,UAAIC,aAAa,GAAGF,GAAG,GAAG,EAA1B;AACAA,MAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,CAAjB;AACAC,MAAAA,aAAa,GAAGE,MAAM,CAACC,YAAP,CAAoB,KAAKF,aAAzB,IAA0CD,aAA1D;AACH,KAJD,QAISD,GAAG,IAAI,CAJhB;;AAKA,WAAOC,aAAP;AACH,GATD;AAUA;;;AACArG,EAAAA,QAAQ,CAACsD,SAAT,CAAmB2B,gBAAnB,GAAsC,UAAUhF,IAAV,EAAgBmE,KAAhB,EAAuB;AACzD,QAAIqC,cAAc,GAAG,EAArB;AACA,QAAIC,YAAJ;;AACA,QAAIzG,IAAI,CAAC0G,OAAL,KAAiB,IAAjB,IAAyB1G,IAAI,CAAC0G,OAAL,KAAiBhG,SAA9C,EAAyD;AACrD,UAAIgG,OAAO,GAAG1G,IAAI,CAAC0G,OAAnB;AACA,UAAIC,KAAK,GAAG,KAAK,CAAjB;;AACA,UAAI3G,IAAI,CAAC2G,KAAL,KAAe,IAAf,IAAuB3G,IAAI,CAAC2G,KAAL,KAAejG,SAA1C,EAAqD;AACjDiG,QAAAA,KAAK,GAAG3G,IAAI,CAAC2G,KAAb;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,GAAG3G,IAAI,CAAC0G,OAAb;AACH;;AACDD,MAAAA,YAAY,GAAG,MAAMC,OAAN,GAAgB,IAAhB,GAAuBC,KAAtC;AACH;;AACD,QAAIC,YAAJ;;AACA,QAAI5G,IAAI,CAAC6G,UAAL,KAAoB,IAApB,IAA4B7G,IAAI,CAAC6G,UAAL,KAAoBnG,SAApD,EAA+D;AAC3D,UAAImG,UAAU,GAAG7G,IAAI,CAAC6G,UAAtB;AACA,UAAIC,QAAQ,GAAG,KAAK,CAApB;;AACA,UAAI9G,IAAI,CAAC8G,QAAL,KAAkB,IAAlB,IAA0B9G,IAAI,CAAC8G,QAAL,KAAkBpG,SAAhD,EAA2D;AACvDoG,QAAAA,QAAQ,GAAG9G,IAAI,CAAC8G,QAAhB;AACH,OAFD,MAGK;AACDA,QAAAA,QAAQ,GAAG9G,IAAI,CAAC6G,UAAhB;AACH;;AACDD,MAAAA,YAAY,GAAG,MAAM,KAAKV,aAAL,CAAmBW,UAAnB,CAAN,GAAuC,IAAvC,GAA8C,KAAKX,aAAL,CAAmBY,QAAnB,CAA7D;AACH;;AACD,QAAIL,YAAY,KAAK/F,SAArB,EAAgC;AAC5B8F,MAAAA,cAAc,IAAKrC,KAAK,CAACjC,IAAN,GAAa,GAAb,GAAmBuE,YAAtC;AACH;;AACD,QAAIG,YAAY,KAAKlG,SAAjB,IAA8B+F,YAAY,KAAK/F,SAAnD,EAA8D;AAC1D8F,MAAAA,cAAc,IAAI,OAAOrC,KAAK,CAACjC,IAAN,GAAa,GAAb,GAAmB0E,YAA1B,CAAlB;AACH,KAFD,MAGK,IAAIA,YAAY,KAAKlG,SAArB,EAAgC;AACjC8F,MAAAA,cAAc,IAAKrC,KAAK,CAACjC,IAAN,GAAa,GAAb,GAAmB0E,YAAtC;AACH;;AACD,QAAIJ,cAAc,KAAK,EAAvB,EAA2B;AACvB,WAAKrF,WAAL,CAAiBM,GAAjB,CAAqB0C,KAAK,CAAC1B,KAAN,GAAc,CAAnC,EAAsC+D,cAAtC;AACH;AACJ,GAtCD;AAuCA;;;AACAzG,EAAAA,QAAQ,CAACsD,SAAT,CAAmByB,iBAAnB,GAAuC,UAAU9E,IAAV,EAAgBmE,KAAhB,EAAuB;AAC1DA,IAAAA,KAAK,CAAC4C,WAAN,GAAoB,IAAIzI,UAAJ,EAApB;;AACA,QAAI0B,IAAI,CAACgG,GAAL,KAAa,IAAb,IAAqBhG,IAAI,CAACgG,GAAL,KAAatF,SAAtC,EAAiD;AAC7CyD,MAAAA,KAAK,CAAC4C,WAAN,CAAkBf,GAAlB,GAAwBhG,IAAI,CAACgG,GAA7B;AACH,KAFD,MAGK;AACD7B,MAAAA,KAAK,CAAC4C,WAAN,CAAkBf,GAAlB,GAAwB,CAAxB;AACH;;AACD,QAAIhG,IAAI,CAACiG,MAAL,KAAgB,IAAhB,IAAwBjG,IAAI,CAACiG,MAAL,KAAgBvF,SAA5C,EAAuD;AACnDyD,MAAAA,KAAK,CAAC4C,WAAN,CAAkBd,MAAlB,GAA2BjG,IAAI,CAACiG,MAAhC;AACH,KAFD,MAGK;AACD9B,MAAAA,KAAK,CAAC4C,WAAN,CAAkBd,MAAlB,GAA2B,CAA3B;AACH;;AACD9B,IAAAA,KAAK,CAAC4C,WAAN,CAAkBC,QAAlB,GAA6B,KAAKjB,WAAL,CAAiB5B,KAAK,CAAC4C,WAAN,CAAkBf,GAAlB,GAAwB,CAAzC,EAA4C7B,KAAK,CAAC4C,WAAN,CAAkBd,MAAlB,GAA2B,CAAvE,CAA7B;AACH,GAfD;AAgBA;;;AACAlG,EAAAA,QAAQ,CAACsD,SAAT,CAAmBoB,aAAnB,GAAmC,UAAUzE,IAAV,EAAgBmE,KAAhB,EAAuB;AACtD,QAAI8C,aAAa,GAAGjH,IAAI,CAACiC,MAAzB;AACAkC,IAAAA,KAAK,CAACK,OAAN,GAAgB,EAAhB;;AACA,SAAK,IAAIyB,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGgB,aAA9B,EAA6ChB,MAAM,EAAnD,EAAuD;AACnD,UAAIE,GAAG,GAAG,IAAIhH,MAAJ,EAAV;;AACA,UAAIa,IAAI,CAACiG,MAAD,CAAJ,CAAaxD,KAAb,KAAuB,IAAvB,IAA+BzC,IAAI,CAACiG,MAAD,CAAJ,CAAaxD,KAAb,KAAuB/B,SAA1D,EAAqE;AACjEyF,QAAAA,GAAG,CAAC1D,KAAJ,GAAYzC,IAAI,CAACiG,MAAD,CAAJ,CAAaxD,KAAzB;AACH,OAFD,MAGK;AACD,cAAMK,KAAK,CAAC,0BAAD,CAAX;AACH;;AACD,UAAI9C,IAAI,CAACiG,MAAD,CAAJ,CAAaiB,KAAb,KAAuB,IAAvB,IAA+BlH,IAAI,CAACiG,MAAD,CAAJ,CAAaiB,KAAb,KAAuBxG,SAA1D,EAAqE;AACjEyF,QAAAA,GAAG,CAACe,KAAJ,GAAYlH,IAAI,CAACiG,MAAD,CAAJ,CAAaiB,KAAzB;AACH;;AACD/C,MAAAA,KAAK,CAACK,OAAN,CAAchD,IAAd,CAAmB2E,GAAnB;AACH;AACJ,GAhBD;AAiBA;;;AACApG,EAAAA,QAAQ,CAACsD,SAAT,CAAmBsB,UAAnB,GAAgC,UAAU3E,IAAV,EAAgBmE,KAAhB,EAAuB;AACnD,QAAIgD,UAAU,GAAGnH,IAAI,CAACiC,MAAtB;AACAkC,IAAAA,KAAK,CAACO,IAAN,GAAa,IAAIrF,IAAJ,EAAb;AACA,QAAI+H,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACjC,UAAIrB,GAAG,GAAG,KAAKsB,SAAL,CAAetH,IAAI,CAACqH,CAAD,CAAnB,EAAwBD,KAAxB,CAAV;AACAA,MAAAA,KAAK,GAAGpB,GAAG,CAACvD,KAAZ;AACA0B,MAAAA,KAAK,CAACO,IAAN,CAAW6C,GAAX,CAAevB,GAAf;AACH;;AACD,SAAKwB,sBAAL,CAA4BrD,KAA5B;AACH,GAVD;;AAWApE,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmE,sBAAnB,GAA4C,UAAUrD,KAAV,EAAiB;AACzD,QAAIsD,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKrD,UAAL,CAAgBnC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,WAAKoC,gBAAL,CAAsBqD,OAAtB,CAA8B,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAChD,YAAI5B,GAAG,GAAG7B,KAAK,CAACO,IAAN,CAAWmD,MAAX,CAAkB,UAAUC,IAAV,EAAgB;AACxC,iBAAOA,IAAI,CAACrF,KAAL,KAAekF,KAAK,CAACI,CAA5B;AACH,SAFS,EAEP,CAFO,CAAV;;AAGA,YAAI,CAAClI,iBAAiB,CAACmG,GAAD,CAAtB,EAA6B;AACzB,cAAIgC,IAAI,GAAGhC,GAAG,CAACiC,KAAJ,CAAUJ,MAAV,CAAiB,UAAUC,IAAV,EAAgB;AACxC,mBAAOA,IAAI,CAACrF,KAAL,KAAekF,KAAK,CAACO,CAA5B;AACH,WAFU,EAER,CAFQ,CAAX;;AAGA,cAAI,CAACrI,iBAAiB,CAACmI,IAAD,CAAtB,EAA8B;AAC1BA,YAAAA,IAAI,CAACG,UAAL,GAAkBR,KAAK,CAACQ,UAAxB;AACH,WAFD,MAGK;AACD,gBAAIF,KAAK,GAAGjC,GAAG,CAACiC,KAAJ,CAAUJ,MAAV,CAAiB,UAAUC,IAAV,EAAgB;AACzC,qBAAOA,IAAI,CAACrF,KAAL,IAAckF,KAAK,CAACO,CAA3B;AACH,aAFW,CAAZ;AAGA,gBAAIE,WAAW,GAAG,CAAlB;;AACA,gBAAIH,KAAK,CAAChG,MAAN,GAAe,CAAnB,EAAsB;AAClBmG,cAAAA,WAAW,GAAGpC,GAAG,CAACiC,KAAJ,CAAUI,OAAV,CAAkBJ,KAAK,CAACA,KAAK,CAAChG,MAAN,GAAe,CAAhB,CAAvB,IAA6C,CAA3D;AACH;;AACD+D,YAAAA,GAAG,CAACiC,KAAJ,CAAUK,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B,EAAiCX,KAAK,CAACc,UAAN,CAAiBZ,KAAjB,EAAwBC,GAAxB,CAAjC;AACH;AACJ,SAjBD,MAkBK;AACD,cAAIlD,IAAI,GAAGP,KAAK,CAACO,IAAN,CAAWmD,MAAX,CAAkB,UAAUC,IAAV,EAAgB;AACzC,mBAAOA,IAAI,CAACrF,KAAL,IAAckF,KAAK,CAACI,CAA3B;AACH,WAFU,CAAX;AAGA,cAAIS,WAAW,GAAG,IAAIpJ,GAAJ,EAAlB;AACAoJ,UAAAA,WAAW,CAAC/F,KAAZ,GAAoBkF,KAAK,CAACI,CAA1B;AACAS,UAAAA,WAAW,CAACP,KAAZ,GAAoB,IAAIzI,KAAJ,EAApB;AACAgJ,UAAAA,WAAW,CAACP,KAAZ,CAAkBV,GAAlB,CAAsBE,KAAK,CAACc,UAAN,CAAiBZ,KAAjB,EAAwBC,GAAxB,CAAtB;AACA,cAAIQ,WAAW,GAAG,CAAlB;;AACA,cAAI1D,IAAI,CAACzC,MAAL,GAAc,CAAlB,EAAqB;AACjBmG,YAAAA,WAAW,GAAGjE,KAAK,CAACO,IAAN,CAAW2D,OAAX,CAAmB3D,IAAI,CAACA,IAAI,CAACzC,MAAL,GAAc,CAAf,CAAvB,IAA4C,CAA1D;AACH;;AACDkC,UAAAA,KAAK,CAACO,IAAN,CAAW4D,MAAX,CAAkBF,WAAlB,EAA+B,CAA/B,EAAkCI,WAAlC;AACH;AACJ,OApCD;AAqCH;AACJ,GAzCD;;AA0CAzI,EAAAA,QAAQ,CAACsD,SAAT,CAAmBkF,UAAnB,GAAgC,UAAUZ,KAAV,EAAiBC,GAAjB,EAAsB;AAClD,QAAIa,YAAY,GAAG,IAAIlJ,IAAJ,EAAnB;AACAkJ,IAAAA,YAAY,CAACC,OAAb,GAAuBd,GAAvB;AACAa,IAAAA,YAAY,CAAChG,KAAb,GAAqBkF,KAAK,CAACO,CAA3B;AACAO,IAAAA,YAAY,CAACrG,SAAb,GAAyB,IAAIzD,SAAJ,EAAzB;AACA8J,IAAAA,YAAY,CAACN,UAAb,GAA0BR,KAAK,CAACQ,UAAhC;AACA,WAAOM,YAAP;AACH,GAPD;AAQA;;;AACA1I,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiE,SAAnB,GAA+B,UAAUtH,IAAV,EAAgB2I,QAAhB,EAA0B;AACrD,QAAI3C,GAAG,GAAG,IAAI5G,GAAJ,EAAV,CADqD,CAErD;;AACA,QAAIY,IAAI,CAAC4I,MAAL,KAAgB,IAAhB,IAAwB5I,IAAI,CAAC4I,MAAL,KAAgBlI,SAA5C,EAAuD;AACnDsF,MAAAA,GAAG,CAAC4C,MAAJ,GAAa5I,IAAI,CAAC4I,MAAlB;AACH,KALoD,CAMrD;;;AACA,QAAI5I,IAAI,CAACyC,KAAL,KAAe,IAAf,IAAuBzC,IAAI,CAACyC,KAAL,KAAe/B,SAA1C,EAAqD;AACjDsF,MAAAA,GAAG,CAACvD,KAAJ,GAAYzC,IAAI,CAACyC,KAAjB;AACH,KAFD,MAGK;AACD,YAAMK,KAAK,CAAC,uBAAD,CAAX;AACH;;AACD,QAAI9C,IAAI,CAAC6I,QAAL,KAAkB,IAAlB,IAA0B7I,IAAI,CAAC6I,QAAL,KAAkBnI,SAAhD,EAA2D;AACvD,WAAKoI,aAAL,CAAmB9I,IAAI,CAAC6I,QAAxB,EAAkC7C,GAAlC;AACH;;AACD,SAAK+C,UAAL,CAAgB/I,IAAI,CAACiI,KAArB,EAA4BjC,GAA5B;AACA,WAAOA,GAAP;AACH,GAlBD;AAmBA;;;AACAjG,EAAAA,QAAQ,CAACsD,SAAT,CAAmByF,aAAnB,GAAmC,UAAU9I,IAAV,EAAgBgG,GAAhB,EAAqB;AACpDA,IAAAA,GAAG,CAAC6C,QAAJ,GAAe,IAAInK,QAAJ,EAAf;;AACA,QAAIsB,IAAI,CAACgJ,YAAL,KAAsBtI,SAA1B,EAAqC;AACjCsF,MAAAA,GAAG,CAAC6C,QAAJ,CAAaG,YAAb,GAA4BhJ,IAAI,CAACgJ,YAAjC;AACH;;AACD,QAAIhJ,IAAI,CAACiJ,WAAL,KAAqBvI,SAAzB,EAAoC;AAChCsF,MAAAA,GAAG,CAAC6C,QAAJ,CAAaI,WAAb,GAA2BjJ,IAAI,CAACiJ,WAAhC;AACH;;AACD,QAAIjJ,IAAI,CAACkJ,QAAL,KAAkBxI,SAAtB,EAAiC;AAC7BsF,MAAAA,GAAG,CAAC6C,QAAJ,CAAaK,QAAb,GAAwBlJ,IAAI,CAACkJ,QAA7B;AACH;AACJ,GAXD;AAYA;;;AACAnJ,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0F,UAAnB,GAAgC,UAAU/I,IAAV,EAAgBgG,GAAhB,EAAqB;AACjDA,IAAAA,GAAG,CAACiC,KAAJ,GAAY,IAAIzI,KAAJ,EAAZ;AACA,QAAI2J,WAAW,GAAGnJ,IAAI,KAAKU,SAAT,GAAqBV,IAAI,CAACiC,MAA1B,GAAmC,CAArD;AACA,QAAImH,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,YAAY,GAAG,CAAnB;;AACA,SAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGJ,WAA9B,EAA2CI,MAAM,EAAjD,EAAqD;AACjD;AACA,UAAIC,QAAQ,GAAGxJ,IAAI,CAACuJ,MAAD,CAAnB;AACA,UAAIvB,IAAI,GAAG,IAAIzI,IAAJ,EAAX,CAHiD,CAIjD;;AACA,UAAIiK,QAAQ,CAAC/G,KAAT,KAAmB,IAAnB,IAA2B+G,QAAQ,CAAC/G,KAAT,KAAmB/B,SAAlD,EAA6D;AACzDsH,QAAAA,IAAI,CAACvF,KAAL,GAAa+G,QAAQ,CAAC/G,KAAtB;AACH,OAFD,MAGK;AACD,cAAMK,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,UAAIkF,IAAI,CAACvF,KAAL,GAAa2G,OAAjB,EAA0B;AACtBA,QAAAA,OAAO,GAAGpB,IAAI,CAACvF,KAAf;AACH,OAFD,MAGK,IAAIuF,IAAI,CAACvF,KAAL,GAAa4G,OAAjB,EAA0B;AAC3BA,QAAAA,OAAO,GAAGrB,IAAI,CAACvF,KAAf;AACH,OAhBgD,CAiBjD;;;AACAuF,MAAAA,IAAI,CAACU,OAAL,GAAe,KAAK3C,WAAL,CAAiBC,GAAG,CAACvD,KAArB,EAA4BuF,IAAI,CAACvF,KAAjC,CAAf,CAlBiD,CAmBjD;;AACA,UAAI+G,QAAQ,CAACC,OAAT,KAAqB,IAArB,IAA6BD,QAAQ,CAACC,OAAT,KAAqB/I,SAAtD,EAAiE;AAC7DsH,QAAAA,IAAI,CAACyB,OAAL,GAAeD,QAAQ,CAACC,OAAT,GAAmB,CAAlC;AACH,OAFD,MAGK;AACDzB,QAAAA,IAAI,CAACyB,OAAL,GAAe,CAAf;AACH,OAzBgD,CA0BjD;;;AACA,UAAID,QAAQ,CAACE,OAAT,KAAqB,IAArB,IAA6BF,QAAQ,CAACE,OAAT,KAAqBhJ,SAAtD,EAAiE;AAC7DsH,QAAAA,IAAI,CAAC0B,OAAL,GAAeF,QAAQ,CAACE,OAAT,GAAmB,CAAlC;AACH,OAFD,MAGK;AACD1B,QAAAA,IAAI,CAAC0B,OAAL,GAAe,CAAf;AACH,OAhCgD,CAiCjD;;;AACA,UAAIF,QAAQ,CAACG,SAAT,KAAuB,IAAvB,IAA+BH,QAAQ,CAACG,SAAT,KAAuBjJ,SAA1D,EAAqE;AACjE,YAAIkJ,SAAS,GAAG,IAAInL,SAAJ,EAAhB;;AACA,YAAI+K,QAAQ,CAACG,SAAT,CAAmBE,MAAnB,KAA8BnJ,SAAlC,EAA6C;AACzCkJ,UAAAA,SAAS,CAACC,MAAV,GAAmBL,QAAQ,CAACG,SAAT,CAAmBE,MAAtC;;AACA,cAAIL,QAAQ,CAACG,SAAT,CAAmBG,WAAnB,KAAmCpJ,SAAvC,EAAkD;AAC9CsH,YAAAA,IAAI,CAACL,KAAL,GAAa6B,QAAQ,CAACG,SAAT,CAAmBG,WAAhC;AACH,WAFD,MAGK;AACD9B,YAAAA,IAAI,CAACL,KAAL,GAAa6B,QAAQ,CAACG,SAAT,CAAmBE,MAAhC;AACH;;AACD7B,UAAAA,IAAI,CAACnF,IAAL,GAAY,KAAKkH,gBAAL,CAAsB/B,IAAI,CAACL,KAA3B,CAAZ;AACAiC,UAAAA,SAAS,CAACI,GAAV,GAAgBhC,IAAI,CAACU,OAArB;AACAkB,UAAAA,SAAS,CAACK,GAAV,GAAiB,KAAK3F,WAAL,CAAiBrC,MAAjB,GAA0B,CAA3C;AACA,eAAKqC,WAAL,CAAiB9C,IAAjB,CAAsBoI,SAAtB;AACA5B,UAAAA,IAAI,CAAC5F,SAAL,GAAiB,IAAIzD,SAAJ,EAAjB;AACA;;AACA,eAAK2D,eAAL,CAAsBkH,QAAQ,CAACU,KAAT,KAAmBxJ,SAAnB,GAA+B,KAAK4E,YAAL,CAAkBkE,QAAQ,CAACU,KAA3B,EAAkC,KAAK3J,cAAvC,CAA/B,GAAwF,KAAKA,cAAnH,EAAoIyH,IAAI,CAAC5F,SAAzI,EAAoJ,QAApJ;AACA4F,UAAAA,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAAC5F,SAAL,CAAeK,KAAjC;AACH;AACJ,OArDgD,CAsDjD;;;AACA,UAAI+G,QAAQ,CAACW,OAAT,KAAqB,IAArB,IAA6BX,QAAQ,CAACW,OAAT,KAAqBzJ,SAAtD,EAAiE;AAC7DsH,QAAAA,IAAI,CAACmC,OAAL,GAAeX,QAAQ,CAACW,OAAxB;AACAnC,QAAAA,IAAI,CAACnF,IAAL,GAAY,SAAZ;AACH,OA1DgD,CA2DjD;;;AACA,UAAI2G,QAAQ,CAAC7B,KAAT,KAAmB,IAAnB,IAA2B6B,QAAQ,CAAC7B,KAAT,KAAmBjH,SAAlD,EAA6D;AACzD,YAAIsH,IAAI,CAACmC,OAAL,KAAiBzJ,SAArB,EAAgC;AAC5BsH,UAAAA,IAAI,CAACL,KAAL,GAAa,CAAb;AACH,SAFD,MAGK;AACDK,UAAAA,IAAI,CAACL,KAAL,GAAa6B,QAAQ,CAAC7B,KAAtB;AACAK,UAAAA,IAAI,CAACnF,IAAL,GAAY,KAAKkH,gBAAL,CAAsB/B,IAAI,CAACL,KAA3B,CAAZ;AACH;AACJ;;AACD,UAAI6B,QAAQ,CAACU,KAAT,KAAmB,IAAnB,IAA2BV,QAAQ,CAACU,KAAT,KAAmBxJ,SAA9C,IAA2DsH,IAAI,CAACG,UAAL,KAAoBzH,SAAnF,EAA8F;AAC1FsH,QAAAA,IAAI,CAAC5F,SAAL,GAAiB,IAAIzD,SAAJ,EAAjB;;AACA,YAAIqJ,IAAI,CAACL,KAAL,YAAsByC,IAA1B,EAAgC;AAC5B,eAAK9H,eAAL,CAAqBkH,QAAQ,CAACU,KAA9B,EAAqClC,IAAI,CAAC5F,SAA1C,EAAqD4F,IAAI,CAACnF,IAA1D,EAAgE,EAAhE;AACH,SAFD,MAGK;AACD,eAAKP,eAAL,CAAqBkH,QAAQ,CAACU,KAA9B,EAAqClC,IAAI,CAAC5F,SAA1C,EAAqD4F,IAAI,CAACnF,IAA1D;AACH;;AACDmF,QAAAA,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAAC5F,SAAL,CAAeK,KAAjC;AACH,OATD,MAUK,IAAIuF,IAAI,CAACL,KAAL,YAAsByC,IAA1B,EAAgC;AACjCpC,QAAAA,IAAI,CAAC5F,SAAL,GAAiB,IAAIzD,SAAJ,EAAjB;AACA,aAAK2D,eAAL,CAAqB,EAArB,EAAyB0F,IAAI,CAAC5F,SAA9B,EAAyC4F,IAAI,CAACnF,IAA9C,EAAoD,EAApD;AACAmF,QAAAA,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAAC5F,SAAL,CAAeK,KAAjC;AACH;;AACD,WAAK4H,aAAL,CAAmBrC,IAAnB;AACA,WAAK5D,UAAL,GAAkB,KAAKkG,iBAAL,CAAuBtC,IAAvB,EAA6BhC,GAAG,CAACvD,KAAjC,EAAwC,KAAK2B,UAA7C,CAAlB;AACA4B,MAAAA,GAAG,CAACiC,KAAJ,CAAUV,GAAV,CAAcS,IAAd;AACAsB,MAAAA,YAAY,GAAItB,IAAI,CAACvF,KAAL,GAAa,CAA7B;AACH;;AACDuD,IAAAA,GAAG,CAACuE,KAAJ,GAAanB,OAAD,GAAY,GAAZ,GAAmBC,OAA/B;AACH,GAhGD;;AAiGAtJ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmH,SAAnB,GAA+B,YAAY;AACvC,QAAIC,MAAJ;AACAA,IAAAA,MAAM,GAAG,IAAIrJ,GAAJ,EAAT;AACA;;AACAqJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,OAAX,EAAoB,UAApB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,QAAX,EAAqB,UAArB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,OAAX,EAAoB,UAApB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,KAAX,EAAkB,UAAlB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,QAAX,EAAqB,UAArB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,QAAX,EAAqB,UAArB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,OAAX,EAAoB,UAApB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,OAAX,EAAoB,UAApB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,MAAX,EAAmB,UAAnB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,SAAX,EAAsB,UAAtB;AACA;;AACAgJ,IAAAA,MAAM,CAAChJ,GAAP,CAAW,QAAX,EAAqB,UAArB;AACA,WAAOgJ,MAAP;AACH,GApCD;;AAqCA1K,EAAAA,QAAQ,CAACsD,SAAT,CAAmBqH,YAAnB,GAAkC,UAAUC,QAAV,EAAoB;AAClD,QAAIA,QAAQ,CAACtC,OAAT,CAAiB,GAAjB,MAA0B,CAA9B,EAAiC;AAC7B,aAAOsC,QAAQ,CAACC,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,CAAP;AACH;;AACDD,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,WAAT,EAAX;AACA,SAAKC,SAAL,GAAiB,KAAKN,SAAL,EAAjB;;AACA,QAAI,KAAKM,SAAL,CAAe3I,GAAf,CAAmBwI,QAAnB,CAAJ,EAAkC;AAC9BA,MAAAA,QAAQ,GAAG,KAAKG,SAAL,CAAeC,GAAf,CAAmBJ,QAAnB,CAAX;AACH,KAFD,MAGK;AACDA,MAAAA,QAAQ,GAAG,UAAX;AACH;;AACD,WAAOA,QAAP;AACH,GAbD;;AAcA5K,EAAAA,QAAQ,CAACsD,SAAT,CAAmB2H,gBAAnB,GAAsC,UAAUrD,KAAV,EAAiBK,IAAjB,EAAuB;AACzD,QAAIiD,SAAS,GAAGtD,KAAhB;;AACA,QAAIA,KAAK,CAACU,OAAN,CAAc,OAAd,MAA2B,CAAC,CAA5B,IAAiCV,KAAK,CAACU,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA1D,IAA+DV,KAAK,CAACU,OAAN,CAAc,KAAd,MAAyB,CAAC,CAAzF,IACAV,KAAK,CAACU,OAAN,CAAc,KAAd,MAAyB,CAAC,CAD1B,IAC+BV,KAAK,CAACU,OAAN,CAAc,KAAd,MAAyB,CAAC,CAD7D,EACgE;AAC5D,UAAI6C,YAAY,GAAG,EAAnB;AACA,UAAIC,UAAU,GAAGxD,KAAK,CAACU,OAAN,CAAc,GAAd,EAAmB,CAAnB,CAAjB;AACA,UAAI+C,QAAQ,GAAGzD,KAAK,CAACU,OAAN,CAAc,GAAd,EAAmB8C,UAAU,GAAG,CAAhC,CAAf;;AACA,UAAIA,UAAU,IAAI,CAAd,IAAmBC,QAAQ,IAAI,CAAnC,EAAsC;AAClC,YAAID,UAAU,KAAK,CAAnB,EAAsB;AAClBD,UAAAA,YAAY,IAAI,gCAAgCvD,KAAK,CAAC0D,SAAN,CAAgB,CAAhB,EAAmBF,UAAnB,CAAhC,GAAiE,UAAjF;AACH;;AACD,eAAOA,UAAU,IAAI,CAAd,IAAmBC,QAAQ,IAAI,CAAtC,EAAyC;AACrCA,UAAAA,QAAQ,GAAGzD,KAAK,CAACU,OAAN,CAAc,GAAd,EAAmB8C,UAAU,GAAG,CAAhC,CAAX;;AACA,cAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACf,gBAAIE,SAAS,GAAG3D,KAAK,CAAC0D,SAAN,CAAgBF,UAAU,GAAG,CAA7B,EAAgCC,QAAhC,CAAhB;AACAD,YAAAA,UAAU,GAAGxD,KAAK,CAACU,OAAN,CAAc,GAAd,EAAmB+C,QAAQ,GAAG,CAA9B,CAAb;;AACA,gBAAID,UAAU,GAAG,CAAjB,EAAoB;AAChBA,cAAAA,UAAU,GAAGF,SAAS,CAAChJ,MAAvB;AACH;;AACD,gBAAIsJ,IAAI,GAAGN,SAAS,CAACI,SAAV,CAAoBD,QAAQ,GAAG,CAA/B,EAAkCD,UAAlC,CAAX;;AACA,gBAAII,IAAI,CAACtJ,MAAL,KAAgB,CAApB,EAAuB;AACnB,kBAAIuJ,QAAQ,GAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAf;;AACA,kBAAID,QAAQ,CAACvJ,MAAT,GAAkB,CAAtB,EAAyB;AACrBiJ,gBAAAA,YAAY,IAAI,UAAhB;AACH;;AACD,kBAAIM,QAAQ,CAACvJ,MAAT,GAAkB,CAAtB,EAAyB;AACrB,qBAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGH,QAA9B,EAAwCE,EAAE,GAAGC,UAAU,CAAC1J,MAAxD,EAAgEyJ,EAAE,EAAlE,EAAsE;AAClE,sBAAIE,OAAO,GAAGD,UAAU,CAACD,EAAD,CAAxB;AACA,sBAAIG,KAAK,GAAGD,OAAO,CAACE,IAAR,GAAeT,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAZ;;AACA,0BAAQQ,KAAR;AACI,yBAAK,OAAL;AACIX,sBAAAA,YAAY,IAAI,cAAcU,OAAO,CAACP,SAAR,CAAkB,CAAlB,EAAqBO,OAAO,CAAC3J,MAAR,GAAiB,CAAtC,CAAd,GAAyD,KAAzE;AACA;;AACJ,yBAAK,OAAL;AACIiJ,sBAAAA,YAAY,IAAI,iBAAiBU,OAAO,CAACP,SAAR,CAAkB,CAAlB,EAAqBO,OAAO,CAAC3J,MAAR,GAAiB,CAAtC,CAAjB,GAA4D,KAA5E;AACA;;AACJ,yBAAK,OAAL;AACIiJ,sBAAAA,YAAY,IAAI,iBAAiB,KAAKR,YAAL,CAAkBkB,OAAO,CAACP,SAAR,CAAkB,CAAlB,EAAqBO,OAAO,CAAC3J,MAAR,GAAiB,CAAtC,CAAlB,CAAjB,GAA+E,KAA/F;AACA;;AACJ,yBAAK,OAAL;AACI,0BAAI2H,SAAS,GAAG,IAAInL,SAAJ,EAAhB;AACAmL,sBAAAA,SAAS,CAACC,MAAV,GAAmB+B,OAAO,CAACP,SAAR,CAAkB,CAAlB,EAAqBO,OAAO,CAAC3J,MAAR,GAAiB,CAAtC,EAAyC6J,IAAzC,EAAnB;AACAlC,sBAAAA,SAAS,CAACI,GAAV,GAAgBhC,IAAI,CAACU,OAArB;AACAkB,sBAAAA,SAAS,CAACK,GAAV,GAAiB,KAAK3F,WAAL,CAAiBrC,MAAjB,GAA0B,CAA3C;AACA,2BAAKqC,WAAL,CAAiB9C,IAAjB,CAAsBoI,SAAtB;AACAsB,sBAAAA,YAAY,IAAI,iCAAhB;AACA;AAjBR;AAmBH;AACJ,eAxBD,MAyBK,IAAIM,QAAQ,CAACvJ,MAAT,KAAoB,CAAxB,EAA2B;AAC5B,oBAAIiI,KAAK,GAAGsB,QAAQ,CAAC,CAAD,CAAR,CAAYM,IAAZ,EAAZ;;AACA,wBAAQ5B,KAAR;AACI,uBAAK,GAAL;AACIgB,oBAAAA,YAAY,IAAI,MAAhB;AACA;;AACJ,uBAAK,GAAL;AACIA,oBAAAA,YAAY,IAAI,MAAhB;AACA;;AACJ,uBAAK,GAAL;AACIA,oBAAAA,YAAY,IAAI,MAAhB;AACA;AATR;AAWH;;AACDA,cAAAA,YAAY,IAAI,mCAAmCK,IAAnC,GAA0C,UAA1D;AACH;AACJ;AACJ;;AACD,YAAIL,YAAY,KAAK,EAArB,EAAyB;AACrB,iBAAOD,SAAP;AACH;;AACD,eAAOC,YAAP;AACH,OAjED,MAkEK;AACD,eAAOD,SAAP;AACH;AACJ,KA1ED,MA2EK;AACD,aAAOA,SAAP;AACH;AACJ,GAhFD;;AAiFAlL,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0I,gBAAnB,GAAsC,UAAU/L,IAAV,EAAgBoC,SAAhB,EAA2B;AAC7D,QAAIK,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAKpB,UAAL,CAAgBc,GAAhB,CAAoBnC,IAAI,CAACkC,IAAzB,CAAJ,EAAoC;AAChCE,MAAAA,SAAS,CAACK,KAAV,GAAkB,KAAKvB,OAAL,CAAa2G,MAAb,CAAoB,UAAUmE,CAAV,EAAa;AAAE,eAAQA,CAAC,CAAC9J,IAAF,KAAWlC,IAAI,CAACkC,IAAxB;AAAgC,OAAnE,EAAqE,CAArE,EAAwEO,KAA1F;AACAL,MAAAA,SAAS,CAACF,IAAV,GAAiBlC,IAAI,CAACkC,IAAtB;AACH;AACJ,GAND;AAOA;;;AACAnC,EAAAA,QAAQ,CAACsD,SAAT,CAAmBf,eAAnB,GAAqC,UAAUtC,IAAV,EAAgBoC,SAAhB,EAA2B6J,QAA3B,EAAqCC,aAArC,EAAoD;AACrF;AACA,QAAIlM,IAAI,CAACkC,IAAL,KAAc,IAAd,IAAsBlC,IAAI,CAACkC,IAAL,KAAcxB,SAAxC,EAAmD;AAC/C,UAAI0B,SAAS,CAACC,aAAd,EAA6B;AACzBD,QAAAA,SAAS,CAACF,IAAV,GAAiBlC,IAAI,CAACkC,IAAtB;AACH,OAFD,MAGK;AACD,aAAK6J,gBAAL,CAAsB/L,IAAtB,EAA4BoC,SAA5B;AACA;AACH;AACJ,KAVoF,CAWrF;;;AACA,QAAIpC,IAAI,CAACmM,SAAL,KAAmB,IAAnB,IAA2BnM,IAAI,CAACmM,SAAL,KAAmBzL,SAAlD,EAA6D;AACzD0B,MAAAA,SAAS,CAAC+J,SAAV,GAAsBnM,IAAI,CAACmM,SAA3B;AACH,KAdoF,CAerF;AACA;;;AACA/J,IAAAA,SAAS,CAACgK,OAAV,GAAoB,IAAIvN,OAAJ,EAApB,CAjBqF,CAkBrF;;AACA,QAAImB,IAAI,CAACoM,OAAL,KAAiB,IAAjB,IAAyBpM,IAAI,CAACoM,OAAL,KAAiB1L,SAA9C,EAAyD;AACrD,WAAK2L,YAAL,CAAkBrM,IAAI,CAACoM,OAAvB,EAAgChK,SAAS,CAACgK,OAAV,CAAkBE,GAAlD;AACH,KArBoF,CAsBrF;;;AACA,QAAItM,IAAI,CAACuM,UAAL,KAAoB,IAApB,IAA4BvM,IAAI,CAACuM,UAAL,KAAoB7L,SAApD,EAA+D;AAC3D,WAAK2L,YAAL,CAAkBrM,IAAI,CAACuM,UAAvB,EAAmCnK,SAAS,CAACgK,OAAV,CAAkBI,IAArD;AACH,KAzBoF,CA0BrF;;;AACA,QAAIxM,IAAI,CAACyM,WAAL,KAAqB,IAArB,IAA6BzM,IAAI,CAACyM,WAAL,KAAqB/L,SAAtD,EAAiE;AAC7D,WAAK2L,YAAL,CAAkBrM,IAAI,CAACyM,WAAvB,EAAoCrK,SAAS,CAACgK,OAAV,CAAkBM,KAAtD;AACH,KA7BoF,CA8BrF;;;AACA,QAAI1M,IAAI,CAAC2M,SAAL,KAAmB,IAAnB,IAA2B3M,IAAI,CAAC2M,SAAL,KAAmBjM,SAAlD,EAA6D;AACzD,WAAK2L,YAAL,CAAkBrM,IAAI,CAAC2M,SAAvB,EAAkCvK,SAAS,CAACgK,OAAV,CAAkBQ,GAApD;AACH,KAjCoF,CAkCrF;;;AACA,QAAI5M,IAAI,CAAC6M,YAAL,KAAsB,IAAtB,IAA8B7M,IAAI,CAAC6M,YAAL,KAAsBnM,SAAxD,EAAmE;AAC/D,WAAK2L,YAAL,CAAkBrM,IAAI,CAAC6M,YAAvB,EAAqCzK,SAAS,CAACgK,OAAV,CAAkBU,MAAvD;AACH,KArCoF,CAsCrF;;;AACA,QAAI9M,IAAI,CAAC+M,QAAL,KAAkB,IAAlB,IAA0B/M,IAAI,CAAC+M,QAAL,KAAkBrM,SAAhD,EAA2D;AACvD0B,MAAAA,SAAS,CAAC2K,QAAV,GAAqB/M,IAAI,CAAC+M,QAA1B;AACH,KAzCoF,CA0CrF;;;AACA,QAAI/M,IAAI,CAACgN,QAAL,KAAkB,IAAlB,IAA0BhN,IAAI,CAACgN,QAAL,KAAkBtM,SAAhD,EAA2D;AACvD0B,MAAAA,SAAS,CAAC4K,QAAV,GAAqBhN,IAAI,CAACgN,QAA1B;AACH,KA7CoF,CA8CrF;;;AACA,QAAIhN,IAAI,CAACQ,SAAL,KAAmB,IAAnB,IAA2BR,IAAI,CAACQ,SAAL,KAAmBE,SAAlD,EAA6D;AACzD0B,MAAAA,SAAS,CAAC5B,SAAV,GAAsBR,IAAI,CAACQ,SAA3B;AACH,KAjDoF,CAkDrF;;;AACA,QAAIR,IAAI,CAACiN,MAAL,KAAgB,IAAhB,IAAwBjN,IAAI,CAACiN,MAAL,KAAgBvM,SAA5C,EAAuD;AACnD0B,MAAAA,SAAS,CAAC6K,MAAV,GAAmBjN,IAAI,CAACiN,MAAxB;AACH,KArDoF,CAsDrF;;;AACA,QAAIjN,IAAI,CAACkN,IAAL,KAAc,IAAd,IAAsBlN,IAAI,CAACkN,IAAL,KAAcxM,SAAxC,EAAmD;AAC/C0B,MAAAA,SAAS,CAAC8K,IAAV,GAAiBlN,IAAI,CAACkN,IAAtB;AACH,KAzDoF,CA0DrF;;;AACA,QAAIlN,IAAI,CAACmN,MAAL,KAAgB,IAAhB,IAAwBnN,IAAI,CAACmN,MAAL,KAAgBzM,SAA5C,EAAuD;AACnD0B,MAAAA,SAAS,CAAC+K,MAAV,GAAmBnN,IAAI,CAACmN,MAAL,CAAYC,WAAZ,EAAnB;AACH,KA7DoF,CA8DrF;;;AACA,QAAIpN,IAAI,CAACqN,MAAL,KAAgB,IAAhB,IAAwBrN,IAAI,CAACqN,MAAL,KAAgB3M,SAA5C,EAAuD;AACnD0B,MAAAA,SAAS,CAACiL,MAAV,GAAmBrN,IAAI,CAACqN,MAAxB;;AACA,UAAI,EAAEjL,SAAS,CAAC+K,MAAV,KAAqB,MAArB,IAA+B/K,SAAS,CAAC+K,MAAV,KAAqB,OAAtD,CAAJ,EAAoE;AAChE/K,QAAAA,SAAS,CAAC+K,MAAV,GAAmB,MAAnB;AACH;AACJ;;AACD,QAAInN,IAAI,CAACsN,QAAL,KAAkB,IAAlB,IAA0BtN,IAAI,CAACsN,QAAL,KAAkB5M,SAAhD,EAA2D;AACvD0B,MAAAA,SAAS,CAACkL,QAAV,GAAqBtN,IAAI,CAACsN,QAA1B;AACH,KAvEoF,CAwErF;;;AACA,QAAItN,IAAI,CAACuN,MAAL,KAAgB,IAAhB,IAAwBvN,IAAI,CAACuN,MAAL,KAAgB7M,SAA5C,EAAuD;AACnD0B,MAAAA,SAAS,CAACmL,MAAV,GAAmBvN,IAAI,CAACuN,MAAL,CAAYH,WAAZ,EAAnB;AACH,KA3EoF,CA4ErF;;;AACA,QAAIpN,IAAI,CAACS,SAAL,KAAmB,IAAnB,IAA2BT,IAAI,CAACS,SAAL,KAAmBC,SAAlD,EAA6D;AACzD0B,MAAAA,SAAS,CAAC3B,SAAV,GAAsBT,IAAI,CAACS,SAA3B;AACH,KA/EoF,CAgFrF;;;AACA,QAAIT,IAAI,CAACwN,QAAL,KAAkB,IAAlB,IAA0BxN,IAAI,CAACwN,QAAL,KAAkB9M,SAAhD,EAA2D;AACvD0B,MAAAA,SAAS,CAACoL,QAAV,GAAqBxN,IAAI,CAACwN,QAA1B;AACH,KAnFoF,CAoFrF;;;AACA,QAAIxN,IAAI,CAAC2C,YAAL,KAAsB,IAAtB,IAA8B3C,IAAI,CAAC2C,YAAL,KAAsBjC,SAAxD,EAAmE;AAC/D,UAAIV,IAAI,CAAC6C,IAAL,KAAc,IAAd,IAAsB7C,IAAI,CAAC6C,IAAL,KAAcnC,SAAxC,EAAmD;AAC/C0B,QAAAA,SAAS,CAACO,YAAV,GAAyB,KAAK8K,eAAL,CAAqBzN,IAAI,CAAC2C,YAA1B,EAAwC3C,IAAI,CAAC6C,IAA7C,CAAzB;AACH,OAFD,MAGK;AACDT,QAAAA,SAAS,CAACO,YAAV,GAAyB,KAAK8K,eAAL,CAAqBzN,IAAI,CAAC2C,YAA1B,EAAwCsJ,QAAxC,CAAzB;AACH;AACJ,KAPD,MAQK,IAAIC,aAAa,KAAKxL,SAAtB,EAAiC;AAClC0B,MAAAA,SAAS,CAACsL,QAAV,GAAqB,EAArB;AACAtL,MAAAA,SAAS,CAACO,YAAV,GAAyB,SAAzB;AACH,KAHI,MAIA;AACDP,MAAAA,SAAS,CAACO,YAAV,GAAyB,SAAzB;AACH;;AACDP,IAAAA,SAAS,CAACK,KAAV,GAAkB,KAAKkL,gBAAL,CAAsBvL,SAAtB,CAAlB;AACH,GArGD;;AAsGArC,EAAAA,QAAQ,CAACsD,SAAT,CAAmBuK,kBAAnB,GAAwC,UAAUjL,YAAV,EAAwBE,IAAxB,EAA8B;AAClE,QAAID,MAAM,GAAG,KAAK6K,eAAL,CAAqB9K,YAArB,EAAmCE,IAAnC,CAAb;;AACA,QAAID,MAAM,KAAKD,YAAf,EAA6B;AACzB,UAAIkL,MAAM,GAAG,KAAKvM,OAAL,CAAayJ,GAAb,CAAiBpI,YAAjB,CAAb;;AACA,UAAIkL,MAAM,KAAKnN,SAAf,EAA0B;AACtBmN,QAAAA,MAAM,CAACC,UAAP,GAAoBlL,MAApB;;AACA,YAAI,KAAKtB,OAAL,CAAaa,GAAb,CAAiBS,MAAjB,CAAJ,EAA8B;AAC1B,eAAK,IAAI8I,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAKpM,aAA3B,EAA0C+J,EAAE,GAAGqC,EAAE,CAAC9L,MAAlD,EAA0DyJ,EAAE,EAA5D,EAAgE;AAC5D,gBAAIsC,YAAY,GAAGD,EAAE,CAACrC,EAAD,CAArB;;AACA,gBAAIsC,YAAY,CAACN,QAAb,KAA0BG,MAAM,CAACH,QAArC,EAA+C;AAC3CM,cAAAA,YAAY,CAACN,QAAb,GAAwB,KAAKpM,OAAL,CAAayJ,GAAb,CAAiBnI,MAAjB,EAAyB8K,QAAjD;AACH;AACJ;;AACD,eAAK,IAAIO,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKxM,QAA3B,EAAqCuM,EAAE,GAAGC,EAAE,CAACjM,MAA7C,EAAqDgM,EAAE,EAAvD,EAA2D;AACvD,gBAAIE,OAAO,GAAGD,EAAE,CAACD,EAAD,CAAhB;;AACA,gBAAIE,OAAO,CAACT,QAAR,KAAqBG,MAAM,CAACH,QAAhC,EAA0C;AACtCS,cAAAA,OAAO,CAACT,QAAR,GAAmB,KAAKpM,OAAL,CAAayJ,GAAb,CAAiBnI,MAAjB,EAAyB8K,QAA5C;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,GAtBD;;AAuBA3N,EAAAA,QAAQ,CAACsD,SAAT,CAAmBoK,eAAnB,GAAqC,UAAU9K,YAAV,EAAwBE,IAAxB,EAA8B;AAC/D,QAAIuL,YAAJ;;AACA,YAAQvL,IAAR;AACI,WAAK,QAAL;AACI,YAAI;AACAuL,UAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAUyN,gBAAV,CAA2B;AAAEzL,YAAAA,MAAM,EAAED,YAAV;AAAwBhC,YAAAA,QAAQ,EAAE,KAAKA,QAAvC;AAAiD2N,YAAAA,WAAW,EAAE;AAA9D,WAA3B,CAAf;AACH,SAFD,CAGA,OAAOC,KAAP,EAAc;AACVH,UAAAA,YAAY,GAAGzL,YAAf;AACH;;AACD;;AACJ,WAAK,UAAL;AACI,YAAI;AACAyL,UAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAEC,YAAAA,QAAQ,EAAE9L,YAAZ;AAA0BE,YAAAA,IAAI,EAAE;AAAhC,WAAzB,EAAuE,IAAvE,CAAf;AACH,SAFD,CAGA,OAAO0L,KAAP,EAAc;AACV,cAAI;AACAH,YAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAE5L,cAAAA,MAAM,EAAED,YAAV;AAAwBE,cAAAA,IAAI,EAAE;AAA9B,aAAzB,EAAqE,IAArE,CAAf;AACH,WAFD,CAGA,OAAO0L,KAAP,EAAc;AACVH,YAAAA,YAAY,GAAGzL,YAAf;AACH;AACJ;;AACD;;AACJ,WAAK,MAAL;AACI,YAAI;AACAyL,UAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAEC,YAAAA,QAAQ,EAAE9L,YAAZ;AAA0BE,YAAAA,IAAI,EAAE;AAAhC,WAAzB,EAAmE,IAAnE,CAAf;AACH,SAFD,CAGA,OAAO0L,KAAP,EAAc;AACV,cAAI;AACAH,YAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAE5L,cAAAA,MAAM,EAAED,YAAV;AAAwBE,cAAAA,IAAI,EAAE;AAA9B,aAAzB,EAAiE,IAAjE,CAAf;AACH,WAFD,CAGA,OAAO0L,KAAP,EAAc;AACVH,YAAAA,YAAY,GAAGzL,YAAf;AACH;AACJ;;AACD;;AACJ,WAAK,MAAL;AACI,YAAI;AACAyL,UAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAEC,YAAAA,QAAQ,EAAE9L,YAAZ;AAA0BE,YAAAA,IAAI,EAAE;AAAhC,WAAzB,EAAmE,IAAnE,CAAf;AACH,SAFD,CAGA,OAAO0L,KAAP,EAAc;AACV,cAAI;AACAH,YAAAA,YAAY,GAAG,KAAKxN,IAAL,CAAU4N,cAAV,CAAyB;AAAE5L,cAAAA,MAAM,EAAED,YAAV;AAAwBE,cAAAA,IAAI,EAAE;AAA9B,aAAzB,EAAiE,IAAjE,CAAf;AACH,WAFD,CAGA,OAAO0L,KAAP,EAAc;AACVH,YAAAA,YAAY,GAAGzL,YAAf;AACH;AACJ;;AACD;;AACJ;AACIyL,QAAAA,YAAY,GAAGzL,YAAf;AACA;AAlDR;;AAoDA,WAAOyL,YAAP;AACH,GAvDD;AAwDA;;;AACArO,EAAAA,QAAQ,CAACsD,SAAT,CAAmBgJ,YAAnB,GAAkC,UAAUrM,IAAV,EAAgB0O,MAAhB,EAAwB;AACtD,QAAI1O,IAAI,CAAC2O,KAAL,KAAe,IAAf,IAAuB3O,IAAI,CAAC2O,KAAL,KAAejO,SAA1C,EAAqD;AACjDgO,MAAAA,MAAM,CAACC,KAAP,GAAe3O,IAAI,CAAC2O,KAApB;AACH,KAFD,MAGK;AACDD,MAAAA,MAAM,CAACC,KAAP,GAAe,SAAf;AACH;;AACD,QAAI3O,IAAI,CAAC4O,SAAL,KAAmB,IAAnB,IAA2B5O,IAAI,CAAC4O,SAAL,KAAmBlO,SAAlD,EAA6D;AACzDgO,MAAAA,MAAM,CAACE,SAAP,GAAmB5O,IAAI,CAAC4O,SAAxB;AACH,KAFD,MAGK;AACDF,MAAAA,MAAM,CAACE,SAAP,GAAmB,MAAnB;AACH;AACJ,GAbD;;AAcA7O,EAAAA,QAAQ,CAACsD,SAAT,CAAmBsK,gBAAnB,GAAsC,UAAUzD,KAAV,EAAiB;AACnD,QAAIA,KAAK,CAAC7H,aAAV,EAAyB;AACrB,WAAKwM,kBAAL,CAAwB3E,KAAxB;AACA,WAAKhJ,OAAL,CAAaM,IAAb,CAAkB0I,KAAlB;AACA,aAAO,KAAKhJ,OAAL,CAAae,MAApB;AACH,KAJD,MAKK;AACD,UAAI6M,aAAa,GAAG,KAAKC,YAAL,CAAkB7E,KAAlB,CAApB;;AACA,UAAI,CAAC4E,aAAa,CAACrJ,MAAnB,EAA2B;AACvB,aAAKoJ,kBAAL,CAAwB3E,KAAxB;AACA,aAAKhJ,OAAL,CAAaM,IAAb,CAAkB0I,KAAlB;AACA,eAAO,KAAKhJ,OAAL,CAAae,MAApB;AACH,OAJD,MAKK;AACD;AACA,eAAO6M,aAAa,CAACrM,KAArB;AACH;AACJ;AACJ,GAlBD;;AAmBA1C,EAAAA,QAAQ,CAACsD,SAAT,CAAmBwL,kBAAnB,GAAwC,UAAU3E,KAAV,EAAiB;AACrD,QAAIA,KAAK,CAACvH,YAAN,KAAuB,SAAvB,IAAoC,CAAC,KAAKrB,OAAL,CAAaa,GAAb,CAAiB+H,KAAK,CAACvH,YAAvB,CAAzC,EAA+E;AAC3E,UAAIqM,EAAE,GAAG,KAAK1N,OAAL,CAAa2N,IAAb,GAAoB,GAA7B;AACA,WAAK3N,OAAL,CAAaG,GAAb,CAAiByI,KAAK,CAACvH,YAAvB,EAAqC,IAAI3D,MAAJ,CAAWgQ,EAAX,EAAe9E,KAAK,CAACvH,YAArB,CAArC;AACH;AACJ,GALD;;AAMA5C,EAAAA,QAAQ,CAACsD,SAAT,CAAmB6L,SAAnB,GAA+B,UAAUC,cAAV,EAA0B;AACrD,QAAI1J,MAAM,GAAG,KAAb;AACA,QAAIhD,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIiJ,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAK/M,MAA3B,EAAmC0K,EAAE,GAAGqC,EAAE,CAAC9L,MAA3C,EAAmDyJ,EAAE,EAArD,EAAyD;AACrD,UAAI0D,IAAI,GAAGrB,EAAE,CAACrC,EAAD,CAAb;AACAjJ,MAAAA,KAAK;AACL,UAAIjC,SAAS,GAAGE,SAAhB;;AACA,UAAIyO,cAAc,CAAC3O,SAAf,KAA6BE,SAAjC,EAA4C;AACxCF,QAAAA,SAAS,GAAI,OAAO2O,cAAc,CAAC3O,SAAf,CAAyBoK,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,CAApB;AACH;;AACDnF,MAAAA,MAAM,GAAG2J,IAAI,CAACT,KAAL,KAAenO,SAAf,IACL4O,IAAI,CAACC,CAAL,KAAWF,cAAc,CAACjC,IADrB,IAELkC,IAAI,CAACpN,CAAL,KAAWmN,cAAc,CAAClC,MAFrB,IAGLmC,IAAI,CAACE,CAAL,KAAWH,cAAc,CAAC1O,SAHrB,IAIL2O,IAAI,CAAClN,IAAL,KAAciN,cAAc,CAACpC,QAJxB,IAKLqC,IAAI,CAACG,EAAL,KAAYJ,cAAc,CAACnC,QAL/B;;AAMA,UAAIvH,MAAJ,EAAY;AACR;AACH;AACJ;;AACDhD,IAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACA,WAAO;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBgD,MAAAA,MAAM,EAAEA;AAAxB,KAAP;AACH,GAtBD;;AAuBA1F,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmM,WAAnB,GAAiC,UAAUL,cAAV,EAA0B;AACvD,QAAIM,MAAM,GAAG,IAAI9Q,SAAJ,EAAb;;AACA,QAAI,KAAK+Q,WAAL,CAAiBP,cAAc,CAAC/C,OAAhC,CAAJ,EAA8C;AAC1C,aAAQqD,MAAM,CAACrD,OAAP,CAAeE,GAAf,CAAmBqC,KAAnB,KAA6BQ,cAAc,CAAC/C,OAAf,CAAuBE,GAAvB,CAA2BqC,KAAxD,IACJc,MAAM,CAACrD,OAAP,CAAeE,GAAf,CAAmBsC,SAAnB,KAAiCO,cAAc,CAAC/C,OAAf,CAAuBE,GAAvB,CAA2BsC,SADhE;AAEH,KAHD,MAIK;AACD,aAAQa,MAAM,CAACrD,OAAP,CAAeI,IAAf,CAAoBmC,KAApB,KAA8BQ,cAAc,CAAC/C,OAAf,CAAuBI,IAAvB,CAA4BmC,KAA1D,IACJc,MAAM,CAACrD,OAAP,CAAeI,IAAf,CAAoBoC,SAApB,KAAkCO,cAAc,CAAC/C,OAAf,CAAuBI,IAAvB,CAA4BoC,SAD1D,IAEJa,MAAM,CAACrD,OAAP,CAAeM,KAAf,CAAqBiC,KAArB,KAA+BQ,cAAc,CAAC/C,OAAf,CAAuBM,KAAvB,CAA6BiC,KAFxD,IAGJc,MAAM,CAACrD,OAAP,CAAeM,KAAf,CAAqBkC,SAArB,KAAmCO,cAAc,CAAC/C,OAAf,CAAuBM,KAAvB,CAA6BkC,SAH5D,IAIJa,MAAM,CAACrD,OAAP,CAAeQ,GAAf,CAAmB+B,KAAnB,KAA6BQ,cAAc,CAAC/C,OAAf,CAAuBQ,GAAvB,CAA2B+B,KAJpD,IAKJc,MAAM,CAACrD,OAAP,CAAeQ,GAAf,CAAmBgC,SAAnB,KAAiCO,cAAc,CAAC/C,OAAf,CAAuBQ,GAAvB,CAA2BgC,SALxD,IAMJa,MAAM,CAACrD,OAAP,CAAeU,MAAf,CAAsB6B,KAAtB,KAAgCQ,cAAc,CAAC/C,OAAf,CAAuBU,MAAvB,CAA8B6B,KAN1D,IAOJc,MAAM,CAACrD,OAAP,CAAeU,MAAf,CAAsB8B,SAAtB,KAAoCO,cAAc,CAAC/C,OAAf,CAAuBU,MAAvB,CAA8B8B,SAPtE;AAQH;AACJ,GAhBD;;AAiBA7O,EAAAA,QAAQ,CAACsD,SAAT,CAAmBqM,WAAnB,GAAiC,UAAUC,eAAV,EAA2B;AACxD,QAAIC,cAAc,GAAG,IAAIjR,SAAJ,EAArB;AACA,WAAOiR,cAAc,CAACxD,OAAf,CAAuBE,GAAvB,CAA2BqC,KAA3B,KAAqCgB,eAAe,CAACrD,GAAhB,CAAoBqC,KAAzD,IACHiB,cAAc,CAACxD,OAAf,CAAuBE,GAAvB,CAA2BsC,SAA3B,KAAyCe,eAAe,CAACrD,GAAhB,CAAoBsC,SADjE;AAEH,GAJD;;AAKA7O,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0L,YAAnB,GAAkC,UAAUI,cAAV,EAA0B;AACxD,QAAI1J,MAAM,GAAG,IAAb;AACA,QAAIhD,KAAK,GAAG,CAAZ;AACA,QAAIoN,gBAAgB,GAAG,CAAvB;;AACA,SAAK,IAAInE,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAK7M,OAA3B,EAAoCwK,EAAE,GAAGqC,EAAE,CAAC9L,MAA5C,EAAoDyJ,EAAE,EAAtD,EAA0D;AACtD,UAAIoE,SAAS,GAAG/B,EAAE,CAACrC,EAAD,CAAlB;AACAjG,MAAAA,MAAM,GAAGqK,SAAS,CAACzN,aAAV,GAA0B,KAA1B,GAAmCyN,SAAS,CAAC3D,SAAV,KAAwBgD,cAAc,CAAChD,SAAvC,IACxC2D,SAAS,CAAC5C,IAAV,KAAmBiC,cAAc,CAACjC,IADM,IAExC4C,SAAS,CAACpC,QAAV,KAAuByB,cAAc,CAACzB,QAFE,IAGxCoC,SAAS,CAACnN,YAAV,KAA2BwM,cAAc,CAACxM,YAHF,IAIxCmN,SAAS,CAACjN,IAAV,KAAmBsM,cAAc,CAACtM,IAJM,IAKxCiN,SAAS,CAACtP,SAAV,KAAwB2O,cAAc,CAAC3O,SALC,IAMxCsP,SAAS,CAAC/C,QAAV,KAAuBoC,cAAc,CAACpC,QANE,IAOxC+C,SAAS,CAAC9C,QAAV,KAAuBmC,cAAc,CAACnC,QAPE,IAQxC8C,SAAS,CAAC3C,MAAV,KAAqBgC,cAAc,CAAChC,MARI,IASxC2C,SAAS,CAAC7C,MAAV,KAAqBkC,cAAc,CAAClC,MATI,IAUxC6C,SAAS,CAACrP,SAAV,KAAwB0O,cAAc,CAAC1O,SAVC,IAWxCqP,SAAS,CAACvC,MAAV,KAAqB4B,cAAc,CAAC5B,MAXI,IAYxCuC,SAAS,CAACzC,MAAV,KAAqB8B,cAAc,CAAC9B,MAZI,IAaxCyC,SAAS,CAACxC,QAAV,KAAuB6B,cAAc,CAAC7B,QAbE,IAcxCwC,SAAS,CAACtC,QAAV,KAAuB2B,cAAc,CAAC3B,QAdE,IAevCsC,SAAS,CAAC1D,OAAV,CAAkBE,GAAlB,CAAsBqC,KAAtB,KAAgCQ,cAAc,CAAC/C,OAAf,CAAuBE,GAAvB,CAA2BqC,KAA3D,IACGmB,SAAS,CAAC1D,OAAV,CAAkBE,GAAlB,CAAsBsC,SAAtB,KAAoCO,cAAc,CAAC/C,OAAf,CAAuBE,GAAvB,CAA2BsC,SAhB3B,IAiBvCkB,SAAS,CAAC1D,OAAV,CAAkBI,IAAlB,CAAuBmC,KAAvB,KAAiCQ,cAAc,CAAC/C,OAAf,CAAuBI,IAAvB,CAA4BmC,KAA7D,IACGmB,SAAS,CAAC1D,OAAV,CAAkBI,IAAlB,CAAuBoC,SAAvB,KAAqCO,cAAc,CAAC/C,OAAf,CAAuBI,IAAvB,CAA4BoC,SADpE,IAEGkB,SAAS,CAAC1D,OAAV,CAAkBM,KAAlB,CAAwBiC,KAAxB,KAAkCQ,cAAc,CAAC/C,OAAf,CAAuBM,KAAvB,CAA6BiC,KAFlE,IAGGmB,SAAS,CAAC1D,OAAV,CAAkBM,KAAlB,CAAwBkC,SAAxB,KAAsCO,cAAc,CAAC/C,OAAf,CAAuBM,KAAvB,CAA6BkC,SAHtE,IAIGkB,SAAS,CAAC1D,OAAV,CAAkBQ,GAAlB,CAAsB+B,KAAtB,KAAgCQ,cAAc,CAAC/C,OAAf,CAAuBQ,GAAvB,CAA2B+B,KAJ9D,IAKGmB,SAAS,CAAC1D,OAAV,CAAkBQ,GAAlB,CAAsBgC,SAAtB,KAAoCO,cAAc,CAAC/C,OAAf,CAAuBQ,GAAvB,CAA2BgC,SALlE,IAMGkB,SAAS,CAAC1D,OAAV,CAAkBU,MAAlB,CAAyB6B,KAAzB,KAAmCQ,cAAc,CAAC/C,OAAf,CAAuBU,MAAvB,CAA8B6B,KANpE,IAOGmB,SAAS,CAAC1D,OAAV,CAAkBU,MAAlB,CAAyB8B,SAAzB,KAAuCO,cAAc,CAAC/C,OAAf,CAAuBU,MAAvB,CAA8B8B,SAxB7E;;AAyBA,UAAInJ,MAAJ,EAAY;AACRhD,QAAAA,KAAK,GAAGqN,SAAS,CAACrN,KAAlB;AACA;AACH;AACJ;;AACD,WAAO;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBgD,MAAAA,MAAM,EAAEA;AAAxB,KAAP;AACH,GArCD;;AAsCA1F,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0M,QAAnB,GAA8B,UAAUC,KAAV,EAAiBlI,IAAjB,EAAuB;AACjD,QAAIrF,KAAK,GAAGuN,KAAK,CAAC3H,OAAN,CAAcP,IAAd,CAAZ;AACA,WAAOrF,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAGuN,KAAK,CAAC/N,MAAnC;AACH,GAHD;;AAIAlC,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0G,gBAAnB,GAAsC,UAAUpC,KAAV,EAAiB;AACnD,QAAIA,KAAK,YAAYyC,IAArB,EAA2B;AACvB,aAAO,UAAP;AACH,KAFD,MAGK,IAAI,OAAQzC,KAAR,KAAmB,SAAvB,EAAkC;AACnC,aAAO,SAAP;AACH,KAFI,MAGA,IAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAClC,aAAO,QAAP;AACH,KAFI,MAGA;AACD,aAAO,QAAP;AACH;AACJ,GAbD;;AAcA5H,EAAAA,QAAQ,CAACsD,SAAT,CAAmBgH,aAAnB,GAAmC,UAAUrC,IAAV,EAAgB;AAC/C,QAAInF,IAAI,GAAGmF,IAAI,CAACnF,IAAhB;AACA,QAAI5C,QAAJ;AACA,QAAI0H,KAAK,GAAGK,IAAI,CAACL,KAAjB;;AACA,YAAQ9E,IAAR;AACI,WAAK,UAAL;AACI8E,QAAAA,KAAK,GAAG,KAAKsI,QAAL,CAActI,KAAd,CAAR;;AACA,YAAIK,IAAI,CAAC5F,SAAL,KAAmB1B,SAAnB,IAAgCsH,IAAI,CAAC5F,SAAL,CAAeF,IAAf,KAAwBxB,SAA5D,EAAuE;AACnE,cAAI,KAAKqB,YAAL,CAAkBI,GAAlB,CAAsB6F,IAAI,CAAC5F,SAAL,CAAeF,IAArC,CAAJ,EAAgD;AAC5C,gBAAIgO,OAAO,GAAG,KAAKnO,YAAL,CAAkBgJ,GAAlB,CAAsB/C,IAAI,CAAC5F,SAAL,CAAeF,IAArC,CAAd;AACA,iBAAK0L,kBAAL,CAAwBsC,OAAO,CAACtN,MAAhC,EAAwCsN,OAAO,CAACrN,IAAhD;AACH;AACJ;;AACD5C,QAAAA,QAAQ,GAAG,GAAX;AACA;AACJ;;AACA,WAAK,SAAL;AACI0H,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAH,GAAO,CAApB;AACA1H,QAAAA,QAAQ,GAAG,GAAX;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,QAAQ,GAAG,GAAX;;AACA,YAAI+H,IAAI,CAAC5F,SAAL,KAAmB1B,SAAnB,IAAgCsH,IAAI,CAAC5F,SAAL,CAAeF,IAAf,KAAwBxB,SAA5D,EAAuE;AACnE,cAAI,KAAKqB,YAAL,CAAkBI,GAAlB,CAAsB6F,IAAI,CAAC5F,SAAL,CAAeF,IAArC,CAAJ,EAAgD;AAC5C,iBAAK0L,kBAAL,CAAwB,KAAK7L,YAAL,CAAkBgJ,GAAlB,CAAsB/C,IAAI,CAAC5F,SAAL,CAAeF,IAArC,EAA2CU,MAAnE,EAA2E,QAA3E;AACH;AACJ;;AACD;;AACJ,WAAK,QAAL;AACI,aAAKvC,iBAAL;AACAJ,QAAAA,QAAQ,GAAG,GAAX;AACA,YAAIkQ,QAAQ,GAAG,KAAKnF,gBAAL,CAAsBrD,KAAtB,EAA6BK,IAA7B,CAAf;;AACA,YAAI,CAAC,KAAK+H,QAAL,CAAc,KAAKhP,YAAnB,EAAiCoP,QAAjC,CAAL,EAAiD;AAC7C,eAAKpP,YAAL,CAAkBS,IAAlB,CAAuB2O,QAAvB;AACH;;AACDxI,QAAAA,KAAK,GAAG,KAAK5G,YAAL,CAAkBsH,OAAlB,CAA0B8H,QAA1B,CAAR;AACA;;AACJ;AACI;AAlCR;;AAoCAnI,IAAAA,IAAI,CAAC/H,QAAL,GAAgBA,QAAhB;AACA+H,IAAAA,IAAI,CAACL,KAAL,GAAaA,KAAb;AACH,GA1CD;;AA2CA5H,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+B,YAAnB,GAAkC,UAAUpF,IAAV,EAAgBmE,KAAhB,EAAuB;AACrD,QAAIiM,YAAY,GAAGpQ,IAAI,CAACiC,MAAxB;AACAkC,IAAAA,KAAK,CAACgB,MAAN,GAAe,EAAf;AACA,QAAIkL,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,UAAIC,KAAK,GAAG,KAAKC,WAAL,CAAiBxQ,IAAI,CAACsQ,CAAD,CAArB,CAAZ;AACAnM,MAAAA,KAAK,CAACgB,MAAN,CAAa3D,IAAb,CAAkB+O,KAAlB;AACH;AACJ,GARD;;AASAxQ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmN,WAAnB,GAAiC,UAAUxQ,IAAV,EAAgB;AAC7C,QAAIuQ,KAAK,GAAG,IAAIjR,KAAJ,EAAZ;;AACA,QAAIU,IAAI,CAACuQ,KAAL,KAAe,IAAf,IAAuBvQ,IAAI,CAACuQ,KAAL,KAAe7P,SAA1C,EAAqD;AACjD6P,MAAAA,KAAK,CAACA,KAAN,GAAcvQ,IAAI,CAACuQ,KAAnB;AACH;;AACD,QAAIvQ,IAAI,CAACgG,GAAL,KAAa,IAAb,IAAqBhG,IAAI,CAACgG,GAAL,KAAatF,SAAtC,EAAiD;AAC7C6P,MAAAA,KAAK,CAACvK,GAAN,GAAYhG,IAAI,CAACgG,GAAjB;AACH;;AACD,QAAIhG,IAAI,CAACiG,MAAL,KAAgB,IAAhB,IAAwBjG,IAAI,CAACiG,MAAL,KAAgBvF,SAA5C,EAAuD;AACnD6P,MAAAA,KAAK,CAACtK,MAAN,GAAejG,IAAI,CAACiG,MAApB;AACH;;AACD,QAAIjG,IAAI,CAACyQ,OAAL,KAAiB,IAAjB,IAAyBzQ,IAAI,CAACyQ,OAAL,KAAiB/P,SAA9C,EAAyD;AACrD6P,MAAAA,KAAK,CAACE,OAAN,GAAgBzQ,IAAI,CAACyQ,OAArB;AACH;;AACD,QAAIzQ,IAAI,CAAC0Q,UAAL,KAAoB,IAApB,IAA4B1Q,IAAI,CAAC0Q,UAAL,KAAoBhQ,SAApD,EAA+D;AAC3D6P,MAAAA,KAAK,CAACG,UAAN,GAAmB1Q,IAAI,CAAC0Q,UAAxB;AACH;;AACD,QAAI1Q,IAAI,CAACkH,KAAL,KAAe,IAAf,IAAuBlH,IAAI,CAACkH,KAAL,KAAexG,SAA1C,EAAqD;AACjD6P,MAAAA,KAAK,CAACrJ,KAAN,GAAclH,IAAI,CAACkH,KAAnB;AACH;;AACD,QAAIlH,IAAI,CAAC4I,MAAL,KAAgB,IAAhB,IAAwB5I,IAAI,CAAC4I,MAAL,KAAgBlI,SAA5C,EAAuD;AACnD6P,MAAAA,KAAK,CAAC3H,MAAN,GAAe5I,IAAI,CAAC4I,MAApB;AACH;;AACD,QAAI5I,IAAI,CAAC2Q,cAAL,KAAwB,IAAxB,IAAgC3Q,IAAI,CAAC2Q,cAAL,KAAwBjQ,SAA5D,EAAuE;AACnE6P,MAAAA,KAAK,CAACI,cAAN,GAAuB3Q,IAAI,CAAC2Q,cAA5B;AACH;;AACD,QAAI3Q,IAAI,CAAC4Q,YAAL,KAAsB,IAAtB,IAA8B5Q,IAAI,CAAC4Q,YAAL,KAAsBlQ,SAAxD,EAAmE;AAC/D6P,MAAAA,KAAK,CAACK,YAAN,GAAqB5Q,IAAI,CAAC4Q,YAA1B;AACH;;AACD,QAAI5Q,IAAI,CAACsN,QAAL,KAAkB,IAAlB,IAA0BtN,IAAI,CAACsN,QAAL,KAAkB5M,SAAhD,EAA2D;AACvD6P,MAAAA,KAAK,CAACjD,QAAN,GAAiBtN,IAAI,CAACsN,QAAtB;AACH;;AACD,WAAOiD,KAAP;AACH,GAjCD;;AAkCAxQ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBwN,UAAnB,GAAgC,UAAUC,YAAV,EAAwB;AACpD,QAAIrJ,KAAK,GAAG,IAAZ;;AACA,YAAQqJ,YAAR;AACI,WAAK,UAAL;AACI,eAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,cAAIC,GAAG,GAAG,EAAV;AACAA,UAAAA,GAAG,CAACC,QAAJ,GAAe1J,KAAK,CAACrE,SAAN,CAAgByN,UAAhB,EAAf;AACAG,UAAAA,OAAO,CAACE,GAAD,CAAP;AACH,SAJM,CAAP;;AAKJ;AACI,eAAO,IAAIH,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CxJ,UAAAA,KAAK,CAAC2J,YAAN;;AACA3J,UAAAA,KAAK,CAAC3G,QAAN,CAAe+P,UAAf,GAA4BQ,IAA5B,CAAiC,UAAUC,IAAV,EAAgB;AAC7C,gBAAIJ,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,CAACC,QAAJ,GAAe,IAAII,IAAJ,CAAS,CAACD,IAAD,CAAT,EAAiB;AAAEzO,cAAAA,IAAI,EAAE;AAAR,aAAjB,CAAf;AACAmO,YAAAA,OAAO,CAACE,GAAD,CAAP;AACH,WAJD;AAKH,SAPM,CAAP;AARR;AAiBH,GAnBD;;AAoBAnR,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmO,IAAnB,GAA0B,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACpD,QAAIjK,KAAK,GAAG,IAAZ;;AACA,QAAIgK,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK/Q,SAAlC,IAA+C+Q,QAAQ,KAAK,EAAhE,EAAoE;AAChE,YAAM,IAAI3O,KAAJ,CAAU,2DAAV,CAAN;AACH;;AACD,QAAI6O,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAe,QAAf,CAAhB;AACA,QAAIC,QAAQ,GAAGJ,QAAQ,CAACG,KAAT,CAAe,OAAf,CAAf;;AACA,QAAID,SAAS,KAAK,IAAd,IAAsBA,SAAS,CAAC,CAAD,CAAT,KAAkB,MAAM,KAAK9Q,SAAvD,EAAmE;AAC/D,WAAKuQ,YAAL;AACA,WAAKtQ,QAAL,CAAc0Q,IAAd,CAAmBC,QAAnB,EAA6BJ,IAA7B,CAAkC,YAAY;AAC1C5J,QAAAA,KAAK,CAAC3G,QAAN,CAAegR,OAAf;AACH,OAFD;AAGH,KALD,MAMK,IAAID,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAAC,CAAD,CAAR,KAAiB,MAAM,KAAKhR,SAArD,EAAiE;AAClE,WAAKuC,SAAL,CAAeoO,IAAf,CAAoBC,QAApB;AACH,KAFI,MAGA;AACD,YAAM3O,KAAK,CAAC,4CAAD,CAAX;AACH;AACJ,GAnBD;;AAoBA/C,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+N,YAAnB,GAAkC,YAAY;AAC1C,SAAKW,YAAL;AACA,SAAKC,cAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,UAAL;AACA,SAAKC,OAAL,CAAa,KAAKlP,iBAAlB;AACA,SAAKmP,QAAL,CAAc,KAAKnP,iBAAnB;AACA,SAAKoP,eAAL;AACA,SAAKC,oBAAL;AACA,SAAKC,oBAAL;AACH,GAVD;;AAWAxS,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0O,YAAnB,GAAkC,YAAY;AAC1C;AACA,QAAIS,YAAY,GAAG,4TAAnB;AACA,QAAIC,MAAM,GAAG,UAAb;AACA,QAAIxQ,MAAM,GAAG,KAAKc,UAAL,CAAgBd,MAA7B;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B;AACAyQ,MAAAA,MAAM,IAAI,kBAAkB,KAAK1P,UAAL,CAAgBf,CAAhB,EAAmBE,IAArC,GAA4C,aAA5C,GAA4D,CAACF,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAA5D,GAAiF,cAAjF,GAAkG,CAACvC,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAAlG,GAAuH,MAAjI;AACH;;AACDkO,IAAAA,MAAM,IAAI,WAAV;AACAD,IAAAA,YAAY,IAAIC,MAAhB;;AACA,QAAI,KAAKtR,WAAL,CAAiB8N,IAAjB,GAAwB,CAA5B,EAA+B;AAC3B,UAAIyD,YAAY,GAAG,gBAAnB;AACA,WAAKvR,WAAL,CAAiBuG,OAAjB,CAAyB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC3C8K,QAAAA,YAAY,IAAI,0DAA0D9K,GAA1D,GAAgE,IAAhE,GAAuED,KAAvE,GAA+E,gBAA/F;AACH,OAFD;AAGA+K,MAAAA,YAAY,IAAI,iBAAhB;AACAF,MAAAA,YAAY,IAAIE,YAAhB;AACH;;AACD,SAAKC,YAAL,CAAkBH,YAAY,GAAG,aAAjC,EAAgD,iBAAhD;AACH,GApBD;;AAqBAzS,EAAAA,QAAQ,CAACsD,SAAT,CAAmB2O,cAAnB,GAAoC,YAAY;AAC5C,QAAI/P,MAAM,GAAG,KAAKc,UAAL,CAAgBd,MAA7B;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B,WAAK4Q,aAAL,CAAmB,KAAK7P,UAAL,CAAgBf,CAAhB,CAAnB,EAAuCA,CAAvC;AACH;AACJ,GALD;;AAMAjC,EAAAA,QAAQ,CAACsD,SAAT,CAAmBuP,aAAnB,GAAmC,UAAUzO,KAAV,EAAiB1B,KAAjB,EAAwB;AACvD,QAAIoQ,SAAS,GAAG,IAAI/S,UAAJ,EAAhB;AACA;;AACA,QAAIgT,WAAW,GAAG,qWAAlB;;AACA,QAAI,CAAC3O,KAAK,CAACe,iBAAX,EAA8B;AAC1B4N,MAAAA,WAAW,IAAK,cAAc,aAAd,GAA8B,oBAA9B,GAAqD,cAArD,GAAsE,YAAtF;AACH,KAFD,MAGK;AACDA,MAAAA,WAAW,IAAK,aAAhB;AACH;;AACDA,IAAAA,WAAW,IAAI,KAAKC,aAAL,CAAmB5O,KAAnB,CAAf;;AACA,QAAIA,KAAK,CAACK,OAAN,KAAkB9D,SAAtB,EAAiC;AAC7B,UAAIsS,SAAS,GAAG,QAAhB;;AACA,WAAK,IAAItH,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG5J,KAAK,CAACK,OAA5B,EAAqCkH,EAAE,GAAGqC,EAAE,CAAC9L,MAA7C,EAAqDyJ,EAAE,EAAvD,EAA2D;AACvD,YAAIzF,MAAM,GAAG8H,EAAE,CAACrC,EAAD,CAAf;AACA;;AACA,YAAIzF,MAAM,CAACiB,KAAP,KAAiBxG,SAArB,EAAgC;AAC5BsS,UAAAA,SAAS,IAAI,eAAgB/M,MAAM,CAACxD,KAAvB,GAAgC,SAAhC,GAA6CwD,MAAM,CAACxD,KAApD,GAA6D,WAA7D,GAA2E,KAAKwQ,mBAAL,CAAyBhN,MAAM,CAACiB,KAAhC,CAA3E,GAAoH,sBAAjI;AACH,SAFD,MAGK;AACD8L,UAAAA,SAAS,IAAI,eAAgB/M,MAAM,CAACxD,KAAvB,GAAgC,SAAhC,GAA6CwD,MAAM,CAACxD,KAApD,GAA6D,WAA7D,GAA2E,MAA3E,GAAoF,sBAAjG;AACH;AACJ;;AACDqQ,MAAAA,WAAW,IAAKE,SAAS,GAAG,SAA5B;AACH;;AACDF,IAAAA,WAAW,IAAK,aAAhB;AACAD,IAAAA,SAAS,CAACK,MAAV,CAAiBJ,WAAjB;AACAA,IAAAA,WAAW,GAAG,EAAd;;AACA,QAAI3O,KAAK,CAACO,IAAN,KAAehE,SAAnB,EAA8B;AAC1B,WAAK,IAAIuN,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG/J,KAAK,CAACO,IAA5B,EAAkCuJ,EAAE,GAAGC,EAAE,CAACjM,MAA1C,EAAkDgM,EAAE,EAApD,EAAwD;AACpD,YAAIjI,GAAG,GAAGkI,EAAE,CAACD,EAAD,CAAZ;AACA,YAAIkF,SAAS,GAAG,aAAcnN,GAAG,CAACvD,KAAlB,GAA2B,IAA3C;;AACA,YAAI,CAAC5C,iBAAiB,CAACmG,GAAG,CAACuE,KAAL,CAAtB,EAAmC;AAC/B4I,UAAAA,SAAS,IAAI,YAAYnN,GAAG,CAACuE,KAAhB,GAAwB,IAArC;AACH;;AACD,YAAIvE,GAAG,CAAC4C,MAAJ,KAAelI,SAAnB,EAA8B;AAC1ByS,UAAAA,SAAS,IAAK,SAAS,KAAKC,iBAAL,CAAuBpN,GAAG,CAAC4C,MAA3B,CAAT,GAA8C,qBAA5D;AACH;;AACD,YAAI5C,GAAG,CAAC6C,QAAJ,KAAiBnI,SAArB,EAAgC;AAC5B,cAAIsF,GAAG,CAAC6C,QAAJ,CAAaK,QAAjB,EAA2B;AACvBiK,YAAAA,SAAS,IAAK,aAAd;AACH;;AACD,cAAInN,GAAG,CAAC6C,QAAJ,CAAaG,YAAb,KAA8BtI,SAAlC,EAA6C;AACzCyS,YAAAA,SAAS,IAAK,mBAAmBnN,GAAG,CAAC6C,QAAJ,CAAaG,YAAhC,GAA+C,IAA7D;AACH;;AACD,cAAIhD,GAAG,CAAC6C,QAAJ,CAAaI,WAAjB,EAA8B;AAC1BkK,YAAAA,SAAS,IAAK,gBAAd;AACH;AACJ;;AACDA,QAAAA,SAAS,IAAK,GAAd;;AACA,aAAK,IAAIE,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGtN,GAAG,CAACiC,KAA1B,EAAiCoL,EAAE,GAAGC,EAAE,CAACrR,MAAzC,EAAiDoR,EAAE,EAAnD,EAAuD;AACnD,cAAIrL,IAAI,GAAGsL,EAAE,CAACD,EAAD,CAAb;;AACA,cAAIrL,IAAI,KAAKtH,SAAT,KAAuBsH,IAAI,CAACL,KAAL,KAAejH,SAAf,IAA4BsH,IAAI,CAAC5F,SAAL,KAAmB1B,SAAtE,CAAJ,EAAsF;AAClFyS,YAAAA,SAAS,IAAK,WAAWnL,IAAI,CAACU,OAAhB,GAA0B,IAAxC;;AACA,gBAAIV,IAAI,CAAC/H,QAAL,KAAkBS,SAAtB,EAAiC;AAC7ByS,cAAAA,SAAS,IAAK,QAAQnL,IAAI,CAAC/H,QAAb,GAAwB,IAAtC;AACH;;AACD,gBAAI+H,IAAI,CAACG,UAAL,KAAoBzH,SAAxB,EAAmC;AAC/ByS,cAAAA,SAAS,IAAK,QAAQnL,IAAI,CAACG,UAAb,GAA0B,IAAxC;AACH;;AACDgL,YAAAA,SAAS,IAAK,IAAd;;AACA,gBAAInL,IAAI,CAACmC,OAAL,KAAiBzJ,SAArB,EAAgC;AAC5ByS,cAAAA,SAAS,IAAK,QAAQnL,IAAI,CAACmC,OAAb,GAAuB,MAArC;AACH;;AACD,gBAAInC,IAAI,CAACL,KAAL,KAAejH,SAAnB,EAA8B;AAC1ByS,cAAAA,SAAS,IAAK,QAAQnL,IAAI,CAACL,KAAb,GAAqB,UAAnC;AACH,aAFD,MAGK;AACDwL,cAAAA,SAAS,IAAK,MAAd;AACH;AACJ;AACJ;;AACDA,QAAAA,SAAS,IAAK,QAAd;AACAN,QAAAA,SAAS,CAACK,MAAV,CAAiBC,SAAjB;AACH;AACJ;;AACDL,IAAAA,WAAW,IAAK,cAAhB;;AACA,QAAI3O,KAAK,CAACC,UAAN,CAAiBnC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B6Q,MAAAA,WAAW,IAAK,wBAAwB3O,KAAK,CAACC,UAAN,CAAiBnC,MAAzC,GAAkD,IAAlE;;AACA,WAAK,IAAIsR,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGrP,KAAK,CAACC,UAA5B,EAAwCmP,EAAE,GAAGC,EAAE,CAACvR,MAAhD,EAAwDsR,EAAE,EAA1D,EAA8D;AAC1D,YAAIE,KAAK,GAAGD,EAAE,CAACD,EAAD,CAAd;AACAT,QAAAA,WAAW,IAAK,qBAAqBW,KAAK,CAACzJ,GAA3B,GAAiC,MAAjD;AACH;;AACD8I,MAAAA,WAAW,IAAK,eAAhB;AACH;;AACD,QAAI3O,KAAK,CAACkB,UAAN,CAAiBpD,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B6Q,MAAAA,WAAW,IAAK,cAAhB;;AACA,WAAK,IAAIY,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGxP,KAAK,CAACkB,UAA5B,EAAwCqO,EAAE,GAAGC,EAAE,CAAC1R,MAAhD,EAAwDyR,EAAE,EAA1D,EAA8D;AAC1D,YAAIE,KAAK,GAAGD,EAAE,CAACD,EAAD,CAAd;AACAZ,QAAAA,WAAW,IAAK,qBAAqBc,KAAK,CAAC5J,GAA3B,GAAiC,aAAjC,GAAiD4J,KAAK,CAAC3J,GAAvD,GAA6D,MAA7E;AACH;;AACD6I,MAAAA,WAAW,IAAK,eAAhB;AACH;AACD;;;AACAA,IAAAA,WAAW,IAAK,qLAAhB;;AACA,QAAI3O,KAAK,CAACgB,MAAN,IAAgBzE,SAAhB,IAA6ByD,KAAK,CAACgB,MAAN,CAAalD,MAAb,GAAsB,CAAvD,EAA0D;AACtD,WAAKL,YAAL;AACA,WAAKiS,YAAL,CAAkB1P,KAAlB,EAAyBA,KAAK,CAAC1B,KAA/B;AACAqQ,MAAAA,WAAW,IAAI,wBAAwB3O,KAAK,CAACkB,UAAN,CAAiBpD,MAAjB,GAA0B,CAAlD,IAAuD,KAAtE;AACH;;AACD,SAAK0Q,YAAL,CAAkB,KAAKmB,kBAAL,CAAwB3P,KAAxB,CAAlB,EAAmD,8BAA8BA,KAAK,CAAC1B,KAApC,GAA4C,WAA/F;AACAoQ,IAAAA,SAAS,CAACK,MAAV,CAAiBJ,WAAW,GAAG,cAA/B;AACA,SAAKH,YAAL,CAAkBE,SAAS,CAACkB,OAAV,EAAlB,EAAuC,kBAAkB,QAAlB,IAA8BtR,KAAK,GAAG,CAAtC,IAA2C,MAAlF;AACH,GAvGD;;AAwGA1C,EAAAA,QAAQ,CAACsD,SAAT,CAAmBwQ,YAAnB,GAAkC,UAAU1P,KAAV,EAAiB1B,KAAjB,EAAwB;AACtD,QAAIuR,QAAQ,GAAG,IAAIlU,UAAJ,EAAf;AACA;;AACA,QAAImU,kBAAkB,GAAG,4JAAzB;;AACA,QAAI9P,KAAK,CAACgB,MAAN,KAAiBzE,SAArB,EAAgC;AAC5B,UAAIwT,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIxI,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG5J,KAAK,CAACgB,MAA5B,EAAoCuG,EAAE,GAAGqC,EAAE,CAAC9L,MAA5C,EAAoDyJ,EAAE,EAAtD,EAA0D;AACtD,YAAIyI,GAAG,GAAGpG,EAAE,CAACrC,EAAD,CAAZ;;AACA,YAAIyI,GAAG,CAACvL,MAAJ,KAAelI,SAAf,IAA4ByT,GAAG,CAACjN,KAAJ,KAAcxG,SAA9C,EAAyD;AACrD,eAAK0T,mBAAL,CAAyBjQ,KAAzB,EAAgCgQ,GAAhC;AACA,eAAKE,sBAAL,CAA4BlQ,KAA5B,EAAmCgQ,GAAnC;AACH,SAHD,MAIK,IAAIA,GAAG,CAAC1D,OAAJ,KAAgB/P,SAAhB,IAA6ByT,GAAG,CAACzD,UAAJ,KAAmBhQ,SAApD,EAA+D;AAChEyT,UAAAA,GAAG,CAACG,aAAJ,GAAoB,CAApB;AACAH,UAAAA,GAAG,CAACI,aAAJ,GAAoB,CAApB;AACH;;AACDL,QAAAA,KAAK;AACLD,QAAAA,kBAAkB,IAAI,sCAAtB;AACAA,QAAAA,kBAAkB,IAAI,qBAAtB,CAZsD,CAatD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAAClO,MAAJ,GAAa,CAAnC;AACAgO,QAAAA,kBAAkB,IAAI,wBAAtB,CAfsD,CAgBtD;;AACAA,QAAAA,kBAAkB,IAAI,CAAtB;AACAA,QAAAA,kBAAkB,IAAI,wBAAtB,CAlBsD,CAmBtD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAACnO,GAAJ,GAAU,CAAhC;AACAiO,QAAAA,kBAAkB,IAAI,wBAAtB,CArBsD,CAsBtD;;AACAA,QAAAA,kBAAkB,IAAI,CAAtB;AACAA,QAAAA,kBAAkB,IAAI,0BAAtB;AACAA,QAAAA,kBAAkB,IAAI,mBAAtB,CAzBsD,CA0BtD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAACzD,UAA1B;AACAuD,QAAAA,kBAAkB,IAAI,wBAAtB,CA5BsD,CA6BtD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAACI,aAA1B;AACAN,QAAAA,kBAAkB,IAAI,wBAAtB,CA/BsD,CAgCtD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAAC1D,OAA1B;AACAwD,QAAAA,kBAAkB,IAAI,wBAAtB,CAlCsD,CAmCtD;;AACAA,QAAAA,kBAAkB,IAAIE,GAAG,CAACG,aAA1B;AACAL,QAAAA,kBAAkB,IAAI,wBAAtB;AACAA,QAAAA,kBAAkB,IAAI,WAAtB;AACAA,QAAAA,kBAAkB,IAAI,eAAtB;AACAA,QAAAA,kBAAkB,IAAI,oBAAoBC,KAApB,GAA4B,kBAA5B,GAAiDA,KAAjD,GAAyD,iBAA/E;AACAD,QAAAA,kBAAkB,IAAI,8EAAtB;AACAA,QAAAA,kBAAkB,IAAI,gBAAtB;AACA;;AACAA,QAAAA,kBAAkB,IAAI,uGAAuGC,KAAvG,GAA+G,mBAArI;AACAD,QAAAA,kBAAkB,IAAI,+DAAtB;AACAA,QAAAA,kBAAkB,IAAI,YAAtB;AACAA,QAAAA,kBAAkB,IAAI,SAAtB;;AACA,YAAIE,GAAG,CAAC7G,QAAJ,IAAgB5M,SAAhB,IAA6ByT,GAAG,CAAC7G,QAAJ,IAAgB,IAA7C,IAAqD6G,GAAG,CAAC7G,QAAJ,IAAgB,CAAC,IAA1E,EAAgF;AAC5E2G,UAAAA,kBAAkB,IAAI,WAAYE,GAAG,CAAC7G,QAAJ,GAAe,KAA3B,GAAoC,GAA1D;AACH;;AACD,YAAI6G,GAAG,CAACvD,YAAJ,IAAoBlQ,SAApB,IAAiCyT,GAAG,CAACvD,YAAJ,IAAoB,KAAzD,EAAgE;AAC5DqD,UAAAA,kBAAkB,IAAI,YAAtB;AACH;;AACD,YAAIE,GAAG,CAACxD,cAAJ,IAAsBjQ,SAAtB,IAAmCyT,GAAG,CAACxD,cAAJ,IAAsB,KAA7D,EAAoE;AAChEsD,UAAAA,kBAAkB,IAAI,YAAtB;AACH;;AACDA,QAAAA,kBAAkB,IAAI,IAAtB;AACAA,QAAAA,kBAAkB,IAAI,6DAAtB;AACAA,QAAAA,kBAAkB,IAAI,kDAAtB;AACA,YAAIO,SAAS,GAAG,IAAI1U,UAAJ,EAAhB;AACA,YAAI2U,SAAS,GAAG,KAAKC,oBAAL,CAA0BP,GAAG,CAAC5D,KAA9B,CAAhB;AACA,aAAK1O,UAAL,IAAmB,CAAnB;AACA,aAAK8Q,YAAL,CAAkB8B,SAAlB,EAA6B,mBAAmB,KAAK5S,UAAxB,GAAqC,MAAlE;AACH;;AACDmS,MAAAA,QAAQ,CAACd,MAAT,CAAgBe,kBAAhB;AACAD,MAAAA,QAAQ,CAACd,MAAT,CAAgB,aAAhB;AACA,WAAKyB,oBAAL,CAA0BxQ,KAA1B;AACA,WAAKwO,YAAL,CAAkBqB,QAAQ,CAACD,OAAT,EAAlB,EAAsC,wBAAwB,KAAKnS,YAA7B,GAA4C,MAAlF;AACH;AACJ,GA5ED;;AA6EA7B,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+Q,mBAAnB,GAAyC,UAAUjQ,KAAV,EAAiByQ,OAAjB,EAA0B;AAC/D,QAAIC,UAAU,GAAGD,OAAO,CAAChM,MAAzB;AACA,QAAIkM,OAAO,GAAGF,OAAO,CAAC5O,GAAtB;AACA,QAAI+O,UAAU,GAAG,CAAjB;;AACA,WAAOF,UAAU,IAAI,CAArB,EAAwB;AACpB,UAAIG,UAAU,GAAG,CAAjB;AACA,UAAI7Q,KAAK,CAACO,IAAN,KAAehE,SAAf,IAA4ByD,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,MAA4BpU,SAA5D,EACIsU,UAAU,GAAG,KAAKC,eAAL,CAAqB9Q,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,EAAwBlM,MAAxB,KAAmClI,SAAnC,GAA+C,EAA/C,GAAoDyD,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,EAAwBlM,MAAjG,CAAb,CADJ,KAGIoM,UAAU,GAAG,KAAKC,eAAL,CAAqB,EAArB,CAAb;AACJ,UAAIC,YAAY,GAAGF,UAAU,GAAID,UAAU,GAAGC,UAAb,GAA0B,GAA3D;;AACA,UAAIE,YAAY,GAAGL,UAAnB,EAA+B;AAC3BD,QAAAA,OAAO,CAACnE,OAAR,GAAkBqE,OAAlB;AACAF,QAAAA,OAAO,CAACN,aAAR,GAAwBS,UAAU,GAAIF,UAAU,GAAG,GAAb,GAAmBG,UAAzD;AACA,YAAIG,eAAe,GAAG,CAAtB;AACA,YAAIhR,KAAK,CAACO,IAAN,KAAehE,SAAf,IAA4ByD,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,MAA4BpU,SAA5D,EACIyU,eAAe,GAAG,KAAKF,eAAL,CAAqB9Q,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,EAAwBlM,MAAxB,KAAmClI,SAAnC,GAA+C,EAA/C,GAAoDyD,KAAK,CAACO,IAAN,CAAWoQ,OAAO,GAAG,CAArB,EAAwBlM,MAAjG,CAAlB,CADJ,KAGIuM,eAAe,GAAG,KAAKF,eAAL,CAAqB,EAArB,CAAlB;AACJL,QAAAA,OAAO,CAACN,aAAR,GAAyBa,eAAe,GAAGP,OAAO,CAACN,aAA3B,GAA4C,GAApE;AACAM,QAAAA,OAAO,CAACN,aAAR,GAAwBc,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACN,aAAR,GAAwB,KAAKhU,gBAAL,CAAsB,CAAtB,CAAnC,CAAxB;AACA;AACH,OAXD,MAYK;AACDuU,QAAAA,UAAU,IAAIK,YAAd;AACAJ,QAAAA,OAAO;AACPC,QAAAA,UAAU,GAAG,CAAb;AACH;AACJ;AACJ,GA7BD;;AA8BAhV,EAAAA,QAAQ,CAACsD,SAAT,CAAmBgR,sBAAnB,GAA4C,UAAUlQ,KAAV,EAAiByQ,OAAjB,EAA0B;AAClE,QAAIU,SAAS,GAAGV,OAAO,CAAC1N,KAAxB;AACA,QAAIqO,OAAO,GAAGX,OAAO,CAAC3O,MAAtB;AACA,QAAI8O,UAAU,GAAG,CAAjB;;AACA,WAAOO,SAAS,IAAI,CAApB,EAAuB;AACnB,UAAIE,SAAS,GAAG,CAAhB;AACA,UAAIrR,KAAK,CAACK,OAAN,KAAkB9D,SAAlB,IAA+ByD,KAAK,CAACK,OAAN,CAAc+Q,OAAO,GAAG,CAAxB,MAA+B7U,SAAlE,EACI8U,SAAS,GAAG,KAAKC,mBAAL,CAAyBtR,KAAK,CAACK,OAAN,CAAc+Q,OAAO,GAAG,CAAxB,EAA2BrO,KAA3B,KAAqCxG,SAArC,GAAiD,IAAjD,GAAwDyD,KAAK,CAACK,OAAN,CAAc+Q,OAAO,GAAG,CAAxB,EAA2BrO,KAA5G,CAAZ,CADJ,KAGIsO,SAAS,GAAG,KAAKC,mBAAL,CAAyB,IAAzB,CAAZ;AACJ,UAAIP,YAAY,GAAGM,SAAS,GAAIT,UAAU,GAAGS,SAAb,GAAyB,IAAzD;;AACA,UAAIN,YAAY,GAAGI,SAAnB,EAA8B;AAC1BV,QAAAA,OAAO,CAAClE,UAAR,GAAqB6E,OAArB;AACAX,QAAAA,OAAO,CAACL,aAAR,GAAwBQ,UAAU,GAAIO,SAAS,GAAG,IAAZ,GAAmBE,SAAzD;AACA,YAAIE,cAAc,GAAG,CAArB;AACA,YAAIvR,KAAK,CAACK,OAAN,KAAkB9D,SAAlB,IAA+ByD,KAAK,CAACK,OAAN,CAAc+Q,OAAO,GAAG,CAAxB,MAA+B7U,SAAlE,EACIgV,cAAc,GAAG,KAAKD,mBAAL,CAAyBtR,KAAK,CAACK,OAAN,CAAc+Q,OAAO,GAAG,CAAxB,EAA2BrO,KAA3B,KAAqCxG,SAArC,GAAiD,IAAjD,GAAwDyD,KAAK,CAACK,OAAN,CAAc+Q,OAAd,EAAuBrO,KAAxG,CAAjB,CADJ,KAGIwO,cAAc,GAAG,KAAKD,mBAAL,CAAyB,IAAzB,CAAjB;AACJb,QAAAA,OAAO,CAACL,aAAR,GAAyBmB,cAAc,GAAGd,OAAO,CAACL,aAA1B,GAA2C,IAAnE;AACAK,QAAAA,OAAO,CAACL,aAAR,GAAwBa,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACL,aAAR,GAAwB,KAAKjU,gBAAL,CAAsB,CAAtB,CAAnC,CAAxB;AACA;AACH,OAXD,MAYK;AACDgV,QAAAA,SAAS,IAAIJ,YAAb;AACAK,QAAAA,OAAO;AACPR,QAAAA,UAAU,GAAG,CAAb;AACH;AACJ;AACJ,GA7BD;;AA8BAhV,EAAAA,QAAQ,CAACsD,SAAT,CAAmB4R,eAAnB,GAAqC,UAAUtN,KAAV,EAAiB;AAClD,WAAOA,KAAK,GAAG,KAAKrH,gBAAL,CAAsB,CAAtB,CAAf;AACH,GAFD;;AAGAP,EAAAA,QAAQ,CAACsD,SAAT,CAAmBqR,oBAAnB,GAA0C,UAAUiB,GAAV,EAAe;AACrD,QAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAd;AACA,QAAII,MAAM,GAAG,IAAIC,WAAJ,CAAgBJ,OAAO,CAAC3T,MAAxB,CAAb;AACA,QAAIgU,IAAI,GAAG,IAAIC,UAAJ,CAAeH,MAAf,CAAX;;AACA,SAAK,IAAI/T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4T,OAAO,CAAC3T,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCiU,MAAAA,IAAI,CAACjU,CAAD,CAAJ,GAAU4T,OAAO,CAACO,UAAR,CAAmBnU,CAAnB,CAAV;AACH;;AACD,QAAIsP,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC0E,IAAD,CAAT,EAAiB;AAAEpT,MAAAA,IAAI,EAAE;AAAR,KAAjB,CAAX;AACA,WAAOyO,IAAP;AACH,GATD;;AAUAvR,EAAAA,QAAQ,CAACsD,SAAT,CAAmBsR,oBAAnB,GAA0C,UAAUxQ,KAAV,EAAiB;AACvD;AACA,QAAIiS,eAAe,GAAG,6IAAtB;AACA,QAAInU,MAAM,GAAGkC,KAAK,CAACgB,MAAN,CAAalD,MAA1B;AACA,QAAI+M,EAAE,GAAG,KAAKnN,UAAL,GAAkBsC,KAAK,CAACgB,MAAN,CAAalD,MAAxC;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9BgN,MAAAA,EAAE;AACF;;AACAoH,MAAAA,eAAe,IAAI,0BAA0BpU,CAA1B,GAA8B,2GAA9B,GAA4IgN,EAA5I,GAAiJ,UAApK;AACH;;AACD,SAAK2D,YAAL,CAAmByD,eAAe,GAAG,kBAArC,EAA0D,8BAA8B,KAAKxU,YAAnC,GAAkD,WAA5G;AACH,GAXD;;AAYA7B,EAAAA,QAAQ,CAACsD,SAAT,CAAmB4P,mBAAnB,GAAyC,UAAUoD,MAAV,EAAkB;AACvD,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,GAAG,GAAIF,MAAM,GAAGC,WAAW,GAAG,CAAxB,GACN,KAAKE,KAAL,CAAW,CAACH,MAAM,GAAG,CAAV,IAAeC,WAAf,GAA6B,GAA7B,GAAmC,GAA9C,IAAqD,GAD/C,GAEND,MAAM,IAAIC,WAAW,GAAG,CAAlB,CAFV;AAGA,WAAQC,GAAG,GAAG,CAAP,GACF,CAACA,GAAG,GAAGD,WAAN,GAAoB,CAArB,IAA0BA,WAA1B,GAAwC,KAAzC,GAAkD,KAD/C,GAEFC,GAAG,IAAID,WAAW,GAAG,CAAlB,CAAH,GAA0BA,WAA1B,GAAwC,KAAzC,GAAkD,KAFtD;AAGH,GARD;;AASAvW,EAAAA,QAAQ,CAACsD,SAAT,CAAmBoS,mBAAnB,GAAyC,UAAUc,GAAV,EAAe;AACpD,QAAID,WAAW,GAAG,CAAlB;AACA,QAAIG,SAAS,GAAIF,GAAG,GAAG,CAAP,GACX,CAACA,GAAG,GAAGD,WAAN,GAAoB,CAArB,IAA0BA,WAA1B,GAAwC,KAAzC,GAAkD,KADtC,GAEXC,GAAG,IAAID,WAAW,GAAG,CAAlB,CAAH,GAA0BA,WAA1B,GAAwC,KAAzC,GAAkD,KAFtD;AAGA,WAAO,KAAKE,KAAL,CAAY,CAAC,MAAMC,SAAN,GAAkB,KAAKD,KAAL,CAAW,MAAMF,WAAjB,CAAnB,IAAoD,GAArD,GAA4DA,WAAvE,CAAP;AACH,GAND;;AAOAvW,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmT,KAAnB,GAA2B,UAAUtO,CAAV,EAAa;AACpC,QAAIwO,CAAC,GAAGxO,CAAC,GAAGA,CAAC,GAAG,CAAhB;AACA,WAAOwO,CAAC,KAAK,CAAN,KAAYxO,CAAC,GAAG,CAAJ,IAAUA,CAAC,KAAK,CAAN,IAAY,IAAIA,CAAJ,KAAU,IAAI,CAAhD,IAAuD,CAAC,CAAxD,GAA4DwO,CAAnE;AACH,GAHD;;AAIA3W,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+P,iBAAnB,GAAuC,UAAUiD,MAAV,EAAkB;AACrD,WAAQA,MAAM,GAAG,KAAK/V,gBAAL,CAAsB,CAAtB,CAAT,GAAoC,KAAKA,gBAAL,CAAsB,CAAtB,CAA5C;AACH,GAFD;;AAGAP,EAAAA,QAAQ,CAACsD,SAAT,CAAmByQ,kBAAnB,GAAwC,UAAU3P,KAAV,EAAiB;AACrD;AACA,QAAIwS,MAAM,GAAG,6IAAb;;AACA,SAAK,IAAIjL,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG5J,KAAK,CAACkB,UAA5B,EAAwCqG,EAAE,GAAGqC,EAAE,CAAC9L,MAAhD,EAAwDyJ,EAAE,EAA1D,EAA8D;AAC1D,UAAIkI,KAAK,GAAG7F,EAAE,CAACrC,EAAD,CAAd;AACA;;AACAiL,MAAAA,MAAM,IAAI,0BAA0B/C,KAAK,CAAC3J,GAAhC,GAAsC,iGAAtC,GAA0I2J,KAAK,CAAC/J,MAAhJ,GAAyJ,4BAAnK;AACH;;AACD,QAAI1F,KAAK,CAACgB,MAAN,IAAgBzE,SAAhB,IAA6ByD,KAAK,CAACgB,MAAN,CAAalD,MAAb,GAAsB,CAAvD,EAA0D;AACtD;AACA0U,MAAAA,MAAM,IAAI,2BAA2BxS,KAAK,CAACkB,UAAN,CAAiBpD,MAAjB,GAA0B,CAArD,IAA0D,kHAA1D,GAA+K,KAAKL,YAApL,GAAmM,UAA7M;AACH;;AACD+U,IAAAA,MAAM,IAAI,kBAAV;AACA,WAAOA,MAAP;AACH,GAdD;;AAeA5W,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0P,aAAnB,GAAmC,UAAU5O,KAAV,EAAiB;AAChD,QAAIyS,UAAU,GAAG,4CAAjB;;AACA,QAAIzS,KAAK,CAACS,aAAN,KAAwB,KAA5B,EAAmC;AAC/BgS,MAAAA,UAAU,IAAI,qBAAd;AACH,KAFD,MAGK;AACDA,MAAAA,UAAU,IAAI,GAAd;AACH;;AACD,QAAIzS,KAAK,CAAC4C,WAAN,KAAsBrG,SAA1B,EAAqC;AACjCkW,MAAAA,UAAU,IAAI,yBACV,gBADU,GACSzS,KAAK,CAAC4C,WAAN,CAAkBC,QAD3B,GACsC,IADpD;;AAEA,UAAI7C,KAAK,CAAC4C,WAAN,CAAkBf,GAAlB,KAA0B,CAA9B,EAAiC;AAC7B4Q,QAAAA,UAAU,IAAI,aAAazS,KAAK,CAAC4C,WAAN,CAAkBf,GAA/B,GAAqC,IAAnD;AACH;;AACD,UAAI7B,KAAK,CAAC4C,WAAN,CAAkBd,MAAlB,KAA6B,CAAjC,EAAoC;AAChC2Q,QAAAA,UAAU,IAAI,aAAazS,KAAK,CAAC4C,WAAN,CAAkBd,MAA/B,GAAwC,IAAtD;AACH;;AACD2Q,MAAAA,UAAU,IAAI,IAAd;AACH;;AACDA,IAAAA,UAAU,IAAI,6BAAd;AACA,WAAOA,UAAP;AACH,GArBD;;AAsBA7W,EAAAA,QAAQ,CAACsD,SAAT,CAAmB4O,gBAAnB,GAAsC,YAAY;AAC9C,QAAIhQ,MAAM,GAAG,KAAKlB,YAAL,CAAkBkB,MAA/B;;AACA,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ;AACA,UAAI4U,QAAQ,GAAG,6DAA6D5U,MAA7D,GAAsE,WAAtE,GAAoF,KAAK5B,iBAAzF,GAA6G,sEAA5H;AACA,UAAIyW,EAAE,GAAG,EAAT;;AACA,WAAK,IAAI9U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B,YAAI,KAAKjB,YAAL,CAAkBiB,CAAlB,EAAqBqG,OAArB,CAA6B,KAA7B,MAAwC,CAA5C,EAA+C;AAC3CyO,UAAAA,EAAE,IAAI,SAAN;AACAA,UAAAA,EAAE,IAAI,KAAKC,aAAL,CAAmB,KAAKhW,YAAL,CAAkBiB,CAAlB,CAAnB,CAAN;AACA8U,UAAAA,EAAE,IAAI,WAAN;AACH,SAJD,MAKK;AACDA,UAAAA,EAAE,IAAI,MAAN;AACAA,UAAAA,EAAE,IAAI,KAAK/V,YAAL,CAAkBiB,CAAlB,CAAN;AACA8U,UAAAA,EAAE,IAAI,OAAN;AACH;AACJ;;AACDA,MAAAA,EAAE,IAAI,QAAN;AACA,WAAKnE,YAAL,CAAkBkE,QAAQ,GAAGC,EAA7B,EAAiC,sBAAjC;AACH;AACJ,GArBD;;AAsBA/W,EAAAA,QAAQ,CAACsD,SAAT,CAAmB0T,aAAnB,GAAmC,UAAUpP,KAAV,EAAiB;AAChD,QAAIA,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC3BV,MAAAA,KAAK,GAAGA,KAAK,CAACiD,OAAN,CAAc,IAAd,EAAoB,OAApB,CAAR;AACH;;AACD,QAAIjD,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC3BV,MAAAA,KAAK,GAAGA,KAAK,CAACiD,OAAN,CAAc,IAAd,EAAoB,MAApB,CAAR;AACH;;AACD,QAAIjD,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC3BV,MAAAA,KAAK,GAAGA,KAAK,CAACiD,OAAN,CAAc,IAAd,EAAoB,MAApB,CAAR;AACH;;AACD,WAAOjD,KAAP;AACH,GAXD;;AAYA5H,EAAAA,QAAQ,CAACsD,SAAT,CAAmB6O,UAAnB,GAAgC,YAAY;AACxC,SAAK8E,qBAAL;AACA;;AACA,QAAIC,SAAS,GAAG,4RAAhB;AACAA,IAAAA,SAAS,IAAI,KAAKC,iBAAL,EAAb;AACAD,IAAAA,SAAS,IAAI,KAAKE,SAAL,EAAb;AACAF,IAAAA,SAAS,IAAI,KAAKG,SAAL,EAAb;AACAH,IAAAA,SAAS,IAAI,KAAKI,WAAL,EAAb;AACAJ,IAAAA,SAAS,IAAI,KAAKK,gBAAL,EAAb;AACAL,IAAAA,SAAS,IAAI,KAAKM,WAAL,EAAb;AACAN,IAAAA,SAAS,IAAI,KAAKO,cAAL,EAAb;AACA,SAAK7E,YAAL,CAAkBsE,SAAS,GAAG,eAA9B,EAA+C,eAA/C;AACH,GAZD;;AAaAlX,EAAAA,QAAQ,CAACsD,SAAT,CAAmB2T,qBAAnB,GAA2C,YAAY;AACnD,SAAK,IAAItL,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAK7M,OAA3B,EAAoCwK,EAAE,GAAGqC,EAAE,CAAC9L,MAA5C,EAAoDyJ,EAAE,EAAtD,EAA0D;AACtD,UAAIxB,KAAK,GAAG6D,EAAE,CAACrC,EAAD,CAAd;AACA,UAAIyC,OAAO,GAAGzN,SAAd;;AACA,UAAIwJ,KAAK,CAAC7H,aAAV,EAAyB;AACrB8L,QAAAA,OAAO,GAAG,IAAIlP,YAAJ,EAAV;AACAkP,QAAAA,OAAO,CAAC3L,IAAR,GAAgB0H,KAAK,CAACzH,KAAN,GAAc,CAA9B;AACH,OAHD,MAIK;AACD0L,QAAAA,OAAO,GAAG,IAAIrP,OAAJ,EAAV;AACAqP,QAAAA,OAAO,CAAC3L,IAAR,GAAe,CAAf;AACH,OAVqD,CAWtD;;;AACA,UAAIiV,iBAAiB,GAAG,KAAKvI,SAAL,CAAehF,KAAf,CAAxB;;AACA,UAAI,CAACuN,iBAAiB,CAAChS,MAAvB,EAA+B;AAC3B,YAAI2J,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACAwQ,QAAAA,IAAI,CAACC,CAAL,GAASnF,KAAK,CAACgD,IAAf;AACAkC,QAAAA,IAAI,CAACpN,CAAL,GAASkI,KAAK,CAAC+C,MAAf;AACAmC,QAAAA,IAAI,CAAClN,IAAL,GAAYgI,KAAK,CAAC6C,QAAlB;AACAqC,QAAAA,IAAI,CAACG,EAAL,GAAUrF,KAAK,CAAC8C,QAAhB;AACAoC,QAAAA,IAAI,CAACE,CAAL,GAASpF,KAAK,CAACzJ,SAAf;AACA2O,QAAAA,IAAI,CAACT,KAAL,GAAc,OAAOzE,KAAK,CAAC1J,SAAN,CAAgBoK,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAArB;AACA,aAAK5J,MAAL,CAAYQ,IAAZ,CAAiB4N,IAAjB;AACAjB,QAAAA,OAAO,CAACuJ,MAAR,GAAiB,KAAK1W,MAAL,CAAYiB,MAAZ,GAAqB,CAAtC;AACH,OAVD,MAWK;AACDkM,QAAAA,OAAO,CAACuJ,MAAR,GAAiBD,iBAAiB,CAAChV,KAAnC;AACH,OA1BqD,CA2BtD;;;AACA,UAAIyH,KAAK,CAACiC,SAAN,KAAoB,MAAxB,EAAgC;AAC5B,YAAIA,SAAS,GAAG,OAAOjC,KAAK,CAACiC,SAAN,CAAgBvB,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAAvB;;AACA,YAAI,KAAKrJ,MAAL,CAAYY,GAAZ,CAAgBgK,SAAhB,CAAJ,EAAgC;AAC5B,cAAIwL,MAAM,GAAG,KAAKpW,MAAL,CAAYwJ,GAAZ,CAAgBoB,SAAhB,CAAb;AACAgC,UAAAA,OAAO,CAACwJ,MAAR,GAAiBA,MAAjB;AACH,SAHD,MAIK;AACD,cAAIA,MAAM,GAAG,KAAKpW,MAAL,CAAY0N,IAAZ,GAAmB,CAAhC;AACA,eAAK1N,MAAL,CAAYE,GAAZ,CAAgB0K,SAAhB,EAA2BwL,MAA3B;AACAxJ,UAAAA,OAAO,CAACwJ,MAAR,GAAkBA,MAAlB;AACH;AACJ,OAXD,MAYK;AACDxJ,QAAAA,OAAO,CAACwJ,MAAR,GAAiB,CAAjB;AACH,OA1CqD,CA2CtD;;;AACA,UAAI,CAAC,KAAKnI,WAAL,CAAiBtF,KAAjB,CAAL,EAA8B;AAC1B,aAAKjJ,QAAL,CAAcO,IAAd,CAAmB0I,KAAK,CAACkC,OAAzB;AACA+B,QAAAA,OAAO,CAACyJ,QAAR,GAAmB,KAAK3W,QAAL,CAAcgB,MAAjC;AACH,OAHD,MAIK;AACDkM,QAAAA,OAAO,CAACyJ,QAAR,GAAmB,CAAnB;AACH,OAlDqD,CAmDtD;;;AACA,UAAI1N,KAAK,CAACvH,YAAN,KAAuB,SAA3B,EAAsC;AAClC,YAAI,KAAKrB,OAAL,CAAaa,GAAb,CAAiB+H,KAAK,CAACvH,YAAvB,CAAJ,EAA0C;AACtC,cAAIkL,MAAM,GAAG,KAAKvM,OAAL,CAAayJ,GAAb,CAAiBb,KAAK,CAACvH,YAAvB,CAAb;AACAwL,UAAAA,OAAO,CAACT,QAAR,GAAmBG,MAAM,CAACH,QAA1B;AACH,SAHD,MAIK;AACD,cAAIsB,EAAE,GAAG,KAAK1N,OAAL,CAAa2N,IAAb,GAAoB,GAA7B;AACA,eAAK3N,OAAL,CAAaG,GAAb,CAAiByI,KAAK,CAACvH,YAAvB,EAAqC,IAAI3D,MAAJ,CAAWgQ,EAAX,EAAe9E,KAAK,CAACvH,YAArB,CAArC;AACAwL,UAAAA,OAAO,CAACT,QAAR,GAAmBsB,EAAnB;AACH;AACJ,OAVD,MAWK;AACD,YAAI9E,KAAK,CAACvH,YAAN,KAAuB,SAAvB,IAAoCuH,KAAK,CAACwD,QAAN,KAAmB,EAA3D,EAA+D;AAC3DS,UAAAA,OAAO,CAACT,QAAR,GAAmB,EAAnB;AACH,SAFD,MAGK;AACDS,UAAAA,OAAO,CAACT,QAAR,GAAmB,CAAnB;AACH;AACJ,OAtEqD,CAuEtD;;;AACA,UAAI,CAACxD,KAAK,CAAC7H,aAAX,EAA0B;AACtB8L,QAAAA,OAAO,CAAC0J,cAAR,GAAyB,CAAzB;AACH;;AACD1J,MAAAA,OAAO,CAAC2J,SAAR,GAAoB,IAAI/Y,SAAJ,EAApB;AACAoP,MAAAA,OAAO,CAAC2J,SAAR,CAAkBzK,MAAlB,GAA2BnD,KAAK,CAACmD,MAAjC;AACAc,MAAAA,OAAO,CAAC2J,SAAR,CAAkBC,UAAlB,GAA+B7N,KAAK,CAACiD,MAArC;AACAgB,MAAAA,OAAO,CAAC2J,SAAR,CAAkBE,QAAlB,GAA6B9N,KAAK,CAACqD,MAAnC;AACAY,MAAAA,OAAO,CAAC2J,SAAR,CAAkBtK,QAAlB,GAA6BtD,KAAK,CAACsD,QAAN,GAAiB,CAAjB,GAAqB,CAAlD;AACAW,MAAAA,OAAO,CAAC2J,SAAR,CAAkBxK,QAAlB,GAA6BpD,KAAK,CAACoD,QAAnC;;AACA,UAAIpD,KAAK,CAAC7H,aAAV,EAAyB;AACrB,aAAKV,aAAL,CAAmBH,IAAnB,CAAwB2M,OAAxB;AACA,aAAKzM,QAAL,CAAcF,IAAd,CAAmB2M,OAAnB;AACH,OAHD,MAIK;AACD;AACA,aAAKzM,QAAL,CAAcF,IAAd,CAAmB2M,OAAnB;AACH;AACJ;AACJ,GA3FD;;AA4FApO,EAAAA,QAAQ,CAACsD,SAAT,CAAmB6T,iBAAnB,GAAuC,YAAY;AAC/C,QAAI,KAAK5V,OAAL,CAAa2N,IAAb,IAAqB,CAAzB,EAA4B;AACxB,UAAIgJ,aAAa,GAAG,qBAAsB,KAAK3W,OAAL,CAAa2N,IAAnC,GAA2C,IAA/D;AACA,WAAK3N,OAAL,CAAaoG,OAAb,CAAqB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACvCqQ,QAAAA,aAAa,IAAI,uBAAuBtQ,KAAK,CAAC+F,QAA7B,GAAwC,gBAAxC,GAA2D/F,KAAK,CAACmG,UAAN,CAAiBlD,OAAjB,CAAyB,IAAzB,EAA+B,QAA/B,CAA3D,GAAsG,MAAvH;AACH,OAFD;AAGA,aAAQqN,aAAa,IAAI,YAAzB;AACH,KAND,MAOK;AACD,aAAO,EAAP;AACH;AACJ,GAXD;;AAYAlY,EAAAA,QAAQ,CAACsD,SAAT,CAAmB8T,SAAnB,GAA+B,YAAY;AACvC;AACA,QAAIe,SAAS,GAAG,mBAAoB,KAAKlX,MAAL,CAAYiB,MAAhC,GAA0C,IAA1D;;AACA,QAAI,KAAKjB,MAAL,CAAYiB,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,WAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAK/M,MAA3B,EAAmC0K,EAAE,GAAGqC,EAAE,CAAC9L,MAA3C,EAAmDyJ,EAAE,EAArD,EAAyD;AACrD,YAAI0D,IAAI,GAAGrB,EAAE,CAACrC,EAAD,CAAb;AACAwM,QAAAA,SAAS,IAAI,QAAb;;AACA,YAAI9I,IAAI,CAACC,CAAT,EAAY;AACR6I,UAAAA,SAAS,IAAI,OAAb;AACH;;AACD,YAAI9I,IAAI,CAACpN,CAAT,EAAY;AACRkW,UAAAA,SAAS,IAAI,OAAb;AACH;;AACD,YAAI9I,IAAI,CAACE,CAAT,EAAY;AACR4I,UAAAA,SAAS,IAAI,OAAb;AACH;;AACDA,QAAAA,SAAS,IAAI,cAAc,KAAK9E,iBAAL,CAAuBhE,IAAI,CAACG,EAA5B,CAAd,GAAgD,MAA7D;AACA2I,QAAAA,SAAS,IAAI,iBAAiB9I,IAAI,CAACT,KAAtB,GAA8B,MAA3C;AACAuJ,QAAAA,SAAS,IAAI,gBAAgB9I,IAAI,CAAClN,IAArB,GAA4B,aAAzC;AACH;AACJ;;AACD,WAAOgW,SAAS,GAAG,UAAnB;AACH,GAtBD;;AAuBAnY,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+T,SAAnB,GAA+B,YAAY;AACvC;AACA,QAAIe,UAAU,GAAG,oBAAoB,KAAK5W,MAAL,CAAY0N,IAAZ,GAAmB,CAAvC,IAA4C,6HAA7D;;AACA,QAAI,KAAK1N,MAAL,CAAY0N,IAAZ,IAAoB,CAAxB,EAA2B;AACvB,WAAK1N,MAAL,CAAYmG,OAAZ,CAAoB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACtC;AACAuQ,QAAAA,UAAU,IAAI,0DAA0DvQ,GAA1D,GAAgE,qDAA9E;AACH,OAHD;AAIH;;AACD,WAAOuQ,UAAU,GAAG,UAApB;AACH,GAVD;;AAWApY,EAAAA,QAAQ,CAACsD,SAAT,CAAmBgU,WAAnB,GAAiC,YAAY;AACzC;AACA,QAAIe,YAAY,GAAG,sBAAsB,KAAKnX,QAAL,CAAcgB,MAAd,GAAuB,CAA7C,IAAkD,mEAArE;;AACA,QAAI,KAAKhB,QAAL,CAAcgB,MAAd,IAAwB,CAA5B,EAA+B;AAC3B,WAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAK9M,QAA3B,EAAqCyK,EAAE,GAAGqC,EAAE,CAAC9L,MAA7C,EAAqDyJ,EAAE,EAAvD,EAA2D;AACvD,YAAIU,OAAO,GAAG2B,EAAE,CAACrC,EAAD,CAAhB;;AACA,YAAI,KAAKgE,WAAL,CAAiBtD,OAAjB,CAAJ,EAA+B;AAC3B,cAAIuC,KAAK,GAAGvC,OAAO,CAACE,GAAR,CAAYqC,KAAZ,CAAkB/D,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,CAAZ;AACA,cAAIgE,SAAS,GAAGxC,OAAO,CAACE,GAAR,CAAYsC,SAA5B;AACA;;AACAwJ,UAAAA,YAAY,IAAI,0BAA0BxJ,SAA1B,GAAsC,kBAAtC,GAA2DD,KAA3D,GAAmE,2BAAnE,GAAiGC,SAAjG,GAA6G,kBAA7G,GAAkID,KAAlI,GAA0I,0BAA1I,GAAuKC,SAAvK,GAAmL,kBAAnL,GAAwMD,KAAxM,GAAgN,2BAAhN,GAA8OC,SAA9O,GAA0P,kBAA1P,GAA+QD,KAA/Q,GAAuR,wBAAvS;AACH,SALD,MAMK;AACD;AACAyJ,UAAAA,YAAY,IAAI,0BAA0BhM,OAAO,CAACI,IAAR,CAAaoC,SAAvC,GAAmD,kBAAnD,GAAwExC,OAAO,CAACI,IAAR,CAAamC,KAAb,CAAmB/D,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAxE,GAA8G,2BAA9G,GAA4IwB,OAAO,CAACM,KAAR,CAAckC,SAA1J,GAAsK,kBAAtK,GAA2LxC,OAAO,CAACM,KAAR,CAAciC,KAAd,CAAoB/D,OAApB,CAA4B,GAA5B,EAAiC,EAAjC,CAA3L,GAAkO,0BAAlO,GAA+PwB,OAAO,CAACQ,GAAR,CAAYgC,SAA3Q,GAAuR,kBAAvR,GAA4SxC,OAAO,CAACQ,GAAR,CAAY+B,KAAZ,CAAkB/D,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,CAA5S,GAAiV,2BAAjV,GAA+WwB,OAAO,CAACU,MAAR,CAAe8B,SAA9X,GAA0Y,kBAA1Y,GAA+ZxC,OAAO,CAACU,MAAR,CAAe6B,KAAf,CAAqB/D,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CAA/Z,GAAuc,wBAAvd;AACH;AACJ;AACJ;;AACD,WAAOwN,YAAY,GAAG,YAAtB;AACH,GAnBD;;AAoBArY,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmU,cAAnB,GAAoC,YAAY;AAC5C,QAAI/P,KAAK,GAAG,IAAZ;;AACA,QAAI4Q,eAAe,GAAG,yBAA0B,KAAKhX,UAAL,CAAgB4N,IAA1C,GAAkD,IAAxE;AACA,SAAK5N,UAAL,CAAgBqG,OAAhB,CAAwB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC1CyQ,MAAAA,eAAe,IAAI,sBAAsBzQ,GAAtB,GAA4B,UAA5B,GAAyCH,KAAK,CAACpG,UAAN,CAAiB0J,GAAjB,CAAqBnD,GAArB,EAA0BpF,IAAnE,GAA0E,GAA7F;;AACA,UAAIoF,GAAG,KAAK,QAAZ,EAAsB;AAClByQ,QAAAA,eAAe,IAAI,gBAAnB;AACH;;AACDA,MAAAA,eAAe,IAAI,KAAnB;AACH,KAND;AAOA,WAAOA,eAAe,IAAI,eAA1B;AACH,GAXD;;AAYAtY,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiU,gBAAnB,GAAsC,YAAY;AAC9C;AACA,QAAIgB,YAAY,GAAG,2BAA2B,KAAK3W,aAAL,CAAmBM,MAAnB,GAA4B,CAAvD,IAA4D,0DAA/E;;AACA,QAAI,KAAKN,aAAL,CAAmBM,MAAnB,IAA6B,CAAjC,EAAoC;AAChC,WAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAKpM,aAA3B,EAA0C+J,EAAE,GAAGqC,EAAE,CAAC9L,MAAlD,EAA0DyJ,EAAE,EAA5D,EAAgE;AAC5D,YAAI6M,WAAW,GAAGxK,EAAE,CAACrC,EAAD,CAApB;AACA;;AACA4M,QAAAA,YAAY,IAAI,mBAAmBC,WAAW,CAAC7K,QAA/B,GAA0C,YAA1C,GAAyD6K,WAAW,CAACb,MAArE,GAA8E,YAA9E,GAA6Fa,WAAW,CAACZ,MAAzG,GAAkH,cAAlH,GAAmIY,WAAW,CAACX,QAA/I,GAA0J,IAA1K;;AACA,YAAIW,WAAW,CAACT,SAAZ,KAA0BpX,SAA9B,EAAyC;AACrC4X,UAAAA,YAAY,IAAI,MAAM,KAAKE,aAAL,CAAmBD,WAAnB,CAAN,GAAwC,OAAxD;AACH,SAFD,MAGK;AACDD,UAAAA,YAAY,IAAI,KAAhB;AACH;AACJ;AACJ;;AACD,WAAOA,YAAY,GAAG,iBAAtB;AACH,GAjBD;;AAkBAvY,EAAAA,QAAQ,CAACsD,SAAT,CAAmBkU,WAAnB,GAAiC,YAAY;AACzC;AACA,QAAIe,YAAY,GAAG,sBAAsB,KAAK5W,QAAL,CAAcO,MAAd,GAAuB,CAA7C,IAAkD,mEAArE;;AACA,QAAI,KAAKP,QAAL,CAAcO,MAAd,IAAwB,CAA5B,EAA+B;AAC3B,WAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAYqC,EAAE,GAAG,KAAKrM,QAA3B,EAAqCgK,EAAE,GAAGqC,EAAE,CAAC9L,MAA7C,EAAqDyJ,EAAE,EAAvD,EAA2D;AACvD,YAAI+M,MAAM,GAAG1K,EAAE,CAACrC,EAAD,CAAf;AACA;;AACA4M,QAAAA,YAAY,IAAI,mBAAmBG,MAAM,CAAC/K,QAA1B,GAAqC,YAArC,GAAoD+K,MAAM,CAACf,MAA3D,GAAoE,YAApE,GAAmFe,MAAM,CAACd,MAA1F,GAAmG,cAAnG,GAAoHc,MAAM,CAACb,QAA3H,GAAsI,UAAtI,GAAmJa,MAAM,CAACjW,IAA1J,GAAiK,IAAjL;;AACA,YAAIiW,MAAM,CAACZ,cAAP,KAA0B,CAA9B,EAAiC;AAC7BS,UAAAA,YAAY,IAAI,oBAAhB;AACH;;AACDA,QAAAA,YAAY,IAAI,MAAM,KAAKE,aAAL,CAAmBC,MAAnB,CAAN,GAAmC,OAAnD;AACH;AACJ;;AACD,WAAOH,YAAY,GAAG,YAAtB;AACH,GAfD;;AAgBAvY,EAAAA,QAAQ,CAACsD,SAAT,CAAmBmV,aAAnB,GAAmC,UAAUC,MAAV,EAAkB;AACjD,QAAIC,WAAW,GAAG,aAAlB;;AACA,QAAID,MAAM,CAACX,SAAP,CAAiBC,UAAjB,KAAgCrX,SAApC,EAA+C;AAC3CgY,MAAAA,WAAW,IAAI,iBAAiBD,MAAM,CAACX,SAAP,CAAiBC,UAAlC,GAA+C,IAA9D;AACH;;AACD,QAAIU,MAAM,CAACX,SAAP,CAAiBzK,MAAjB,KAA4B3M,SAA5B,IAAyC+X,MAAM,CAACX,SAAP,CAAiBzK,MAAjB,KAA4B,CAAzE,EAA4E;AACxEqL,MAAAA,WAAW,IAAI,aAAaD,MAAM,CAACX,SAAP,CAAiBzK,MAA9B,GAAuC,IAAtD;AACH,KAFD,MAGK,IAAIoL,MAAM,CAACX,SAAP,CAAiBxK,QAAjB,KAA8B5M,SAA9B,IAA2C+X,MAAM,CAACX,SAAP,CAAiBxK,QAAjB,KAA8B,CAA7E,EAAgF;AACjFoL,MAAAA,WAAW,IAAI,mBAAmBD,MAAM,CAACX,SAAP,CAAiBxK,QAApC,GAA+C,IAA9D;AACH;;AACD,QAAImL,MAAM,CAACX,SAAP,CAAiBE,QAAjB,KAA8BtX,SAAlC,EAA6C;AACzCgY,MAAAA,WAAW,IAAI,eAAeD,MAAM,CAACX,SAAP,CAAiBE,QAAhC,GAA2C,IAA1D;AACH;;AACDU,IAAAA,WAAW,IAAI,eAAeD,MAAM,CAACX,SAAP,CAAiBtK,QAAhC,GAA2C,MAA1D;AACA,WAAOkL,WAAP;AACH,GAhBD;;AAiBA3Y,EAAAA,QAAQ,CAACsD,SAAT,CAAmB8O,OAAnB,GAA6B,UAAUlP,iBAAV,EAA6B;AACtD;AACA,QAAI0V,SAAS,GAAG,iMAAhB;;AACA,QAAI1V,iBAAiB,KAAKvC,SAA1B,EAAqC;AACjC,UAAIuC,iBAAiB,CAACU,OAAlB,KAA8BjD,SAAlC,EAA6C;AACzCiY,QAAAA,SAAS,IAAI,cAAc1V,iBAAiB,CAACU,OAAhC,GAA0C,YAAvD;AACH;;AACD,UAAIV,iBAAiB,CAACS,OAAlB,KAA8BhD,SAAlC,EAA6C;AACzCiY,QAAAA,SAAS,IAAI,cAAc1V,iBAAiB,CAACS,OAAhC,GAA0C,YAAvD;AACH;AACJ;;AACD,SAAKiP,YAAL,CAAmBgG,SAAS,GAAG,eAA/B,EAAiD,kBAAjD;AACH,GAZD;;AAaA5Y,EAAAA,QAAQ,CAACsD,SAAT,CAAmB+O,QAAnB,GAA8B,UAAUnP,iBAAV,EAA6B;AACvD,QAAIa,WAAW,GAAG,IAAIsG,IAAJ,EAAlB;AACA;;AACA,QAAIwO,UAAU,GAAG,yVAAjB;;AACA,QAAI,KAAK3V,iBAAL,KAA2BvC,SAA/B,EAA0C;AACtC,UAAIuC,iBAAiB,CAACM,MAAlB,KAA6B7C,SAAjC,EAA4C;AACxCkY,QAAAA,UAAU,IAAI,iBAAiB3V,iBAAiB,CAACM,MAAnC,GAA4C,eAA1D;AACH;;AACD,UAAIN,iBAAiB,CAACW,OAAlB,KAA8BlD,SAAlC,EAA6C;AACzCkY,QAAAA,UAAU,IAAI,iBAAiB3V,iBAAiB,CAACW,OAAnC,GAA6C,eAA3D;AACH;;AACD,UAAIX,iBAAiB,CAACQ,QAAlB,KAA+B/C,SAAnC,EAA8C;AAC1CkY,QAAAA,UAAU,IAAI,kBAAkB3V,iBAAiB,CAACQ,QAApC,GAA+C,gBAA7D;AACH;;AACD,UAAIR,iBAAiB,CAACO,QAAlB,KAA+B9C,SAAnC,EAA8C;AAC1CkY,QAAAA,UAAU,IAAI,qBAAqB3V,iBAAiB,CAACO,QAAvC,GAAkD,mBAAhE;AACH;;AACD,UAAIP,iBAAiB,CAACY,KAAlB,KAA4BnD,SAAhC,EAA2C;AACvCkY,QAAAA,UAAU,IAAI,eAAe3V,iBAAiB,CAACY,KAAjC,GAAyC,aAAvD;AACH;;AACD,UAAIZ,iBAAiB,CAACe,IAAlB,KAA2BtD,SAA/B,EAA0C;AACtCkY,QAAAA,UAAU,IAAI,kBAAkB3V,iBAAiB,CAACe,IAApC,GAA2C,gBAAzD;AACH;;AACD,UAAIf,iBAAiB,CAACgB,MAAlB,KAA6BvD,SAAjC,EAA4C;AACxCkY,QAAAA,UAAU,IAAI,uBAAuB3V,iBAAiB,CAACgB,MAAzC,GAAkD,qBAAhE;AACH;;AACD,UAAIhB,iBAAiB,CAACa,WAAlB,KAAkCpD,SAAtC,EAAiD;AAC7C;AACAkY,QAAAA,UAAU,IAAI,gDAAgD3V,iBAAiB,CAACa,WAAlB,CAA8B+U,WAA9B,EAAhD,GAA8F,oBAA5G;AACH,OAHD,MAIK;AACDD,QAAAA,UAAU,IAAI,gDAAgD9U,WAAW,CAAC+U,WAAZ,EAAhD,GAA4E,oBAA1F;AACH;;AACD,UAAI5V,iBAAiB,CAACc,YAAlB,KAAmCrD,SAAvC,EAAkD;AAC9C;AACAkY,QAAAA,UAAU,IAAI,iDAAiD3V,iBAAiB,CAACc,YAAlB,CAA+B8U,WAA/B,EAAjD,GAAgG,qBAA9G;AACH,OAHD,MAIK;AACDD,QAAAA,UAAU,IAAI,iDAAiD9U,WAAW,CAAC+U,WAAZ,EAAjD,GAA6E,qBAA3F;AACH;AACJ,KApCD,MAqCK;AACDD,MAAAA,UAAU,IAAI,gDAAgD9U,WAAW,CAAC+U,WAAZ,EAAhD,GAA4E,oBAA1F;AACAD,MAAAA,UAAU,IAAI,iDAAiD9U,WAAW,CAAC+U,WAAZ,EAAjD,GAA6E,qBAA3F;AACH;AACD;;;AACAD,IAAAA,UAAU,IAAI,sBAAd;AACA,SAAKjG,YAAL,CAAkBiG,UAAlB,EAA8B,mBAA9B;AACH,GAhDD;;AAiDA7Y,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiP,oBAAnB,GAA0C,YAAY;AAClD;AACA,QAAIwG,WAAW,GAAG,+kBAAlB;AACA,SAAKnG,YAAL,CAAkBmG,WAAlB,EAA+B,aAA/B;AACH,GAJD;;AAKA/Y,EAAAA,QAAQ,CAACsD,SAAT,CAAmBkP,oBAAnB,GAA0C,YAAY;AAClD;AACA,QAAIwG,UAAU,GAAG,6IAAjB;AACA,QAAI9W,MAAM,GAAG,KAAKc,UAAL,CAAgBd,MAA7B;AACA,QAAI+W,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIhX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,IAAIgX,KAAK,EAAtC,EAA0C;AACtC;AACAD,MAAAA,UAAU,IAAI,0BAA0B,CAAC/W,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAA1B,GAA+C,iHAA/C,GAAmK,CAACvC,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAAnK,GAAwL,UAAtM;AACH;AACD;;;AACAwU,IAAAA,UAAU,IAAI,0BAA0B,CAAC,EAAEC,KAAH,EAAUzU,QAAV,EAA1B,GAAiD,4GAA/D;;AACA,QAAI,KAAKlE,iBAAL,GAAyB,CAA7B,EAAgC;AAC5B;AACA0Y,MAAAA,UAAU,IAAI,0BAA0B,CAAC,EAAEC,KAAH,EAAUzU,QAAV,EAA1B,GAAiD,0HAA/D;AACH;;AACD,SAAKoO,YAAL,CAAmBoG,UAAU,GAAG,kBAAhC,EAAqD,4BAArD;AACH,GAhBD;;AAiBAhZ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBgP,eAAnB,GAAqC,YAAY;AAC7C;AACA,QAAI4G,iBAAiB,GAAG,6wBAAxB;AACA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIjX,MAAM,GAAG,KAAKc,UAAL,CAAgBd,MAA7B;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B;AACAkX,MAAAA,cAAc,IAAI,6CAA6C,CAAClX,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAA7C,GAAkE,kGAApF;;AACA,UAAI,KAAKxB,UAAL,CAAgBf,CAAhB,EAAmBmD,MAAnB,IAA6BzE,SAA7B,IAA0C,KAAKqC,UAAL,CAAgBf,CAAhB,EAAmBmD,MAAnB,CAA0BlD,MAA1B,GAAmC,CAAjF,EAAoF;AAChF;AACAiX,QAAAA,cAAc,IAAI,6CAA6C,CAAClX,CAAC,GAAG,CAAL,EAAQuC,QAAR,EAA7C,GAAkE,kFAApF;AACH;AACJ;;AACD,QAAI,KAAK1C,UAAL,GAAkB,CAAtB,EACIqX,cAAc,IAAI,qDAAlB;;AACJ,QAAI,KAAK7Y,iBAAL,GAAyB,CAA7B,EAAgC;AAC5B;AACA4Y,MAAAA,iBAAiB,IAAI,2IAArB;AACH;;AACD,SAAKtG,YAAL,CAAmBsG,iBAAiB,GAAGC,cAApB,GAAqC,UAAxD,EAAqE,qBAArE;AACH,GApBD;;AAqBAnZ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBsP,YAAnB,GAAkC,UAAUwG,SAAV,EAAqBC,QAArB,EAA+B;AAC7D,QAAI,OAAQD,SAAR,KAAuB,QAA3B,EAAqC;AACjC,UAAI7H,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC4H,SAAD,CAAT,EAAsB;AAAEtW,QAAAA,IAAI,EAAE;AAAR,OAAtB,CAAX;AACA,UAAIwW,WAAW,GAAG,IAAI3Z,cAAJ,CAAmB4R,IAAnB,EAAyB8H,QAAzB,CAAlB;AACA,WAAKtY,QAAL,CAAcwY,OAAd,CAAsBD,WAAtB;AACH,KAJD,MAKK;AACD,UAAIA,WAAW,GAAG,IAAI3Z,cAAJ,CAAmByZ,SAAnB,EAA8BC,QAA9B,CAAlB;AACA,WAAKtY,QAAL,CAAcwY,OAAd,CAAsBD,WAAtB;AACH;AACJ,GAVD;;AAWAtZ,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiH,iBAAnB,GAAuC,UAAUtC,IAAV,EAAgBW,QAAhB,EAA0BvE,UAA1B,EAAsC;AACzE,QAAI4D,IAAI,CAACyB,OAAL,KAAiB,CAAjB,IAAsBzB,IAAI,CAAC0B,OAAL,KAAiB,CAA3C,EAA8C;AAC1C,UAAI+J,KAAK,GAAG,IAAIlV,SAAJ,EAAZ;AACAkV,MAAAA,KAAK,CAACvL,CAAN,GAAUF,IAAI,CAACvF,KAAf;AACAgR,MAAAA,KAAK,CAACvM,KAAN,GAAcc,IAAI,CAAC0B,OAAnB;AACA+J,MAAAA,KAAK,CAAC1L,CAAN,GAAUY,QAAV;AACA8K,MAAAA,KAAK,CAAC7K,MAAN,GAAeZ,IAAI,CAACyB,OAApB;AACA,UAAI8P,SAAS,GAAG,KAAKxT,WAAL,CAAiB0N,KAAK,CAAC1L,CAAvB,EAA0B0L,KAAK,CAACvL,CAAhC,CAAhB;AACA,UAAIsR,OAAO,GAAG,KAAKzT,WAAL,CAAiB4C,QAAQ,GAAG8K,KAAK,CAAC7K,MAAlC,EAA0CZ,IAAI,CAACvF,KAAL,GAAagR,KAAK,CAACvM,KAA7D,CAAd;AACAuM,MAAAA,KAAK,CAACzJ,GAAN,GAAYuP,SAAS,GAAG,GAAZ,GAAkBC,OAA9B;AACA,UAAIC,UAAU,GAAGrV,UAAU,CAACmD,GAAX,CAAekM,KAAf,CAAjB;AACA,UAAI5H,KAAK,GAAG;AAAE3D,QAAAA,CAAC,EAAEuL,KAAK,CAACvL,CAAX;AAAcH,QAAAA,CAAC,EAAE0L,KAAK,CAAC1L;AAAvB,OAAZ;AACA,UAAI2R,GAAG,GAAG;AACNxR,QAAAA,CAAC,EAAGF,IAAI,CAACvF,KAAL,GAAagR,KAAK,CAACvM,KADjB;AACyBa,QAAAA,CAAC,EAAGY,QAAQ,GAAG8K,KAAK,CAAC7K;AAD9C,OAAV;AAGA,WAAK+Q,uBAAL,CAA6B9N,KAA7B,EAAoC6N,GAApC,EAAyC1R,IAAzC;AACH;;AACD,WAAO5D,UAAP;AACH,GAlBD;;AAmBArE,EAAAA,QAAQ,CAACsD,SAAT,CAAmBsW,uBAAnB,GAA6C,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB7R,IAAxB,EAA8B;AACvE,SAAK,IAAIE,CAAC,GAAG0R,KAAK,CAAC1R,CAAnB,EAAsBA,CAAC,IAAI2R,KAAK,CAAC3R,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACrC,WAAK,IAAIH,CAAC,GAAG6R,KAAK,CAAC7R,CAAnB,EAAsBA,CAAC,IAAI8R,KAAK,CAAC9R,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACrC,aAAK1D,gBAAL,CAAsB5C,GAAtB,CAA0B,KAAKsE,WAAL,CAAiBgC,CAAjB,EAAoBG,CAApB,CAA1B,EAAkD;AAAEA,UAAAA,CAAC,EAAEA,CAAL;AAAQH,UAAAA,CAAC,EAAEA,CAAX;AAAcI,UAAAA,UAAU,EAAEH,IAAI,CAACG;AAA/B,SAAlD;AACH;AACJ;AACJ,GAND;AAOA;;;;;;;;AAMApI,EAAAA,QAAQ,CAACsD,SAAT,CAAmByW,WAAnB,GAAiC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AACzD,QAAIC,WAAW,GAAG,QAAQ,IAAR,GAAe,EAAf,GAAoB,EAApB,GAAyB,EAA3C;AACA,QAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAArB;AACA,QAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAArB;;AACA,QAAIL,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,IAArB,IAA6BC,KAAK,IAAI,CAAtC,IAA2CA,KAAK,IAAI,EAAxD,EAA4D;AACxD,UAAIK,IAAI,GAAG,KAAKC,UAAL,CAAgBP,IAAhB,IAAwBK,cAAxB,GAAyCD,cAApD;AACA,UAAIpS,CAAC,GAAGgS,IAAI,GAAG,CAAf;AACA,UAAIrD,CAAC,GAAG3O,CAAC,GAAG,GAAJ,IAAYA,CAAC,GAAG,CAAL,GAAU,CAArB,KAA4BA,CAAC,GAAG,GAAL,GAAY,CAAvC,KAA8CA,CAAC,GAAG,GAAL,GAAY,CAAzD,IAA8DsS,IAAI,CAACL,KAAK,GAAG,CAAT,CAAlE,GAAgFC,GAAhF,GAAsF,CAA9F;AACA,aAAOvD,CAAC,GAAGwD,WAAX;AACH;;AACD,UAAM,IAAIpX,KAAJ,CAAU,kBAAV,CAAN;AACH,GAXD;AAYA;;;;;;;;AAMA/C,EAAAA,QAAQ,CAACsD,SAAT,CAAmBkX,WAAnB,GAAiC,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAC7D,QAAIF,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAApB,IAA0BC,MAAM,IAAI,CAApC,IAAyCA,MAAM,GAAG,EAAlD,IAAwDC,MAAM,IAAI,CAAlE,IAAuEA,MAAM,GAAG,EAApF,EAAwF;AACpF,UAAIC,YAAY,GAAGH,IAAI,GAAG,IAAP,GAAcC,MAAM,GAAG,EAAvB,GAA4BC,MAA/C;AACA,aAAOC,YAAY,GAAG,KAAf,GAAuB,IAA9B;AACH;;AACD,UAAM,IAAI7X,KAAJ,CAAU,gBAAV,CAAN;AACH,GAND;AAOA;;;;;;AAIA/C,EAAAA,QAAQ,CAACsD,SAAT,CAAmBiX,UAAnB,GAAgC,UAAUP,IAAV,EAAgB;AAC5C,WAAOA,IAAI,GAAG,CAAP,KAAa,CAAb,KAAmBA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,GAAP,KAAe,CAAtD,CAAP;AACH,GAFD;AAGA;;;;;AAGAha,EAAAA,QAAQ,CAACsD,SAAT,CAAmB4M,QAAnB,GAA8B,UAAU2K,IAAV,EAAgB;AAC1C,QAAIC,KAAK,GAAG,CAAZ;AACA;;AACAA,IAAAA,KAAK,GAAG,KAAKf,WAAL,CAAiBc,IAAI,CAACE,WAAL,EAAjB,EAAsCF,IAAI,CAACG,QAAL,KAAkB,CAAxD,EAA4DH,IAAI,CAACI,OAAL,EAA5D,IAA8E,KAAKT,WAAL,CAAiBK,IAAI,CAACK,QAAL,EAAjB,EAAkCL,IAAI,CAACM,UAAL,EAAlC,EAAqDN,IAAI,CAACO,UAAL,EAArD,CAAtF;;AACA,QAAIN,KAAK,KAAK,CAAd,EAAiB;AACb,aAAO,GAAP;AACH;;AACD,QAAIX,WAAW,GAAG,QAAQ,IAAR,GAAe,EAAf,GAAoB,EAApB,GAAyB,EAA3C;AACA,QAAIkB,UAAU,GAAG,CAAC,CAAC,CAAC,MAAM,CAAN,GAAU,CAAX,IAAgB,EAAhB,GAAqB,CAAtB,IAA2B,CAA3B,GAA+B,CAAhC,IAAqC,CAArC,GAAyC,CAAC,CAAC,MAAM,CAAN,GAAU,CAAX,IAAgB,EAAhB,GAAqB,CAAtB,IAA2B,CAApE,GAAwE,GAAzF;AACA,QAAIC,gBAAgB,GAAGD,UAAU,GAAGlB,WAApC;AACA,QAAIoB,gBAAgB,GAAG,CAAE,CAAC,MAAM,CAAN,GAAU,CAAX,IAAgB,EAAhB,GAAqB,CAAtB,GAA2B,GAA5B,IAAmCpB,WAA1D;;AACA,QAAIW,KAAK,GAAGS,gBAAZ,EAA8B;AAC1B,YAAM,IAAIxY,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,QAAIyY,YAAY,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAApC;AACA,WAAQ,CAACV,KAAK,GAAGQ,gBAAT,IAA6B,KAA9B,GAAuCE,YAA9C;AACH,GAhBD;;AAiBA,SAAOxb,QAAP;AACH,CA93D6B,EAA9B;;AA+3DA,SAASA,QAAT;AACA;;;;;AAIA,IAAImD,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,GAA6B,CAC5B;;AACD,SAAOA,iBAAP;AACH,CAJsC,EAAvC;;AAKA,SAASA,iBAAT","sourcesContent":["import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString, separator) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            this.drawingCount = 0;\n            this.imageCount = 0;\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json, separator);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            if (jsonSheet.images !== undefined) {\n                this.parserImages(jsonSheet.images, sheet);\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.GetColors = function () {\n        var colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    };\n    Workbook.prototype.processColor = function (colorVal) {\n        if (colorVal.indexOf('#') === 0) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    };\n    Workbook.prototype.processCellValue = function (value, cell) {\n        var cellValue = value;\n        if (value.indexOf(\"<font\") !== -1 || value.indexOf(\"<a\") !== -1 || value.indexOf(\"<b>\") !== -1 ||\n            value.indexOf(\"<i>\") !== -1 || value.indexOf(\"<u>\") !== -1) {\n            var processedVal = '';\n            var startindex = value.indexOf('<', 0);\n            var endIndex = value.indexOf('>', startindex + 1);\n            if (startindex >= 0 && endIndex >= 0) {\n                if (startindex !== 0) {\n                    processedVal += '<r><t xml:space=\"preserve\">' + value.substring(0, startindex) + '</t></r>';\n                }\n                while (startindex >= 0 && endIndex >= 0) {\n                    endIndex = value.indexOf('>', startindex + 1);\n                    if (endIndex >= 0) {\n                        var subString = value.substring(startindex + 1, endIndex);\n                        startindex = value.indexOf('<', endIndex + 1);\n                        if (startindex < 0) {\n                            startindex = cellValue.length;\n                        }\n                        var text = cellValue.substring(endIndex + 1, startindex);\n                        if (text.length !== 0) {\n                            var subSplit = subString.split(' ');\n                            if (subSplit.length > 0) {\n                                processedVal += '<r><rPr>';\n                            }\n                            if (subSplit.length > 1) {\n                                for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                                    var element = subSplit_1[_i];\n                                    var start = element.trim().substring(0, 5);\n                                    switch (start) {\n                                        case 'size=':\n                                            processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'face=':\n                                            processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'color':\n                                            processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                            break;\n                                        case 'href=':\n                                            var hyperLink = new HyperLink();\n                                            hyperLink.target = element.substring(6, element.length - 1).trim();\n                                            hyperLink.ref = cell.refName;\n                                            hyperLink.rId = (this.mHyperLinks.length + 1);\n                                            this.mHyperLinks.push(hyperLink);\n                                            processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                            break;\n                                    }\n                                }\n                            }\n                            else if (subSplit.length === 1) {\n                                var style = subSplit[0].trim();\n                                switch (style) {\n                                    case 'b':\n                                        processedVal += '<b/>';\n                                        break;\n                                    case 'i':\n                                        processedVal += '<i/>';\n                                        break;\n                                    case 'u':\n                                        processedVal += '<u/>';\n                                        break;\n                                }\n                            }\n                            processedVal += '</rPr><t xml:space=\"preserve\">' + text + '</t></r>';\n                        }\n                    }\n                }\n                if (processedVal === '') {\n                    return cellValue;\n                }\n                return processedVal;\n            }\n            else {\n                return cellValue;\n            }\n        }\n        else {\n            return cellValue;\n        }\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency, useGrouping: true });\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                var sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.parserImages = function (json, sheet) {\n        var imagesLength = json.length;\n        sheet.images = [];\n        var imageId = 0;\n        for (var p = 0; p < imagesLength; p++) {\n            var image = this.parserImage(json[p]);\n            sheet.images.push(image);\n        }\n    };\n    Workbook.prototype.parserImage = function (json) {\n        var image = new Image();\n        if (json.image !== null && json.image !== undefined) {\n            image.image = json.image;\n        }\n        if (json.row !== null && json.row !== undefined) {\n            image.row = json.row;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            image.column = json.column;\n        }\n        if (json.lastRow !== null && json.lastRow !== undefined) {\n            image.lastRow = json.lastRow;\n        }\n        if (json.lastColumn !== null && json.lastColumn !== undefined) {\n            image.lastColumn = json.lastColumn;\n        }\n        if (json.width !== null && json.width !== undefined) {\n            image.width = json.width;\n        }\n        if (json.height !== null && json.height !== undefined) {\n            image.height = json.height;\n        }\n        if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n            image.horizontalFlip = json.horizontalFlip;\n        }\n        if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n            image.verticalFlip = json.verticalFlip;\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            image.rotation = json.rotation;\n        }\n        return image;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />');\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            this.drawingCount++;\n            this.saveDrawings(sheet, sheet.index);\n            sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n        }\n        this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        sheetBlob.append(sheetString + '</worksheet>');\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.saveDrawings = function (sheet, index) {\n        var drawings = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n        if (sheet.images !== undefined) {\n            var imgId = 0;\n            for (var _i = 0, _a = sheet.images; _i < _a.length; _i++) {\n                var pic = _a[_i];\n                if (pic.height !== undefined && pic.width !== undefined) {\n                    this.updatelastRowOffset(sheet, pic);\n                    this.updatelastColumnOffSet(sheet, pic);\n                }\n                else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n                    pic.lastRowOffset = 0;\n                    pic.lastColOffset = 0;\n                }\n                imgId++;\n                sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n                sheetDrawingString += '<xdr:from><xdr:col>';\n                //col\n                sheetDrawingString += pic.column - 1;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.row - 1;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:rowOff></xdr:from>';\n                sheetDrawingString += '<xdr:to><xdr:col>';\n                //col\n                sheetDrawingString += pic.lastColumn;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += pic.lastColOffset;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.lastRow;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += pic.lastRowOffset;\n                sheetDrawingString += '</xdr:rowOff></xdr:to>';\n                sheetDrawingString += '<xdr:pic>';\n                sheetDrawingString += '<xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n                sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:blipFill>';\n                /* tslint:disable-next-line:max-line-length */\n                sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n                sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n                sheetDrawingString += '<xdr:spPr>';\n                sheetDrawingString += '<a:xfrm';\n                if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n                    sheetDrawingString += ' rot=\"' + (pic.rotation * 60000) + '\"';\n                }\n                if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n                    sheetDrawingString += ' flipV=\"1\"';\n                }\n                if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n                    sheetDrawingString += ' flipH=\"1\"';\n                }\n                sheetDrawingString += '/>';\n                sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n                sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n                var imageFile = new BlobHelper();\n                var imageData = this.convertBase64toImage(pic.image);\n                this.imageCount += 1;\n                this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n            }\n            drawings.append(sheetDrawingString);\n            drawings.append('</xdr:wsDr>');\n            this.saveDrawingRelations(sheet);\n            this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n        }\n    };\n    Workbook.prototype.updatelastRowOffset = function (sheet, picture) {\n        var iCurHeight = picture.height;\n        var iCurRow = picture.row;\n        var iCurOffset = 0;\n        while (iCurHeight >= 0) {\n            var iRowHeight = 0;\n            if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n            else\n                iRowHeight = this.convertToPixels(15);\n            var iSpaceInCell = iRowHeight - (iCurOffset * iRowHeight / 256);\n            if (iSpaceInCell > iCurHeight) {\n                picture.lastRow = iCurRow;\n                picture.lastRowOffset = iCurOffset + (iCurHeight * 256 / iRowHeight);\n                var rowHiddenHeight = 0;\n                if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                    rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n                else\n                    rowHiddenHeight = this.convertToPixels(15);\n                picture.lastRowOffset = (rowHiddenHeight * picture.lastRowOffset) / 256;\n                picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurHeight -= iSpaceInCell;\n                iCurRow++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.updatelastColumnOffSet = function (sheet, picture) {\n        var iCurWidth = picture.width;\n        var iCurCol = picture.column;\n        var iCurOffset = 0;\n        while (iCurWidth >= 0) {\n            var iColWidth = 0;\n            if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n            else\n                iColWidth = this.ColumnWidthToPixels(8.43);\n            var iSpaceInCell = iColWidth - (iCurOffset * iColWidth / 1024);\n            if (iSpaceInCell > iCurWidth) {\n                picture.lastColumn = iCurCol;\n                picture.lastColOffset = iCurOffset + (iCurWidth * 1024 / iColWidth);\n                var colHiddenWidth = 0;\n                if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                    colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol].width);\n                else\n                    colHiddenWidth = this.ColumnWidthToPixels(8.43);\n                picture.lastColOffset = (colHiddenWidth * picture.lastColOffset) / 1024;\n                picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurWidth -= iSpaceInCell;\n                iCurCol++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.convertToPixels = function (value) {\n        return value * this.unitsProportions[6];\n    };\n    Workbook.prototype.convertBase64toImage = function (img) {\n        var byteStr = window.atob(img);\n        var buffer = new ArrayBuffer(byteStr.length);\n        var data = new Uint8Array(buffer);\n        for (var i = 0; i < byteStr.length; i++) {\n            data[i] = byteStr.charCodeAt(i);\n        }\n        var blob = new Blob([data], { type: 'image/png' });\n        return blob;\n    };\n    Workbook.prototype.saveDrawingRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = sheet.images.length;\n        var id = this.imageCount - sheet.images.length;\n        for (var i = 1; i <= length; i++) {\n            id++;\n            /* tslint:disable-next-line:max-line-length */\n            drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n        }\n        this.addToArchive((drawingRelation + '</Relationships>'), 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.ColumnWidthToPixels = function (val) {\n        var dDigitWidth = 7;\n        var fileWidth = (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n        return this.trunc(((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256) * dDigitWidth);\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n        }\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                if (this.sharedString[i].indexOf('<r>') !== 0) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n            if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n                /* tslint:disable-next-line:max-line-length */\n                sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n            }\n        }\n        if (this.imageCount > 0)\n            sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"]},"metadata":{},"sourceType":"module"}