{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rraval\\\\Desktop\\\\schedule-component-copy\\\\src\\\\components\\\\newShiftDialog.js\";\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { RecurrenceEditorComponent } from '@syncfusion/ej2-react-schedule';\nimport * as React from \"react\";\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons'; // import './App.css';\n\nclass NewShiftDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDialogSave = args => {\n      if (args.requestType === 'eventCreate' || args.requestType === 'eventChange') {\n        let data = args.data instanceof Array ? args.data[0] : args.data;\n\n        if (!this.scheduleObj.isSlotAvailable(data.StartTime, data.EndTime)) {\n          args.cancel = true;\n        }\n      }\n    };\n\n    this.fields = {\n      text: 'Text',\n      value: 'Id'\n    };\n    this.employeeData = [{\n      Text: 'Unassigned',\n      Id: 0\n    }, ...this.props.employeeData];\n  } // ******* You can add additional events by using popupOpen  event\n\n\n  onPopupOpen(args) {\n    if (args.type === 'Editor') {\n      this.scheduleObj.setRecurrenceEditor(this.recurrObject);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dialog-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogComponent, {\n      width: \"400px\",\n      isModal: true,\n      target: \"#dialog-content\",\n      visible: this.props.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"custom-event-editor\",\n      style: {\n        width: '100%',\n        cellpadding: '10'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 105\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Shift Editor\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, \"Summary\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"Summary\",\n      className: \"e-field e-input\",\n      type: \"text\",\n      name: \"Subject\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Employee\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 70\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelectComponent, {\n      id: \"EventType\",\n      placeholder: \"Choose employee\",\n      \"data-name\": \"EventType\",\n      className: \"e-field\",\n      style: {\n        width: '100%'\n      },\n      fields: this.fields,\n      dataSource: this.employeeData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 66\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePickerComponent, {\n      id: \"StartTime\",\n      format: \"dd/MM/yy hh:mm a\",\n      \"data-name\": \"StartTime\",\n      className: \"e-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"To\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 64\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePickerComponent, {\n      id: \"EndTime\",\n      format: \"dd/MM/yy hh:mm a\",\n      \"data-name\": \"EndTime\",\n      className: \"e-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"Recurrence\"), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(RecurrenceEditorComponent, {\n      ref: recurrObject => this.recurrObject = recurrObject,\n      id: \"RecurrenceEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"Reason\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 68\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"Description\",\n      className: \"e-field e-input\",\n      name: \"Description\",\n      rows: 3,\n      cols: 50,\n      style: {\n        width: '100%',\n        height: '60px !important',\n        resize: 'vertical'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(ButtonComponent, {\n      onClick: this.handleDialogSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      onClick: this.props.dialogClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }\n    }, \"CANCEL\")));\n  }\n\n}\n\nexport default NewShiftDialog;","map":{"version":3,"sources":["C:/Users/rraval/Desktop/schedule-component-copy/src/components/newShiftDialog.js"],"names":["DialogComponent","RecurrenceEditorComponent","React","DateTimePickerComponent","MultiSelectComponent","ButtonComponent","NewShiftDialog","Component","constructor","props","handleDialogSave","args","requestType","data","Array","scheduleObj","isSlotAvailable","StartTime","EndTime","cancel","fields","text","value","employeeData","Text","Id","onPopupOpen","type","setRecurrenceEditor","recurrObject","render","open","width","cellpadding","textAlign","colspan","height","resize","dialogClose"],"mappings":"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","sourcesContent":["import { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { RecurrenceEditorComponent} from '@syncfusion/ej2-react-schedule';\r\nimport * as React from \"react\";\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { MultiSelectComponent  } from '@syncfusion/ej2-react-dropdowns';\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n// import './App.css';\r\n\r\n\r\n\r\nclass NewShiftDialog extends React.Component {    \r\n    constructor(props) {\r\n        super(props)\r\n        this.fields = { text: 'Text', value: 'Id' };\r\n        this.employeeData = [\r\n            {Text: 'Unassigned', Id: 0},\r\n            ...this.props.employeeData\r\n        ]\r\n    }\r\n// ******* You can add additional events by using popupOpen  event\r\n    onPopupOpen(args) {\r\n        if (args.type === 'Editor') {\r\n            this.scheduleObj.setRecurrenceEditor(this.recurrObject);\r\n        }\r\n    }\r\n\r\n    handleDialogSave = (args) =>  {\r\n        if (args.requestType === 'eventCreate' || args.requestType === 'eventChange') {\r\n            let data = args.data instanceof Array ? args.data[0] : args.data;\r\n            if (!this.scheduleObj.isSlotAvailable(data.StartTime, data.EndTime)) {\r\n                args.cancel = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"dialog-content\">\r\n                <DialogComponent\r\n                    width='400px'\r\n                    isModal={true}\r\n                    target='#dialog-content'\r\n                    visible={this.props.open}\r\n                    >\r\n                    <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '10' }}><tbody>\r\n                        <th style={{textAlign:'center'}}>Shift Editor</th>\r\n                        <tr><td className=\"e-textlabel\">Summary</td><td style={{ colspan: '4' }}>\r\n                            <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} />\r\n                        </td></tr>\r\n                        <tr><td className=\"e-textlabel\">Employee</td><td style={{ colspan: '4' }}>\r\n                            <MultiSelectComponent  \r\n                            id=\"EventType\" \r\n                            placeholder='Choose employee' \r\n                            data-name='EventType' \r\n                            className=\"e-field\" \r\n                            style={{ width: '100%' }} \r\n                            fields={this.fields}\r\n                            dataSource={this.employeeData}>                                \r\n                            </MultiSelectComponent >\r\n                        </td></tr>\r\n                        <tr><td className=\"e-textlabel\">From</td><td style={{ colspan: '4' }}>\r\n                            <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yy hh:mm a' data-name=\"StartTime\"  className=\"e-field\"></DateTimePickerComponent>\r\n                        </td></tr>\r\n                        <tr><td className=\"e-textlabel\">To</td><td style={{ colspan: '4' }}>\r\n                            <DateTimePickerComponent id=\"EndTime\" format='dd/MM/yy hh:mm a' data-name=\"EndTime\"  className=\"e-field\"></DateTimePickerComponent>\r\n                        </td></tr>\r\n                        <tr><td className=\"e-textlabel\">Recurrence</td><td colSpan={4}>\r\n                     <RecurrenceEditorComponent ref={recurrObject => this.recurrObject = recurrObject} id='RecurrenceEditor'></RecurrenceEditorComponent>\r\n                        </td></tr>\r\n                        <tr><td className=\"e-textlabel\">Reason</td><td style={{ colspan: '4' }}>\r\n                            <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n                        </td></tr></tbody></table>\r\n                     <ButtonComponent onClick={this.handleDialogSave}>SAVE</ButtonComponent>\r\n                     <ButtonComponent onClick={this.props.dialogClose}>CANCEL</ButtonComponent>\r\n                     \r\n               </DialogComponent>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default NewShiftDialog;"]},"metadata":{},"sourceType":"module"}