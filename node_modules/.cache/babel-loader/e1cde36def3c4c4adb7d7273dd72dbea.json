{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nvar ROOT = 'e-uploader';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\n\nvar FilesProp =\n/** @class */\nfunction (_super) {\n  __extends(FilesProp, _super);\n\n  function FilesProp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], FilesProp.prototype, \"name\", void 0);\n\n  __decorate([Property(null)], FilesProp.prototype, \"size\", void 0);\n\n  __decorate([Property('')], FilesProp.prototype, \"type\", void 0);\n\n  return FilesProp;\n}(ChildProperty);\n\nexport { FilesProp };\n\nvar ButtonsProps =\n/** @class */\nfunction (_super) {\n  __extends(ButtonsProps, _super);\n\n  function ButtonsProps() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Browse...')], ButtonsProps.prototype, \"browse\", void 0);\n\n  __decorate([Property('Upload')], ButtonsProps.prototype, \"upload\", void 0);\n\n  __decorate([Property('Clear')], ButtonsProps.prototype, \"clear\", void 0);\n\n  return ButtonsProps;\n}(ChildProperty);\n\nexport { ButtonsProps };\n\nvar AsyncSettings =\n/** @class */\nfunction (_super) {\n  __extends(AsyncSettings, _super);\n\n  function AsyncSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], AsyncSettings.prototype, \"saveUrl\", void 0);\n\n  __decorate([Property('')], AsyncSettings.prototype, \"removeUrl\", void 0);\n\n  __decorate([Property(0)], AsyncSettings.prototype, \"chunkSize\", void 0);\n\n  __decorate([Property(3)], AsyncSettings.prototype, \"retryCount\", void 0);\n\n  __decorate([Property(500)], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n\n  return AsyncSettings;\n}(ChildProperty);\n\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\n\nvar Uploader =\n/** @class */\nfunction (_super) {\n  __extends(Uploader, _super);\n  /**\n   * Triggers when change the Uploader value.\n   */\n\n\n  function Uploader(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.initialAttr = {\n      accept: null,\n      multiple: false,\n      disabled: false\n    };\n    _this.uploadedFilesData = [];\n    _this.base64String = [];\n    _this.isForm = false;\n    _this.allTypes = false;\n    _this.pausedData = [];\n    _this.uploadMetaData = [];\n    _this.tabIndex = '0';\n    _this.btnTabIndex = '0';\n    _this.disableKeyboardNavigation = false;\n    _this.count = -1;\n    _this.actionCompleteCount = 0;\n    _this.flag = true;\n    _this.selectedFiles = [];\n    _this.uploaderName = 'UploadFiles';\n    _this.fileStreams = [];\n    _this.newFileRef = 0;\n    _this.isFirstFileOnSelection = false;\n    /**\n     * Get the file item(li) which are shown in file list.\n     * @private\n     */\n\n    _this.fileList = [];\n    /**\n     * Get the data of files which are shown in file list.\n     * @private\n     */\n\n    _this.filesData = [];\n    _this.uploaderOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   * @private\n   */\n\n\n  Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowedExtensions':\n          this.setExtensions(this.allowedExtensions);\n          this.clearAll();\n          break;\n\n        case 'enabled':\n          this.setControlStatus();\n          break;\n\n        case 'multiple':\n          this.setMultipleSelection();\n          break;\n\n        case 'enableRtl':\n          this.setRTL();\n          this.reRenderFileList();\n          break;\n\n        case 'buttons':\n          this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n          this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n          this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n          this.renderButtonTemplates();\n          break;\n\n        case 'dropArea':\n          this.unBindDropEvents();\n          this.updateDropArea();\n          break;\n\n        case 'htmlAttributes':\n          this.updateHTMLAttrToElement();\n          this.updateHTMLAttrToWrapper();\n          this.checkHTMLAttributes(true);\n          break;\n\n        case 'files':\n          this.renderPreLoadFiles();\n          break;\n\n        case 'directoryUpload':\n          this.updateDirectoryAttributes();\n          break;\n\n        case 'template':\n          if (!this.isServerBlazor) {\n            this.clearAll();\n          }\n\n          break;\n\n        case 'minFileSize':\n        case 'maxFileSize':\n        case 'autoUpload':\n          this.clearAll();\n          break;\n\n        case 'sequentialUpload':\n          this.clearAll();\n          break;\n\n        case 'locale':\n          this.l10n.setLocale(this.locale);\n          this.setLocalizedTexts();\n          this.preLocaleObj = getValue('currentLocale', this.l10n);\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n      }\n    }\n  };\n\n  Uploader.prototype.setLocalizedTexts = function () {\n    if (isNullOrUndefined(this.template)) {\n      if (typeof this.buttons.browse === 'string') {\n        this.browseButton.innerText = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n        this.browseButton.setAttribute('title', this.browseButton.innerText);\n\n        if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\n          this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n        }\n      }\n\n      this.updateFileList();\n    }\n  };\n\n  Uploader.prototype.getKeyValue = function (val) {\n    var keyValue;\n\n    for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (this.preLocaleObj[key] === val) {\n        keyValue = key;\n      }\n    }\n\n    return keyValue;\n  };\n\n  Uploader.prototype.updateFileList = function () {\n    var element;\n    /* istanbul ignore next */\n\n    if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n      for (var i = 0; i < this.fileList.length; i++) {\n        element = this.fileList[i].querySelector('.e-file-status');\n        element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n        this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n\n        if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-play-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n        }\n\n        if (!this.autoUpload) {\n          this.uploadButton.innerText = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n          this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n          this.clearButton.innerText = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n          this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.reRenderFileList = function () {\n    if (this.listParent) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createFileList(this.filesData);\n\n      if (this.actionButtons) {\n        this.removeActionButtons();\n        this.renderActionButtons();\n        this.checkActionButtonStatus();\n      }\n    }\n  };\n\n  Uploader.prototype.preRender = function () {\n    this.localeText = {\n      Browse: 'Browse...',\n      Clear: 'Clear',\n      Upload: 'Upload',\n      dropFilesHint: 'Or drop files here',\n      invalidMaxFileSize: 'File size is too large',\n      invalidMinFileSize: 'File size is too small',\n      invalidFileType: 'File type is not allowed',\n      uploadFailedMessage: 'File failed to upload',\n      uploadSuccessMessage: 'File uploaded successfully',\n      removedSuccessMessage: 'File removed successfully',\n      removedFailedMessage: 'Unable to remove file',\n      inProgress: 'Uploading',\n      readyToUploadMessage: 'Ready to upload',\n      abort: 'Abort',\n      remove: 'Remove',\n      cancel: 'Cancel',\n      delete: 'Delete file',\n      pauseUpload: 'File upload paused',\n      pause: 'Pause',\n      resume: 'Resume',\n      retry: 'Retry',\n      fileUploadCancel: 'File upload canceled',\n      invalidFileSelection: 'Invalid files selected',\n      totalFiles: 'Total files',\n      size: 'Size'\n    };\n    this.l10n = new L10n('uploader', this.localeText, this.locale);\n    this.preLocaleObj = getValue('currentLocale', this.l10n);\n    this.isServerBlazor = isBlazor() && this.isServerRendered ? true : false;\n    this.isBlazorTemplate = this.isServerBlazor && this.template !== '' && !isNullOrUndefined(this.template) ? true : false;\n    this.isBlazorSaveUrl = this.isServerRendered && (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) ? true : false;\n\n    if (this.isBlazorSaveUrl && this.sequentialUpload) {\n      this.sequentialUpload = false;\n    }\n\n    this.formRendered();\n\n    if (!this.isServerBlazor) {\n      this.updateHTMLAttrToElement();\n      this.checkHTMLAttributes(false); // tslint:disable-next-line\n\n      var ejInstance = getValue('ej2_instances', this.element);\n      /* istanbul ignore next */\n\n      if (this.element.tagName === 'EJS-UPLOADER') {\n        var inputElement = this.createElement('input', {\n          attrs: {\n            type: 'file'\n          }\n        });\n        var index = 0;\n\n        for (index; index < this.element.attributes.length; index++) {\n          inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n          inputElement.innerHTML = this.element.innerHTML;\n        }\n\n        if (!inputElement.hasAttribute('name')) {\n          inputElement.setAttribute('name', 'UploadFiles');\n        }\n\n        this.element.appendChild(inputElement);\n        this.element = inputElement;\n        setValue('ej2_instances', ejInstance, this.element);\n      }\n      /* istanbul ignore next */\n\n\n      if (ejInstance[0].isPureReactComponent) {\n        if (!isNullOrUndefined(ejInstance[0].props.name)) {\n          this.element.setAttribute('name', ejInstance[0].props.name);\n        } else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n          this.element.setAttribute('name', ejInstance[0].props.id);\n        } else {\n          this.element.setAttribute('name', 'UploadFiles');\n        }\n      }\n\n      if (isNullOrUndefined(this.element.getAttribute('name'))) {\n        this.element.setAttribute('name', this.element.getAttribute('id'));\n      }\n\n      if (!this.element.hasAttribute('type')) {\n        this.element.setAttribute('type', 'file');\n      }\n\n      this.updateDirectoryAttributes();\n    }\n\n    this.keyConfigs = {\n      enter: 'enter'\n    };\n\n    if (this.element.hasAttribute('tabindex')) {\n      this.tabIndex = this.element.getAttribute('tabindex');\n    }\n\n    this.browserName = Browser.info.name;\n    this.uploaderName = this.element.getAttribute('name');\n  };\n\n  Uploader.prototype.formRendered = function () {\n    var parentEle = closest(this.element, 'form');\n\n    if (!isNullOrUndefined(parentEle)) {\n      for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n        if (parentEle.tagName === 'FORM') {\n          this.isForm = true;\n          this.formElement = parentEle;\n          parentEle.setAttribute('enctype', 'multipart/form-data');\n          parentEle.setAttribute('encoding', 'multipart/form-data');\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.getPersistData = function () {\n    return this.addOnPersist(['filesData']);\n  };\n  /**\n   * Return the module name of the component.\n   */\n\n\n  Uploader.prototype.getModuleName = function () {\n    return 'uploader';\n  };\n\n  Uploader.prototype.updateDirectoryAttributes = function () {\n    if (this.directoryUpload) {\n      this.element.setAttribute('directory', 'true');\n      this.element.setAttribute('webkitdirectory', 'true');\n    } else {\n      this.element.removeAttribute('directory');\n      this.element.removeAttribute('webkitdirectory');\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   * @private\n   */\n\n\n  Uploader.prototype.render = function () {\n    if (!this.isServerBlazor) {\n      this.renderBrowseButton();\n      this.initializeUpload();\n      this.updateHTMLAttrToWrapper();\n      this.wireEvents();\n      this.setMultipleSelection();\n      this.setExtensions(this.allowedExtensions);\n      this.setRTL();\n      this.renderPreLoadFiles();\n      this.setControlStatus();\n      this.setCSSClass();\n    } else {\n      this.dropAreaWrapper = closest(this.element, '.' + DROP_WRAPPER);\n      this.uploadWrapper = closest(this.element, '.e-upload.e-control-wrapper');\n      this.browseButton = this.dropAreaWrapper.querySelector('button.e-upload-browse-btn');\n      this.setDropArea();\n      this.renderPreLoadFiles();\n      this.wireEvents();\n    }\n\n    this.renderComplete();\n  };\n\n  Uploader.prototype.renderBrowseButton = function () {\n    this.browseButton = this.createElement('button', {\n      className: 'e-css e-btn',\n      attrs: {\n        'type': 'button'\n      }\n    });\n    this.browseButton.setAttribute('tabindex', this.tabIndex);\n\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.innerText);\n    } else {\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    this.element.setAttribute('aria-label', 'Uploader');\n  };\n\n  Uploader.prototype.renderActionButtons = function () {\n    this.element.setAttribute('tabindex', '-1');\n\n    if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n      this.actionButtons = this.createElement('div', {\n        className: ACTION_BUTTONS\n      });\n      this.uploadButton = this.createElement('button', {\n        className: UPLOAD_BUTTONS,\n        attrs: {\n          'type': 'button',\n          'tabindex': this.btnTabIndex\n        }\n      });\n      this.clearButton = this.createElement('button', {\n        className: CLEAR_BUTTONS,\n        attrs: {\n          'type': 'button',\n          'tabindex': this.btnTabIndex\n        }\n      });\n      this.actionButtons.appendChild(this.clearButton);\n      this.actionButtons.appendChild(this.uploadButton);\n      this.renderButtonTemplates();\n      this.uploadWrapper.appendChild(this.actionButtons);\n      this.browseButton.blur();\n      this.uploadButton.focus();\n      this.wireActionButtonEvents();\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverActionButtonsEventBind = function (element) {\n    if (element && !this.isForm) {\n      this.browseButton.blur();\n      this.actionButtons = element;\n      this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\n      this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\n      this.uploadButton.focus();\n      this.unwireActionButtonEvents();\n      this.wireActionButtonEvents();\n      this.checkActionButtonStatus();\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverUlElement = function (element) {\n    if (element) {\n      if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n        this.listParent = element;\n        this.fileList = [].slice.call(this.listParent.querySelectorAll('li'));\n        this.serverRemoveIconBindEvent();\n\n        if (!this.isForm) {\n          this.checkAutoUpload(this.filesData);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.wireActionButtonEvents = function () {\n    EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n    EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n  };\n\n  Uploader.prototype.unwireActionButtonEvents = function () {\n    EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n    EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n  };\n\n  Uploader.prototype.removeActionButtons = function () {\n    if (this.actionButtons) {\n      this.unwireActionButtonEvents();\n\n      if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n        detach(this.actionButtons);\n      }\n\n      this.actionButtons = null;\n    }\n  };\n\n  Uploader.prototype.renderButtonTemplates = function () {\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.textContent);\n    } else {\n      this.browseButton.innerHTML = '';\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    if (this.uploadButton) {\n      var uploadText = void 0;\n      uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n      this.buttons.upload = uploadText;\n\n      if (typeof this.buttons.upload === 'string') {\n        this.uploadButton.textContent = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n        this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n      } else {\n        this.uploadButton.innerHTML = '';\n        this.uploadButton.appendChild(this.buttons.upload);\n      }\n    }\n\n    if (this.clearButton) {\n      var clearText = void 0;\n      clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n      this.buttons.clear = clearText;\n\n      if (typeof this.buttons.clear === 'string') {\n        this.clearButton.textContent = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n        this.clearButton.setAttribute('title', this.clearButton.textContent);\n      } else {\n        this.clearButton.innerHTML = '';\n        this.clearButton.appendChild(this.buttons.clear);\n      }\n    }\n  };\n\n  Uploader.prototype.initializeUpload = function () {\n    this.element.setAttribute('tabindex', '-1');\n    var inputWrapper = this.createElement('span', {\n      className: INPUT_WRAPPER\n    });\n    this.element.parentElement.insertBefore(inputWrapper, this.element);\n    this.dropAreaWrapper = this.createElement('div', {\n      className: DROP_WRAPPER\n    });\n    this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n    inputWrapper.appendChild(this.element);\n    this.dropAreaWrapper.appendChild(this.browseButton);\n    this.dropAreaWrapper.appendChild(inputWrapper);\n    this.uploadWrapper = this.createElement('div', {\n      className: CONTROL_WRAPPER\n    });\n    this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n    this.uploadWrapper.appendChild(this.dropAreaWrapper);\n    this.setDropArea();\n  };\n\n  Uploader.prototype.renderPreLoadFiles = function () {\n    if (this.files.length) {\n      if (this.enablePersistence && this.filesData.length) {\n        this.createFileList(this.filesData);\n        return;\n      }\n\n      if (isNullOrUndefined(this.files[0].size)) {\n        return;\n      }\n\n      var files = [].slice.call(this.files);\n      var filesData = [];\n\n      if (!this.multiple) {\n        this.clearData();\n        files = [files[0]];\n      }\n\n      for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n        var data = files_1[_i];\n        var fileData = {\n          name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n          rawFile: '',\n          size: data.size,\n          status: this.localizedTexts('uploadSuccessMessage'),\n          type: data.type,\n          validationMessages: {\n            minSize: '',\n            maxSize: ''\n          },\n          statusCode: '2'\n        };\n        filesData.push(fileData);\n        this.filesData.push(fileData);\n      }\n\n      this.createFileList(filesData);\n\n      if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n        this.renderActionButtons();\n      }\n\n      this.checkActionButtonStatus();\n\n      if (this.sequentialUpload) {\n        this.count = this.filesData.length - 1;\n      }\n    }\n  };\n\n  Uploader.prototype.checkActionButtonStatus = function () {\n    if (this.actionButtons) {\n      var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length + this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n\n      if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      } else {\n        this.uploadButton.removeAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.setDropArea = function () {\n    var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n\n    if (this.dropArea) {\n      this.dropZoneElement = typeof this.dropArea !== 'string' ? this.dropArea : document.querySelector(this.dropArea);\n      var element = this.element;\n      var enableDropText = false;\n\n      while (element.parentNode) {\n        element = element.parentNode;\n\n        if (element === this.dropZoneElement) {\n          enableDropText = true;\n\n          if (!dropTextArea) {\n            this.createDropTextHint();\n          } else if (!this.isServerBlazor) {\n            dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\n          }\n        }\n      }\n\n      if (!enableDropText && dropTextArea) {\n        dropTextArea.remove();\n      }\n    } else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\n      this.createDropTextHint();\n      this.dropZoneElement = this.uploadWrapper;\n      this.setProperties({\n        dropArea: this.uploadWrapper\n      }, true);\n    }\n\n    this.bindDropEvents();\n  };\n\n  Uploader.prototype.updateDropArea = function () {\n    if (this.dropArea) {\n      this.setDropArea();\n    } else {\n      this.dropZoneElement = null;\n      var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n\n      if (dropTextArea) {\n        dropTextArea.remove();\n      }\n    }\n  };\n\n  Uploader.prototype.createDropTextHint = function () {\n    if (!this.isServerBlazor) {\n      var fileDropArea = this.createElement('span', {\n        className: DROP_AREA\n      });\n      fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n      this.dropAreaWrapper.appendChild(fileDropArea);\n    }\n  };\n\n  Uploader.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) < 0) {\n          this.element.setAttribute(pro, this.htmlAttributes[pro]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) > -1) {\n          if (pro === 'class') {\n            var updatedClassValues = this.htmlAttributes[pro].replace(/\\s+/g, ' ').trim();\n\n            if (updatedClassValues !== '') {\n              addClass([this.uploadWrapper], updatedClassValues.split(' '));\n            }\n          } else if (pro === 'style') {\n            var uploadStyle = this.uploadWrapper.getAttribute(pro);\n            uploadStyle = !isNullOrUndefined(uploadStyle) ? uploadStyle + this.htmlAttributes[pro] : this.htmlAttributes[pro];\n            this.uploadWrapper.setAttribute(pro, uploadStyle);\n          } else {\n            this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\n          }\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.setMultipleSelection = function () {\n    if (this.multiple && !this.element.hasAttribute('multiple')) {\n      var newAttr = document.createAttribute('multiple');\n      newAttr.value = 'multiple';\n      this.element.setAttributeNode(newAttr);\n    } else if (!this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n  };\n\n  Uploader.prototype.checkAutoUpload = function (fileData) {\n    if (this.autoUpload) {\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.sequenceUpload(fileData);\n      } else {\n        this.upload(fileData);\n      }\n\n      this.removeActionButtons();\n    } else if (!this.actionButtons) {\n      this.renderActionButtons();\n    }\n\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.sequenceUpload = function (fileData) {\n    if (this.filesData.length - fileData.length === 0 || this.filesData[this.filesData.length - fileData.length - 1].statusCode !== '1') {\n      ++this.count;\n      var isFileListCreated = this.showFileList ? false : true;\n\n      if (typeof this.filesData[this.count] === 'object') {\n        this.isFirstFileOnSelection = false;\n        this.upload(this.filesData[this.count], isFileListCreated);\n\n        if (this.filesData[this.count].statusCode === '0') {\n          this.sequenceUpload(fileData);\n        }\n      } else {\n        --this.count;\n      }\n    }\n  };\n\n  Uploader.prototype.setCSSClass = function (oldCSSClass) {\n    var updatedCssClassValue = this.cssClass;\n\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = this.cssClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\n      addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\n    }\n\n    var updatedOldCssClass = oldCSSClass;\n\n    if (!isNullOrUndefined(oldCSSClass)) {\n      updatedOldCssClass = oldCSSClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\n      removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\n    }\n  };\n\n  Uploader.prototype.wireEvents = function () {\n    EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n    EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n    EventHandler.add(document, 'click', this.removeFocus, this);\n    this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n  };\n\n  Uploader.prototype.unWireEvents = function () {\n    EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n    EventHandler.remove(this.element, 'change', this.onSelectFiles);\n    EventHandler.remove(document, 'click', this.removeFocus);\n\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n\n    this.keyboardModule.destroy();\n  };\n\n  Uploader.prototype.resetForm = function () {\n    this.clearAll();\n  };\n\n  Uploader.prototype.keyActionHandler = function (e) {\n    var targetElement = e.target;\n\n    switch (e.action) {\n      case 'enter':\n        if (e.target === this.clearButton) {\n          this.clearButtonClick();\n        } else if (e.target === this.uploadButton) {\n          this.uploadButtonClick();\n        } else if (e.target === this.browseButton) {\n          this.browseButtonClick();\n        } else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n          var metaData = this.getCurrentMetaData(null, e);\n          metaData.file.statusCode = '4';\n          metaData.file.status = this.localizedTexts('pauseUpload');\n          this.abortUpload(metaData, false);\n        } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n          this.resumeUpload(this.getCurrentMetaData(null, e), e);\n        } else if (targetElement.classList.contains(RETRY_ICON)) {\n          var metaData = this.getCurrentMetaData(null, e);\n\n          if (!isNullOrUndefined(metaData)) {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n          } else {\n            var target = e.target.parentElement;\n            var fileData = this.filesData[this.fileList.indexOf(target)];\n            this.retry(fileData);\n          }\n        } else {\n          this.removeFiles(e);\n\n          if (!targetElement.classList.contains(ABORT_ICON)) {\n            this.browseButton.focus();\n          }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n    }\n  };\n\n  Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n    var fileData;\n    var targetMetaData;\n\n    if (isNullOrUndefined(fileInfo)) {\n      var target = e.target.parentElement;\n      fileData = this.filesData[this.fileList.indexOf(target)];\n    } else {\n      fileData = fileInfo;\n    }\n\n    for (var i = 0; i < this.uploadMetaData.length; i++) {\n      if (this.uploadMetaData[i].file.name === fileData.name) {\n        targetMetaData = this.uploadMetaData[i];\n      }\n    }\n\n    return targetMetaData;\n  };\n\n  Uploader.prototype.removeFocus = function () {\n    if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n      document.activeElement.blur();\n      this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n    }\n  };\n\n  Uploader.prototype.browseButtonClick = function () {\n    this.element.click();\n  };\n\n  Uploader.prototype.uploadButtonClick = function () {\n    if (this.sequentialUpload) {\n      this.sequenceUpload(this.filesData);\n    } else {\n      this.upload(this.filesData);\n    }\n  };\n\n  Uploader.prototype.clearButtonClick = function () {\n    this.clearAll();\n    /* istanbul ignore next */\n\n    if (this.sequentialUpload) {\n      this.count = -1;\n    }\n\n    this.actionCompleteCount = 0;\n  };\n\n  Uploader.prototype.bindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n      EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n      EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n      EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n    }\n  };\n\n  Uploader.prototype.unBindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n      EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n      EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n    }\n  };\n\n  Uploader.prototype.onDragLeave = function (e) {\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n  };\n\n  Uploader.prototype.dragHover = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.dropZoneElement.classList.add(DRAG_HOVER);\n\n    if (this.dropEffect !== 'Default') {\n      e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.dropElement = function (e) {\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n    this.onSelectFiles(e);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.onPasteFile = function (event) {\n    var item = event.clipboardData.items;\n\n    if (item.length !== 1) {\n      return;\n    }\n\n    var pasteFile = [].slice.call(item)[0];\n\n    if (pasteFile.kind === 'file' && pasteFile.type.match('^image/')) {\n      this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n    }\n  };\n\n  Uploader.prototype.getSelectedFiles = function (index) {\n    var data = [];\n    var liElement = this.fileList[index];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < index; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    for (var j = startIndex; j < startIndex + nameElements; j++) {\n      data.push(allFiles[j]);\n    }\n\n    return data;\n  };\n\n  Uploader.prototype.removeFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var selectedElement = args.target.parentElement;\n\n    if (this.isBlazorSaveUrl) {\n      this.fileList = [].slice.call(this.uploadWrapper.querySelectorAll('li'));\n    }\n\n    var index = this.fileList.indexOf(selectedElement);\n    var liElement = this.fileList[index];\n    var formUpload = this.isFormUpload();\n    var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n\n    if (isNullOrUndefined(fileData)) {\n      return;\n    }\n\n    if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n      fileData[0].statusCode = '5';\n\n      if (!isNullOrUndefined(liElement)) {\n        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n        createSpinner({\n          target: spinnerTarget,\n          width: '20px'\n        });\n        showSpinner(spinnerTarget);\n      }\n\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.uploadSequential();\n      }\n\n      if (!liElement.classList.contains(RESTRICT_RETRY)) {\n        this.checkActionComplete(true);\n      }\n    } else if (!closest(args.target, '.' + SPINNER_PANE)) {\n      this.remove(fileData, false, false, true, args);\n    }\n\n    this.element.value = '';\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.removeFilesData = function (file, customTemplate) {\n    var index;\n\n    if (customTemplate) {\n      if (!this.showFileList) {\n        index = this.filesData.indexOf(file);\n        this.filesData.splice(index, 1);\n      }\n\n      return;\n    }\n\n    var selectedElement = this.getLiElement(file);\n\n    if (isNullOrUndefined(selectedElement)) {\n      return;\n    }\n\n    if (!this.isBlazorSaveUrl) {\n      detach(selectedElement);\n    }\n\n    index = this.fileList.indexOf(selectedElement);\n    this.fileList.splice(index, 1);\n    this.filesData.splice(index, 1);\n\n    if (!this.isBlazorSaveUrl) {\n      if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n        detach(this.listParent);\n        this.listParent = null;\n        this.removeActionButtons();\n      }\n\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        if (index <= this.count) {\n          --this.count;\n        }\n      }\n    } else {\n      // tslint:disable-next-line\n      this.interopAdaptor.invokeMethodAsync('removeFileData', index);\n    }\n  };\n\n  Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n    var _this = this;\n\n    var selectedFiles = file;\n    var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n\n      if (isBlazor()) {\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      if (!removeDirectly) {\n        _this.trigger('removing', eventArgs, function (eventArgs) {\n          if (eventArgs.cancel) {\n            e.cancel = true;\n          } else {\n            _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n          }\n        });\n      } else {\n        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n      }\n    };\n\n    if (this.isServerBlazor) {\n      var name_1 = this.element.getAttribute('name');\n\n      if (!isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n        formData.append(name_1, selectedFiles.rawFile, selectedFiles.name);\n      } else {\n        formData.append(name_1, selectedFiles.name);\n      }\n    }\n\n    ajax.onLoad = function (e) {\n      _this.removeCompleted(e, selectedFiles, custom);\n\n      return {};\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.removeFailed(e, selectedFiles, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n  };\n\n  Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n    /* istanbul ignore next */\n    var name = this.element.getAttribute('name');\n    var liElement = this.getLiElement(file);\n\n    if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) || !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n      var spinnerTarget = void 0;\n      spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n\n    if (!this.isServerBlazor) {\n      if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n        formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n      } else {\n        formData.append(name, selectedFiles.name);\n      }\n\n      this.updateFormData(formData, eventArgs.customFormData);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateFormData = function (formData, customData) {\n    if (customData.length > 0 && customData[0]) {\n      var _loop_1 = function (i) {\n        var data = customData[i]; // tslint:disable-next-line\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        formData.append(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < customData.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n    if (currentRequest.length > 0 && currentRequest[0]) {\n      var _loop_2 = function (i) {\n        var data = currentRequest[i]; // tslint:disable-next-line\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        request.setRequestHeader(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < currentRequest.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n\n  Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n    };\n    this.trigger('success', args);\n    this.removeFilesData(files, customTemplate);\n    var index = this.uploadedFilesData.indexOf(files);\n    this.uploadedFilesData.splice(index, 1);\n    this.trigger('change', {\n      files: this.uploadedFilesData\n    });\n  };\n\n  Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n    };\n\n    if (!customTemplate) {\n      var index = this.filesData.indexOf(files);\n      var rootElement = this.fileList[index];\n\n      if (rootElement) {\n        var statusElement = rootElement.querySelector('.' + STATUS);\n        rootElement.classList.remove(UPLOAD_SUCCESS);\n        statusElement.classList.remove(UPLOAD_SUCCESS);\n        rootElement.classList.add(UPLOAD_FAILED);\n        statusElement.classList.add(UPLOAD_FAILED);\n      }\n\n      this.checkActionButtonStatus();\n    }\n\n    this.trigger('failure', args);\n    var liElement = this.getLiElement(files);\n    /* istanbul ignore next */\n\n    if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFilesFromFolder = function (event) {\n    this.filesEntries = [];\n    var items;\n    items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n    var validDirectoryUpload = this.checkDirectoryUpload(items);\n\n    if (!validDirectoryUpload) {\n      return;\n    }\n\n    var _loop_3 = function (i) {\n      // tslint:disable-next-line\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isFile) {\n        var files_2 = []; // tslint:disable-next-line\n\n        item.file(function (fileObj) {\n          var path = item.fullPath;\n          files_2.push({\n            'path': path,\n            'file': fileObj\n          });\n        });\n        this_1.renderSelectedFiles(event, files_2, true);\n      } else if (item.isDirectory) {\n        this_1.traverseFileTree(item, event);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < items.length; i++) {\n      _loop_3(i);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.checkDirectoryUpload = function (items) {\n    for (var i = 0; items && i < items.length; i++) {\n      // tslint:disable-next-line\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isDirectory) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // tslint:disable\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.traverseFileTree = function (item, event) {\n    if (item.isFile) {\n      this.filesEntries.push(item);\n    } else if (item.isDirectory) {\n      // tslint:disable-next-line\n      var directoryReader = item.createReader(); // tslint:disable-next-line\n\n      this.readFileFromDirectory(directoryReader, event);\n    }\n  }; // tslint:disable\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\n    var _this = this; // tslint:disable-next-line\n\n\n    directoryReader.readEntries(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        _this.traverseFileTree(entries[i]); // tslint:disable-next-line\n\n      }\n\n      ;\n\n      _this.pushFilesEntries(event);\n\n      if (entries.length) {\n        _this.readFileFromDirectory(directoryReader);\n      }\n    });\n  };\n\n  Uploader.prototype.pushFilesEntries = function (event) {\n    var _this = this;\n\n    var files = [];\n\n    var _loop_4 = function (i) {\n      // tslint:disable-next-line\n      this_2.filesEntries[i].file(function (fileObj) {\n        if (_this.filesEntries) {\n          var path = _this.filesEntries[i].fullPath;\n          files.push({\n            'path': path,\n            'file': fileObj\n          });\n\n          if (i === _this.filesEntries.length - 1) {\n            _this.filesEntries = [];\n\n            _this.renderSelectedFiles(event, files, true);\n          }\n        }\n      });\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < this.filesEntries.length; i++) {\n      _loop_4(i);\n    }\n  }; // tslint:enable\n\n\n  Uploader.prototype.onSelectFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var targetFiles;\n    /* istanbul ignore next */\n\n    if (args.type === 'drop') {\n      if (this.directoryUpload) {\n        this.getFilesFromFolder(args);\n      } else {\n        var files = this.sortFilesList = args.dataTransfer.files;\n\n        if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n          this.element.files = files;\n        }\n\n        targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n        this.renderSelectedFiles(args, targetFiles);\n      }\n    } else {\n      targetFiles = [].slice.call(args.target.files);\n      this.renderSelectedFiles(args, targetFiles);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getBase64 = function (file) {\n    return new Promise(function (resolve, reject) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = function () {\n        return resolve(fileReader.result);\n      };\n\n      fileReader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  };\n  /* istanbul ignore next */\n\n  /* tslint:ignore */\n\n\n  Uploader.prototype.renderSelectedFiles = function (args, // tslint:disable-next-line\n  targetFiles, directory, paste) {\n    var _this = this;\n\n    this.base64String = []; // tslint:disable-next-line\n\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      isModified: false,\n      modifiedFilesData: [],\n      progressInterval: '',\n      isCanceled: false,\n      currentRequest: null,\n      customFormData: null\n    };\n    /* istanbul ignore next */\n\n    if (targetFiles.length < 1) {\n      eventArgs.isCanceled = true;\n      this.trigger('selected', eventArgs);\n      return;\n    }\n\n    this.flag = true;\n    var fileData = [];\n\n    if (!this.multiple) {\n      this.clearData(true);\n      targetFiles = [targetFiles[0]];\n    }\n\n    for (var i = 0; i < targetFiles.length; i++) {\n      var file = directory ? targetFiles[i].file : targetFiles[i];\n      this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n    }\n\n    eventArgs.filesData = fileData;\n\n    if (this.allowedExtensions.indexOf('*') > -1) {\n      this.allTypes = true;\n    }\n\n    if (!this.allTypes) {\n      fileData = this.checkExtension(fileData);\n    }\n\n    this.trigger('selected', eventArgs, function (eventArgs) {\n      _this._internalRenderSelect(eventArgs, fileData);\n    });\n  };\n\n  Uploader.prototype.updateInitialFileDetails = function (args, // tslint:disable-next-line\n  targetFiles, file, i, fileData, directory, paste) {\n    var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ? getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) : this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n    var fileDetails = {\n      name: fileName,\n      rawFile: file,\n      size: file.size,\n      status: this.localizedTexts('readyToUploadMessage'),\n      type: this.getFileType(file.name),\n      validationMessages: this.validatedFileSize(file.size),\n      statusCode: '1',\n      id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\n    };\n    /* istanbul ignore next */\n\n    if (paste) {\n      fileDetails.fileSource = 'paste';\n    }\n\n    fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n\n    if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n      fileDetails.statusCode = '0';\n    }\n\n    fileData.push(fileDetails);\n  };\n\n  Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n    if (!eventArgs.cancel) {\n      /* istanbul ignore next */\n      if (isBlazor()) {\n        this.currentRequestHeader = eventArgs.currentRequest;\n        this.customFormDatas = eventArgs.customFormData;\n      }\n\n      this.selectedFiles = fileData;\n      this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n\n      if (this.showFileList) {\n        if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n          for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\n            for (var k = 0; k < fileData.length; k++) {\n              if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\n                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\n              }\n            }\n          }\n\n          var dataFiles = this.allTypes ? eventArgs.modifiedFilesData : this.checkExtension(eventArgs.modifiedFilesData);\n          this.updateSortedFileList(dataFiles);\n          this.filesData = dataFiles;\n\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(dataFiles);\n          }\n        } else {\n          this.createFileList(fileData, true);\n\n          if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n            this.filesData = this.filesData.concat(fileData);\n          }\n\n          if (!this.isForm || this.allowUpload()) {\n            if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n              this.checkAutoUpload(fileData);\n            }\n          }\n        }\n\n        if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n          this.progressInterval = eventArgs.progressInterval;\n        }\n      } else {\n        this.filesData = this.filesData.concat(fileData);\n\n        if (this.isBlazorSaveUrl) {\n          // tslint:disable-next-line\n          this.interopAdaptor.invokeMethodAsync('updateServerFileData', this.filesData, this.isForm);\n        }\n\n        if (this.autoUpload) {\n          this.upload(this.filesData, true);\n        }\n      }\n\n      this.raiseActionComplete();\n      this.isFirstFileOnSelection = true;\n    }\n  };\n\n  Uploader.prototype.allowUpload = function () {\n    var allowFormUpload = false;\n\n    if (this.isForm && !isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '') {\n      allowFormUpload = true;\n    }\n\n    return allowFormUpload;\n  };\n\n  Uploader.prototype.isFormUpload = function () {\n    var isFormUpload = false;\n\n    if (this.isForm && (isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '') && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === '')) {\n      isFormUpload = true;\n    }\n\n    return isFormUpload;\n  };\n\n  Uploader.prototype.clearData = function (singleUpload) {\n    if (!isNullOrUndefined(this.listParent) && !(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n      detach(this.listParent);\n      this.listParent = null;\n    }\n\n    if (this.browserName !== 'msie' && !singleUpload) {\n      this.element.value = '';\n    }\n\n    this.fileList = [];\n    this.filesData = [];\n\n    if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n      // tslint:disable-next-line\n      this.interopAdaptor.invokeMethodAsync('clearAll');\n    } else {\n      this.removeActionButtons();\n    }\n  };\n\n  Uploader.prototype.updateSortedFileList = function (filesData) {\n    var previousListClone = this.createElement('div', {\n      id: 'clonewrapper'\n    });\n    var added = -1;\n    var removedList;\n\n    if (this.listParent) {\n      for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n        var liElement = this.listParent.querySelectorAll('li')[i];\n        previousListClone.appendChild(liElement.cloneNode(true));\n      }\n\n      removedList = this.listParent.querySelectorAll('li');\n\n      for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n        var item = removedList_1[_i];\n        detach(item);\n      }\n\n      this.removeActionButtons();\n      var oldList = [].slice.call(previousListClone.childNodes);\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createParentUL();\n\n      for (var index = 0; index < filesData.length; index++) {\n        for (var j = 0; j < this.filesData.length; j++) {\n          if (this.filesData[j].name === filesData[index].name) {\n            this.listParent.appendChild(oldList[j]);\n            EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n            this.fileList.push(oldList[j]);\n            added = index;\n          }\n        }\n\n        if (added !== index) {\n          this.createFileList([filesData[index]]);\n        }\n      }\n    } else {\n      this.createFileList(filesData);\n    }\n  };\n\n  Uploader.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n\n  Uploader.prototype.checkExtension = function (files) {\n    var dropFiles = files;\n\n    if (!this.isBlank(this.allowedExtensions)) {\n      var allowedExtensions = [];\n      var extensions = this.allowedExtensions.split(',');\n\n      for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var extension = extensions_1[_i];\n        allowedExtensions.push(extension.trim().toLocaleLowerCase());\n      }\n\n      for (var i = 0; i < files.length; i++) {\n        if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n          files[i].status = this.localizedTexts('invalidFileType');\n          files[i].statusCode = '0';\n        }\n      }\n    }\n\n    return dropFiles;\n  };\n\n  Uploader.prototype.validatedFileSize = function (fileSize) {\n    var minSizeError = '';\n    var maxSizeError = '';\n\n    if (fileSize < this.minFileSize) {\n      minSizeError = this.localizedTexts('invalidMinFileSize');\n    } else if (fileSize > this.maxFileSize) {\n      maxSizeError = this.localizedTexts('invalidMaxFileSize');\n    } else {\n      minSizeError = '';\n      maxSizeError = '';\n    }\n\n    var errorMessage = {\n      minSize: minSizeError,\n      maxSize: maxSizeError\n    };\n    return errorMessage;\n  };\n\n  Uploader.prototype.isPreLoadFile = function (fileData) {\n    var isPreload = false;\n\n    for (var i = 0; i < this.files.length; i++) {\n      if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n        isPreload = true;\n      }\n    }\n\n    return isPreload;\n  };\n\n  Uploader.prototype.createCustomfileList = function (fileData) {\n    this.createParentUL();\n    resetBlazorTemplate(this.element.id + 'Template', 'Template');\n\n    for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n      var listItem = fileData_1[_i];\n      var liElement = this.createElement('li', {\n        className: FILE,\n        attrs: {\n          'data-file-name': listItem.name\n        }\n      });\n      this.uploadTemplateFn = this.templateComplier(this.template);\n      var fromElements = [].slice.call(this.uploadTemplateFn(listItem, null, null, this.element.id + 'Template', this.isStringTemplate));\n      var index = fileData.indexOf(listItem);\n      append(fromElements, liElement);\n      var eventArgs = {\n        element: liElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      var eventsArgs = {\n        element: liElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      this.trigger('rendering', eventArgs);\n      this.trigger('fileListRendering', eventsArgs);\n      this.listParent.appendChild(liElement);\n      this.fileList.push(liElement);\n    }\n\n    updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n  };\n\n  Uploader.prototype.createParentUL = function () {\n    if (isNullOrUndefined(this.listParent)) {\n      this.listParent = this.createElement('ul', {\n        className: LIST_PARENT\n      });\n      this.uploadWrapper.appendChild(this.listParent);\n    }\n  };\n\n  Uploader.prototype.formFileList = function (fileData, files) {\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    var fileContainer = this.createElement('span', {\n      className: TEXT_CONTAINER\n    });\n    var statusMessage;\n\n    for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n      var listItem = fileData_2[_i];\n      var fileNameEle = this.createElement('span', {\n        className: FILE_NAME\n      });\n      fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n      var fileTypeEle = this.createElement('span', {\n        className: FILE_TYPE\n      });\n      fileTypeEle.innerHTML = '.' + this.getFileType(listItem.name);\n\n      if (!this.enableRtl) {\n        fileContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(fileTypeEle);\n      } else {\n        var rtlContainer = this.createElement('span', {\n          className: RTL_CONTAINER\n        });\n        rtlContainer.appendChild(fileTypeEle);\n        rtlContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(rtlContainer);\n      }\n\n      this.truncateName(fileNameEle);\n      statusMessage = this.formValidateFileInfo(listItem, fileList);\n    }\n\n    fileList.appendChild(fileContainer);\n    this.setListToFileInfo(fileData, fileList);\n    var index = this.listParent.querySelectorAll('li').length;\n    var infoEle = this.createElement('span');\n\n    if (fileList.classList.contains(INVALID_FILE)) {\n      infoEle.classList.add(STATUS);\n      infoEle.classList.add(INVALID_FILE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n      this.createFormInput(fileData);\n    }\n\n    fileContainer.appendChild(infoEle);\n\n    if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n      var iconElement = this.createElement('span', {\n        className: 'e-icons',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      /* istanbul ignore next */\n\n      if (this.browserName === 'msie') {\n        iconElement.classList.add('e-msie');\n      }\n\n      iconElement.setAttribute('title', this.localizedTexts('remove'));\n      fileList.appendChild(fileContainer);\n      fileList.appendChild(iconElement);\n      EventHandler.add(iconElement, 'click', this.removeFiles, this);\n      iconElement.classList.add(REMOVE_ICON);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n  };\n\n  Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n    var statusMessage = listItem.status;\n    var validationMessages = this.validatedFileSize(listItem.size);\n\n    if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n      this.addInvalidClass(fileList);\n      statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n    }\n\n    var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n    if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n      this.addInvalidClass(fileList);\n      statusMessage = typeValidationMessage;\n    }\n\n    return statusMessage;\n  };\n\n  Uploader.prototype.addInvalidClass = function (fileList) {\n    fileList.classList.add(INVALID_FILE);\n  };\n\n  Uploader.prototype.createFormInput = function (fileData) {\n    var inputElement = this.element.cloneNode(true);\n    inputElement.classList.add(HIDDEN_INPUT);\n\n    for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n      var listItem = fileData_3[_i];\n      listItem.input = inputElement;\n    }\n\n    inputElement.setAttribute('name', this.uploaderName);\n    this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n\n    if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n      this.element.value = '';\n    }\n  };\n\n  Uploader.prototype.getFileSize = function (fileData) {\n    var fileSize = 0;\n\n    for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n      var file = fileData_4[_i];\n      fileSize += file.size;\n    }\n\n    return fileSize;\n  };\n\n  Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n    var result = {\n      name: '',\n      rawFile: '',\n      size: 0,\n      status: '',\n      type: '',\n      validationMessages: {\n        minSize: '',\n        maxSize: ''\n      },\n      statusCode: '1',\n      list: fileList\n    };\n    var fileNames = [];\n    var type = '';\n\n    for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n      var listItem = fileData_5[_i];\n      fileNames.push(listItem.name);\n      type = listItem.type;\n    }\n\n    result.name = fileNames.join(', ');\n    result.size = this.getFileSize(fileData);\n    result.type = type;\n    result.status = this.statusForFormUpload(fileData, fileList);\n    return result;\n  };\n\n  Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n    var isValid = true;\n    var statusMessage;\n\n    for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n      var listItem = fileData_6[_i];\n      statusMessage = listItem.status;\n      var validationMessages = this.validatedFileSize(listItem.size);\n\n      if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n        isValid = false;\n        statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n      }\n\n      var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n      if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n        isValid = false;\n        statusMessage = typeValidationMessage;\n      }\n    }\n\n    if (!isValid) {\n      fileList.classList.add(INVALID_FILE);\n      statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData));\n    }\n\n    return statusMessage;\n  };\n\n  Uploader.prototype.formCustomFileList = function (fileData, files) {\n    this.createParentUL();\n    resetBlazorTemplate(this.element.id + 'Template', 'Template');\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    this.setListToFileInfo(fileData, fileList);\n    var result = this.mergeFileInfo(fileData, fileList);\n    fileList.setAttribute('data-file-name', result.name);\n    this.uploadTemplateFn = this.templateComplier(this.template);\n    var fromElements = [].slice.call(this.uploadTemplateFn(result, null, null, this.element.id + 'Template', this.isStringTemplate));\n    var index = this.listParent.querySelectorAll('li').length;\n    append(fromElements, fileList);\n\n    if (!fileList.classList.contains(INVALID_FILE)) {\n      this.createFormInput(fileData);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n    updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n  };\n  /**\n   * Create the file list for specified files data.\n   * @param { FileInfo[] } fileData - specifies the files data for file list creation.\n   * @returns void\n   */\n\n\n  Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\n    if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n      var fileListData = isSelectedFile ? this.filesData = this.filesData.concat(fileData) : fileData; // tslint:disable-next-line\n\n      this.interopAdaptor.invokeMethodAsync('createFileList', fileListData, this.isForm);\n    } else {\n      this.createParentUL();\n\n      if (this.template !== '' && !isNullOrUndefined(this.template)) {\n        if (this.isFormUpload()) {\n          this.uploadWrapper.classList.add(FORM_UPLOAD);\n          this.formCustomFileList(fileData, this.element.files);\n        } else {\n          this.createCustomfileList(fileData);\n        }\n      } else if (this.isFormUpload()) {\n        this.uploadWrapper.classList.add(FORM_UPLOAD);\n        this.formFileList(fileData, this.element.files);\n      } else {\n        for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n          var listItem = fileData_7[_i];\n          var liElement = this.createElement('li', {\n            className: FILE,\n            attrs: {\n              'data-file-name': listItem.name,\n              'data-files-count': '1'\n            }\n          });\n          var textContainer = this.createElement('span', {\n            className: TEXT_CONTAINER\n          });\n          var textElement = this.createElement('span', {\n            className: FILE_NAME,\n            attrs: {\n              'title': listItem.name\n            }\n          });\n          textElement.innerHTML = this.getFileNameOnly(listItem.name);\n          var fileExtension = this.createElement('span', {\n            className: FILE_TYPE\n          });\n          fileExtension.innerHTML = '.' + this.getFileType(listItem.name);\n\n          if (!this.enableRtl) {\n            textContainer.appendChild(textElement);\n            textContainer.appendChild(fileExtension);\n          } else {\n            var rtlContainer = this.createElement('span', {\n              className: RTL_CONTAINER\n            });\n            rtlContainer.appendChild(fileExtension);\n            rtlContainer.appendChild(textElement);\n            textContainer.appendChild(rtlContainer);\n          }\n\n          var fileSize = this.createElement('span', {\n            className: FILE_SIZE\n          });\n          fileSize.innerHTML = this.bytesToSize(listItem.size);\n          textContainer.appendChild(fileSize);\n          var statusElement = this.createElement('span', {\n            className: STATUS\n          });\n          textContainer.appendChild(statusElement);\n          statusElement.innerHTML = listItem.status;\n          liElement.appendChild(textContainer);\n          var iconElement = this.createElement('span', {\n            className: ' e-icons',\n            attrs: {\n              'tabindex': this.btnTabIndex\n            }\n          });\n          /* istanbul ignore next */\n\n          if (this.browserName === 'msie') {\n            iconElement.classList.add('e-msie');\n          }\n\n          iconElement.setAttribute('title', this.localizedTexts('remove'));\n          liElement.appendChild(iconElement);\n          EventHandler.add(iconElement, 'click', this.removeFiles, this);\n\n          if (listItem.statusCode === '2') {\n            statusElement.classList.add(UPLOAD_SUCCESS);\n            iconElement.classList.add(DELETE_ICON);\n            iconElement.setAttribute('title', this.localizedTexts('delete'));\n          } else if (listItem.statusCode !== '1') {\n            statusElement.classList.remove(UPLOAD_SUCCESS);\n            statusElement.classList.add(VALIDATION_FAILS);\n          }\n\n          if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n            statusElement.innerHTML = '';\n          }\n\n          if (!iconElement.classList.contains(DELETE_ICON)) {\n            iconElement.classList.add(REMOVE_ICON);\n          }\n\n          var index = fileData.indexOf(listItem);\n          var eventArgs = {\n            element: liElement,\n            fileInfo: listItem,\n            index: index,\n            isPreload: this.isPreLoadFile(listItem)\n          };\n          var eventsArgs = {\n            element: liElement,\n            fileInfo: listItem,\n            index: index,\n            isPreload: this.isPreLoadFile(listItem)\n          };\n          this.trigger('rendering', eventArgs);\n          this.trigger('fileListRendering', eventsArgs);\n          this.listParent.appendChild(liElement);\n          this.fileList.push(liElement);\n          this.truncateName(textElement);\n          var preventActionComplete = this.flag;\n\n          if (this.isPreLoadFile(listItem)) {\n            this.flag = false;\n            this.checkActionComplete(true);\n            this.flag = preventActionComplete;\n          }\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.getSlicedName = function (nameElement) {\n    var text;\n    text = nameElement.textContent;\n    nameElement.dataset.tail = text.slice(text.length - 10);\n  };\n\n  Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n    for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n      var listItem = fileData_8[_i];\n      listItem.list = fileList;\n    }\n  };\n\n  Uploader.prototype.truncateName = function (name) {\n    var nameElement = name;\n\n    if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n      /* istanbul ignore next */\n    } else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n    }\n  };\n\n  Uploader.prototype.getFileType = function (name) {\n    var extension;\n    var index = name.lastIndexOf('.');\n\n    if (index >= 0) {\n      extension = name.substring(index + 1);\n    }\n\n    return extension ? extension : '';\n  };\n\n  Uploader.prototype.getFileNameOnly = function (name) {\n    var type = this.getFileType(name);\n    var names = name.split('.' + type);\n    return type = names[0];\n  };\n\n  Uploader.prototype.setInitialAttributes = function () {\n    if (this.initialAttr.accept) {\n      this.element.setAttribute('accept', this.initialAttr.accept);\n    }\n\n    if (this.initialAttr.disabled) {\n      this.element.setAttribute('disabled', 'disabled');\n    }\n\n    if (this.initialAttr.multiple) {\n      var newAttr = document.createAttribute('multiple');\n      this.element.setAttributeNode(newAttr);\n    }\n  };\n\n  Uploader.prototype.filterfileList = function (files) {\n    var filterFiles = [];\n    var li;\n\n    for (var i = 0; i < files.length; i++) {\n      li = this.getLiElement(files[i]);\n\n      if (!li.classList.contains(UPLOAD_SUCCESS)) {\n        filterFiles.push(files[i]);\n      }\n    }\n\n    return filterFiles;\n  };\n\n  Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n    if (updateLiStatus === void 0) {\n      updateLiStatus = true;\n    }\n\n    if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n      if (this.isBlazorSaveUrl) {\n        for (var i = 0; i < this.filesData.length; i++) {\n          if (this.filesData[i].name === files.name) {\n            this.filesData[i].status = status;\n            this.filesData[i].statusCode = statusCode;\n          }\n        }\n      } else {\n        files.status = status;\n        files.statusCode = statusCode;\n      }\n    }\n\n    if (updateLiStatus) {\n      var li = this.getLiElement(files);\n\n      if (!isNullOrUndefined(li)) {\n        if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !(status === '' || isNullOrUndefined(status))) {\n          li.querySelector('.' + STATUS).textContent = status;\n        }\n      }\n    }\n\n    return files;\n  };\n\n  Uploader.prototype.getLiElement = function (files) {\n    var index;\n\n    for (var i = 0; i < this.filesData.length; i++) {\n      if (this.filesData[i].name === files.name) {\n        index = i;\n      }\n    }\n\n    return this.fileList[index];\n  };\n\n  Uploader.prototype.createProgressBar = function (liElement) {\n    var progressbarWrapper = this.createElement('span', {\n      className: PROGRESS_WRAPPER\n    });\n    var progressBar = this.createElement('progressbar', {\n      className: PROGRESSBAR,\n      attrs: {\n        value: '0',\n        max: '100'\n      }\n    });\n    var progressbarInnerWrapper = this.createElement('span', {\n      className: PROGRESS_INNER_WRAPPER\n    });\n    progressBar.setAttribute('style', 'width: 0%');\n    var progressbarText = this.createElement('span', {\n      className: PROGRESSBAR_TEXT\n    });\n    progressbarText.textContent = '0%';\n    progressbarInnerWrapper.appendChild(progressBar);\n    progressbarWrapper.appendChild(progressbarInnerWrapper);\n    progressbarWrapper.appendChild(progressbarText);\n    liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateProgressbar = function (e, li) {\n    if (!isNaN(Math.round(e.loaded / e.total * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n      if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n        var value = Math.round(e.loaded / e.total * 100) % parseInt(this.progressInterval, 10);\n\n        if (value === 0 || value === 100) {\n          this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n        }\n      } else {\n        this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n      }\n    }\n  };\n\n  Uploader.prototype.changeProgressValue = function (li, progressValue) {\n    li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n    li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n  };\n\n  Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n    var li = this.getLiElement(files);\n\n    if (isNullOrUndefined(li) && !customUI) {\n      return;\n    }\n\n    if (!isNullOrUndefined(li)) {\n      /* istanbul ignore next */\n      if (files.statusCode === '5') {\n        this.cancelUploadingFile(files, e, request, li);\n      }\n\n      if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n        this.createProgressBar(li);\n        this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n\n      this.updateProgressbar(e, li);\n      var iconEle = li.querySelector('.' + REMOVE_ICON);\n\n      if (!isNullOrUndefined(iconEle)) {\n        iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n        iconEle.setAttribute('title', this.localizedTexts('abort'));\n        iconEle.classList.remove(REMOVE_ICON);\n      }\n    } else {\n      this.cancelUploadingFile(files, e, request);\n    }\n\n    var args = {\n      e: e,\n      operation: 'upload',\n      file: this.updateStatus(files, this.localizedTexts('inProgress'), '3')\n    };\n    this.trigger('progress', args);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n    var _this = this;\n\n    if (files.statusCode === '5') {\n      var eventArgs = {\n        event: e,\n        fileData: files,\n        cancel: false\n      };\n      this.trigger('canceling', eventArgs, function (eventArgs) {\n        if (eventArgs.cancel) {\n          files.statusCode = '3';\n\n          if (!isNullOrUndefined(li)) {\n            var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(li.querySelector('.e-spinner-pane'));\n            }\n          }\n        } else {\n          request.emitError = false;\n          request.httpRequest.abort();\n          var formData = new FormData();\n\n          if (files.statusCode === '5') {\n            var name_2 = _this.element.getAttribute('name');\n\n            formData.append(name_2, files.name);\n            formData.append('cancel-uploading', files.name);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removecanceledFile(e, files);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        }\n      });\n    }\n  };\n\n  Uploader.prototype.removecanceledFile = function (e, file) {\n    var liElement = this.getLiElement(file);\n\n    if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n      return;\n    }\n\n    this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n    this.renderFailureState(e, file, liElement);\n    var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n\n    if (!isNullOrUndefined(liElement)) {\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      event: e,\n      response: requestResponse,\n      operation: 'cancel',\n      file: file\n    };\n    this.trigger('success', args);\n  };\n\n  Uploader.prototype.renderFailureState = function (e, file, liElement) {\n    var _this = this;\n\n    this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    this.removeProgressbar(liElement, 'failure');\n\n    if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n      liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n    }\n\n    var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n\n    if (isNullOrUndefined(deleteIcon)) {\n      return;\n    }\n\n    deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n    deleteIcon.classList.add(REMOVE_ICON);\n    deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n    /* istanbul ignore next */\n\n    retryElement.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement, false);\n    }, false);\n  };\n\n  Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n    file.statusCode = '1';\n    file.status = this.localizedTexts('readyToUploadMessage');\n\n    if (!custom) {\n      liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n\n      if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n        detach(liElement.querySelector('.' + RETRY_ICON));\n      }\n\n      this.pauseButton = null;\n    }\n    /* istanbul ignore next */\n\n\n    liElement.classList.add(RESTRICT_RETRY);\n    this.upload([file]);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.uploadComplete = function (e, file, customUI) {\n    var status = e.target;\n\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var li = this.getLiElement(file);\n\n      if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n        return;\n      }\n\n      if (!isNullOrUndefined(li)) {\n        this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n        this.removeProgressbar(li, 'success');\n        var iconEle = li.querySelector('.' + ABORT_ICON);\n\n        if (!isNullOrUndefined(iconEle)) {\n          iconEle.classList.add(DELETE_ICON);\n          iconEle.setAttribute('title', this.localizedTexts('delete'));\n          iconEle.classList.remove(ABORT_ICON);\n          iconEle.classList.remove(UPLOAD_INPROGRESS);\n        }\n      }\n\n      this.raiseSuccessEvent(e, file);\n    } else {\n      this.uploadFailed(e, file);\n    }\n  };\n\n  Uploader.prototype.getResponse = function (e) {\n    // tslint:disable-next-line\n    var target = e.currentTarget;\n    var response = {\n      readyState: target.readyState,\n      statusCode: target.status,\n      statusText: target.statusText,\n      headers: target.getAllResponseHeaders(),\n      withCredentials: target.withCredentials\n    };\n    return response;\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverRemoveIconBindEvent = function () {\n    if (this.uploadWrapper && this.isBlazorSaveUrl) {\n      var iconElement = [].slice.call(this.uploadWrapper.querySelectorAll('ul li'));\n\n      for (var i = 0; i < iconElement.length; i++) {\n        var removeIconEle = iconElement[i] ? iconElement[i].querySelector('.e-icons') : null;\n\n        if (removeIconEle) {\n          EventHandler.remove(removeIconEle, 'click', this.removeFiles);\n          EventHandler.add(removeIconEle, 'click', this.removeFiles, this);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.raiseSuccessEvent = function (e, file) {\n    var _this = this;\n\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadSuccessMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '2', false),\n      statusText: statusMessage\n    };\n\n    if (!this.isBlazorSaveUrl) {\n      var liElement = this.getLiElement(file);\n\n      if (!isNullOrUndefined(liElement)) {\n        var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n\n        if (!isNullOrUndefined(spinnerEle)) {\n          hideSpinner(liElement);\n          detach(spinnerEle);\n        }\n      }\n    }\n\n    this.trigger('success', args, function (args) {\n      // tslint:disable-next-line\n      _this.updateStatus(file, args.statusText, '2');\n\n      _this.uploadedFilesData.push(file);\n\n      if (!_this.isBlazorSaveUrl) {\n        _this.trigger('change', {\n          file: _this.uploadedFilesData\n        });\n      }\n\n      _this.checkActionButtonStatus();\n\n      if (_this.fileList.length > 0) {\n        if (!_this.getLiElement(file).classList.contains(RESTRICT_RETRY)) {\n          _this.uploadSequential();\n\n          _this.checkActionComplete(true);\n        } else {\n          /* istanbul ignore next */\n          _this.getLiElement(file).classList.remove(RESTRICT_RETRY);\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.uploadFailed = function (e, file) {\n    var _this = this;\n\n    var li = this.getLiElement(file);\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadFailedMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '0', false),\n      statusText: statusMessage\n    };\n\n    if (!isNullOrUndefined(li)) {\n      this.renderFailureState(e, file, li);\n    }\n\n    this.trigger('failure', args, function (args) {\n      // tslint:disable-next-line\n      _this.updateStatus(file, args.statusText, '0');\n\n      _this.checkActionButtonStatus();\n\n      _this.uploadSequential();\n\n      _this.checkActionComplete(true);\n    });\n  };\n\n  Uploader.prototype.uploadSequential = function () {\n    if (this.sequentialUpload) {\n      if (this.autoUpload) {\n        /* istanbul ignore next */\n        this.checkAutoUpload(this.filesData);\n      } else {\n        this.uploadButtonClick();\n      }\n    }\n  };\n\n  Uploader.prototype.checkActionComplete = function (increment) {\n    increment ? ++this.actionCompleteCount : --this.actionCompleteCount;\n    this.raiseActionComplete();\n  };\n\n  Uploader.prototype.raiseActionComplete = function () {\n    if (this.filesData.length === this.actionCompleteCount && this.flag) {\n      this.flag = false;\n      var eventArgs = {\n        fileData: []\n      };\n      eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n      this.trigger('actionComplete', eventArgs);\n    }\n  };\n\n  Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n    var matchFiles = [];\n    var matchFilesIndex = 0;\n\n    for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n      var selectedFileData = selectedFiles[selectFileIndex];\n\n      for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n        if (this.filesData[fileDataIndex].name === selectedFileData.name) {\n          matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n          ++matchFilesIndex;\n        }\n      }\n    }\n\n    return matchFiles;\n  };\n\n  Uploader.prototype.updateProgressBarClasses = function (li, className) {\n    var progressBar = li.querySelector('.' + PROGRESSBAR);\n\n    if (!isNullOrUndefined(progressBar)) {\n      progressBar.classList.add(className);\n    }\n  };\n\n  Uploader.prototype.removeProgressbar = function (li, callType) {\n    var _this = this;\n\n    if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n      this.progressAnimation = new Animation({\n        duration: 1250\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), {\n        name: 'FadeOut'\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), {\n        name: 'FadeOut'\n      });\n      setTimeout(function () {\n        _this.animateProgressBar(li, callType);\n      }, 750);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.animateProgressBar = function (li, callType) {\n    if (callType === 'success') {\n      li.classList.add(UPLOAD_SUCCESS);\n\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n      }\n    } else {\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n    }\n\n    if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n      detach(li.querySelector('.' + PROGRESS_WRAPPER));\n    }\n  };\n\n  Uploader.prototype.setExtensions = function (extensions) {\n    if (extensions !== '' && !isNullOrUndefined(extensions)) {\n      this.element.setAttribute('accept', extensions);\n    } else {\n      this.element.removeAttribute('accept');\n    }\n  };\n\n  Uploader.prototype.templateComplier = function (uploadTemplate) {\n    if (uploadTemplate) {\n      var exception = void 0;\n\n      try {\n        if (document.querySelectorAll(uploadTemplate).length) {\n          return compile(document.querySelector(uploadTemplate).innerHTML.trim());\n        }\n      } catch (exception) {\n        return compile(uploadTemplate);\n      }\n    }\n\n    return undefined;\n  };\n\n  Uploader.prototype.setRTL = function () {\n    this.enableRtl ? addClass([this.uploadWrapper], RTL) : removeClass([this.uploadWrapper], RTL);\n  };\n\n  Uploader.prototype.localizedTexts = function (localeText) {\n    this.l10n.setLocale(this.locale);\n    return this.l10n.getConstant(localeText);\n  };\n\n  Uploader.prototype.setControlStatus = function () {\n    if (!this.enabled) {\n      this.uploadWrapper.classList.add(DISABLED);\n      this.element.setAttribute('disabled', 'disabled');\n      this.browseButton.setAttribute('disabled', 'disabled');\n\n      if (!isNullOrUndefined(this.clearButton)) {\n        this.clearButton.setAttribute('disabled', 'disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton)) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      }\n    } else {\n      if (this.uploadWrapper.classList.contains(DISABLED)) {\n        this.uploadWrapper.classList.remove(DISABLED);\n      }\n\n      if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n        this.element.removeAttribute('disabled');\n        this.browseButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n        this.clearButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n        this.uploadButton.hasAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n    var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['accept', 'multiple', 'disabled'];\n\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var prop = attributes_1[_i];\n\n      if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n        switch (prop) {\n          case 'accept':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['allowedExtensions'] === undefined || isDynamic) {\n              this.setProperties({\n                allowedExtensions: this.element.getAttribute('accept')\n              }, !isDynamic);\n              this.initialAttr.accept = this.allowedExtensions;\n            }\n\n            break;\n\n          case 'multiple':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['multiple'] === undefined || isDynamic) {\n              var isMutiple = this.element.getAttribute(prop) === 'multiple' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n              this.setProperties({\n                multiple: isMutiple\n              }, !isDynamic);\n              this.initialAttr.multiple = true;\n            }\n\n            break;\n\n          case 'disabled':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['enabled'] === undefined || isDynamic) {\n              var isDisabled = this.element.getAttribute(prop) === 'disabled' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n              this.setProperties({\n                enabled: isDisabled\n              }, !isDynamic);\n              this.initialAttr.disabled = true;\n            }\n\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n    var start = 0;\n    var end = Math.min(this.asyncSettings.chunkSize, file.size);\n    var index = 0;\n    var blob = file.rawFile.slice(start, end);\n    var metaData = {\n      chunkIndex: index,\n      blob: blob,\n      file: file,\n      start: start,\n      end: end,\n      retryCount: 0,\n      request: null\n    };\n    this.sendRequest(file, metaData, custom, fileIndex);\n  };\n\n  Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n    var _this = this;\n\n    var formData = new FormData();\n    var cloneFile;\n    var blob = file.rawFile.slice(metaData.start, metaData.end);\n    formData.append('chunkFile', blob, file.name);\n    formData.append(this.uploaderName, blob, file.name);\n    formData.append('chunk-index', metaData.chunkIndex.toString());\n    formData.append('chunkIndex', metaData.chunkIndex.toString());\n    var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n    formData.append('total-chunk', totalChunk.toString());\n    formData.append('totalChunk', totalChunk.toString());\n    var ajax = new Ajax({\n      url: this.asyncSettings.saveUrl,\n      type: 'POST',\n      async: true,\n      contentType: null\n    });\n    ajax.emitError = false;\n\n    ajax.onLoad = function (e) {\n      _this.chunkUploadComplete(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.onUploadProgress = function (e) {\n      _this.chunkUploadInProgress(e, metaData, custom);\n\n      return {};\n    };\n\n    var eventArgs = {\n      fileData: file,\n      customFormData: [],\n      cancel: false,\n      chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n    };\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      eventArgs.currentChunkIndex = metaData.chunkIndex;\n      /* istanbul ignore next */\n\n      if (isBlazor()) {\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      if (eventArgs.currentChunkIndex === 0) {\n        // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n        _this.trigger('uploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      } else {\n        _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      }\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.chunkUploadFailed(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n    metaData.request = ajax;\n  };\n\n  Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n    if (eventArgs.cancel) {\n      this.eventCancelByArgs(e, eventArgs, file);\n    } else {\n      this.updateFormData(formData, eventArgs.customFormData);\n    }\n  };\n\n  Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n    var _this = this;\n\n    e.cancel = true;\n\n    if (eventArgs.fileData.statusCode === '5') {\n      return;\n    }\n\n    var liElement = this.getLiElement(eventArgs.fileData);\n    liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n    liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n    eventArgs.fileData.statusCode = '5';\n    eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n    removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    /* istanbul ignore next */\n\n    this.pauseButton.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement);\n    }, false);\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.checkChunkUpload = function () {\n    return this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize) ? false : true;\n  };\n\n  Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n    var _this = this;\n\n    var response = e.target;\n    var liElement;\n\n    if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n      var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n      var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n      var eventArgs = {\n        event: e,\n        file: metaData.file,\n        chunkIndex: metaData.chunkIndex,\n        totalChunk: totalChunk,\n        chunkSize: this.asyncSettings.chunkSize,\n        response: requestResponse\n      };\n      this.trigger('chunkSuccess', eventArgs);\n\n      if (isNullOrUndefined(custom) || !custom) {\n        liElement = this.getLiElement(metaData.file);\n      }\n\n      this.updateMetaData(metaData);\n\n      if (metaData.end === metaData.file.size) {\n        metaData.file.statusCode = '3';\n      }\n\n      if (metaData.file.statusCode === '5') {\n        var eventArgs_1 = {\n          event: e,\n          fileData: metaData.file,\n          cancel: false\n        };\n        this.trigger('canceling', eventArgs_1, function (eventArgs) {\n          /* istanbul ignore next */\n          if (eventArgs.cancel) {\n            metaData.file.statusCode = '3';\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(liElement.querySelector('.e-spinner-pane'));\n            }\n\n            _this.sendNextRequest(metaData);\n          } else {\n            metaData.request.emitError = false;\n            response.abort();\n            var formData = new FormData();\n\n            var name_3 = _this.element.getAttribute('name');\n\n            formData.append(name_3, metaData.file.name);\n            formData.append('cancel-uploading', metaData.file.name);\n            formData.append('cancelUploading', metaData.file.name);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removeChunkFile(e, metaData, custom);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        });\n      } else {\n        if (totalChunk - 1 === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n          var index = this.pausedData.indexOf(metaData);\n\n          if (index >= 0) {\n            this.pausedData.splice(index, 1);\n          }\n\n          if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            if (liElement) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            this.removeChunkProgressBar(metaData);\n          }\n\n          this.raiseSuccessEvent(e, metaData.file);\n          return;\n        }\n\n        this.sendNextRequest(metaData);\n      }\n    } else {\n      this.chunkUploadFailed(e, metaData);\n    }\n  };\n\n  Uploader.prototype.sendNextRequest = function (metaData) {\n    metaData.start = metaData.end;\n    metaData.end += this.asyncSettings.chunkSize;\n    metaData.end = Math.min(metaData.end, metaData.file.size);\n    metaData.chunkIndex += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n    if (isNullOrUndefined(this.template) && isNullOrUndefined(custom) && !custom) {\n      var liElement = this.getLiElement(metaData.file);\n      var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n      var spinnerTarget = deleteIcon;\n      this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n      this.removeProgressbar(liElement, 'failure');\n      deleteIcon.classList.remove(ABORT_ICON);\n      deleteIcon.classList.add(REMOVE_ICON);\n      deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n      var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n      pauseIcon.classList.add(RETRY_ICON);\n      pauseIcon.classList.remove(PAUSE_UPLOAD);\n      pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n\n      if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)) {\n        hideSpinner(spinnerTarget);\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n  };\n\n  Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n    metaData.file.statusCode = '4';\n    metaData.file.status = this.localizedTexts('pause');\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.abortUpload(metaData, custom, eventArgs);\n  };\n\n  Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n    metaData.request.emitError = false;\n    metaData.request.httpRequest.abort();\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n      targetElement.classList.remove(PAUSE_UPLOAD);\n      targetElement.classList.add(RESUME_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('resume'));\n      targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n    }\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].file.name === metaData.file.name) {\n        this.pausedData.splice(i, 1);\n      }\n    }\n\n    this.pausedData.push(metaData);\n    this.trigger('pausing', eventArgs);\n  };\n\n  Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n    var liElement = this.getLiElement(metaData.file);\n    var targetElement;\n\n    if (!isNullOrUndefined(liElement)) {\n      targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n    }\n\n    if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n      targetElement.classList.remove(RESUME_UPLOAD);\n      targetElement.classList.add(PAUSE_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('pause'));\n      targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.add(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n    }\n\n    metaData.file.status = this.localizedTexts('inProgress');\n    metaData.file.statusCode = '3';\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.trigger('resuming', eventArgs);\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].end === this.pausedData[i].file.size) {\n        this.chunkUploadComplete(e, metaData, custom);\n      } else {\n        if (this.pausedData[i].file.name === metaData.file.name) {\n          this.pausedData[i].start = this.pausedData[i].end;\n          this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n          this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n          this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n          this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateMetaData = function (metaData) {\n    if (this.uploadMetaData.indexOf(metaData) === -1) {\n      this.uploadMetaData.push(metaData);\n    } else {\n      this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n      this.uploadMetaData.push(metaData);\n    }\n  };\n\n  Uploader.prototype.removeChunkProgressBar = function (metaData) {\n    var liElement = this.getLiElement(metaData.file);\n\n    if (!isNullOrUndefined(liElement)) {\n      this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n      this.removeProgressbar(liElement, 'success');\n      var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n\n      if (!isNullOrUndefined(cancelButton)) {\n        cancelButton.classList.add(DELETE_ICON);\n        cancelButton.setAttribute('title', this.localizedTexts('delete'));\n        cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n    var _this = this;\n\n    var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n    var liElement;\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      liElement = this.getLiElement(metaData.file);\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var eventArgs = {\n      event: e,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      totalChunk: chunkCount,\n      chunkSize: this.asyncSettings.chunkSize,\n      cancel: false,\n      response: requestResponse\n    };\n    this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n      // To prevent triggering of failure event\n      // tslint:disable-next-line\n      if (!eventArgs.cancel) {\n        if (metaData.retryCount < _this.asyncSettings.retryCount) {\n          setTimeout(function () {\n            _this.retryRequest(liElement, metaData, custom);\n          }, _this.asyncSettings.retryAfterDelay);\n        } else {\n          if (!isNullOrUndefined(liElement)) {\n            var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ? liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n\n            if (!isNullOrUndefined(pauseButton)) {\n              pauseButton.classList.add(RETRY_ICON);\n              pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n            }\n\n            _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n\n            _this.removeProgressbar(liElement, 'failure');\n\n            liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n            var iconElement = liElement.querySelector('.' + ABORT_ICON) ? liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n            iconElement.classList.remove(ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            if (metaData.start > 0) {\n              iconElement.classList.add(DELETE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('delete'));\n            } else {\n              iconElement.classList.add(REMOVE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('remove'));\n            }\n          }\n\n          metaData.retryCount = 0;\n          var file_1 = metaData.file;\n\n          var failureMessage = _this.localizedTexts('uploadFailedMessage');\n\n          var args = {\n            e: e,\n            response: requestResponse,\n            operation: 'upload',\n            file: _this.updateStatus(file_1, failureMessage, '0', false),\n            statusText: failureMessage\n          };\n\n          _this.trigger('failure', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file_1, args.statusText, '0');\n\n            _this.uploadSequential();\n\n            _this.checkActionComplete(true);\n          });\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    }\n\n    metaData.retryCount += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.checkPausePlayAction = function (e) {\n    var targetElement = e.target;\n    var selectedElement = e.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var fileData = this.filesData[index];\n    var metaData = this.getCurrentMetaData(fileData);\n\n    if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n      /* istanbul ignore next */\n      this.pauseUpload(metaData, e);\n    } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n      /* istanbul ignore next */\n      this.resumeUpload(metaData, e);\n    } else if (targetElement.classList.contains(RETRY_ICON)) {\n      if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n        this.retryUpload(metaData, false);\n      } else {\n        this.retryUpload(metaData, true);\n      }\n    }\n  };\n\n  Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n    if (fromcanceledStage) {\n      metaData.end = metaData.end + this.asyncSettings.chunkSize;\n      metaData.start = metaData.start + this.asyncSettings.chunkSize;\n      this.sendRequest(metaData.file, metaData);\n    } else {\n      metaData.file.statusCode = '1';\n      metaData.file.status = this.localizedTexts('readyToUploadMessage');\n      this.chunkUpload(metaData.file);\n    }\n    /* istanbul ignore next */\n\n\n    this.getLiElement(metaData.file).classList.add(RESTRICT_RETRY);\n  };\n\n  Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n    var _this = this;\n\n    if (metaData.file.statusCode === '4') {\n      return;\n    }\n\n    if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n      metaData.file.statusCode = '3';\n      metaData.file.status = this.localizedTexts('inProgress');\n    }\n\n    this.updateMetaData(metaData);\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(liElement)) {\n      return;\n    }\n\n    var target;\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n\n    if (!isNullOrUndefined(retryElement)) {\n      retryElement.classList.add(PAUSE_UPLOAD);\n      retryElement.setAttribute('title', this.localizedTexts('pause'));\n      retryElement.classList.remove(RETRY_ICON);\n    }\n\n    if (!isNullOrUndefined(liElement)) {\n      if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n        var statusElement = liElement.querySelector('.' + STATUS);\n\n        if (isNullOrUndefined(this.template)) {\n          statusElement.classList.add(UPLOAD_INPROGRESS);\n          statusElement.classList.remove(UPLOAD_FAILED);\n          this.createProgressBar(liElement);\n          this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n        }\n\n        var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) : liElement.querySelector('.' + DELETE_ICON);\n\n        if (!isNullOrUndefined(clearIcon)) {\n          clearIcon.classList.add(ABORT_ICON);\n          clearIcon.setAttribute('title', this.localizedTexts('abort'));\n          clearIcon.classList.remove(REMOVE_ICON);\n        }\n      }\n\n      if (!isNaN(Math.round(e.loaded / e.total * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n        var loadedSize = metaData.chunkIndex * this.asyncSettings.chunkSize;\n        var value = Math.min((loadedSize + e.loaded) / metaData.file.size * 100, 100);\n        this.changeProgressValue(liElement, Math.round(value).toString() + '%');\n      }\n\n      if (metaData.chunkIndex === 0) {\n        this.checkActionButtonStatus();\n      }\n    }\n\n    if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)) {\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-pause-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n\n      if (this.browserName === 'msie') {\n        this.pauseButton.classList.add('e-msie');\n      }\n\n      var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n      abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n      this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.checkPausePlayAction(e);\n      }, false);\n    }\n  };\n  /**\n   * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n   * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n   * @param { number } bytes - specifies the file size in bytes.\n   * @returns string\n   */\n\n\n  Uploader.prototype.bytesToSize = function (bytes) {\n    var i = -1;\n    var size;\n\n    if (!bytes) {\n      return '0.0 KB';\n    }\n\n    do {\n      bytes = bytes / 1024;\n      i++;\n    } while (bytes > 99);\n\n    if (i >= 2) {\n      bytes = bytes * 1024;\n      i = 1;\n    }\n\n    return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n  };\n  /**\n   * Allows you to sort the file data alphabetically based on its file name clearly.\n   * @param { FileList } filesData - specifies the files data for upload.\n   * @returns File[]\n   */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.sortFileList = function (filesData) {\n    filesData = filesData ? filesData : this.sortFilesList;\n    var files = filesData;\n    var fileNames = [];\n\n    for (var i = 0; i < files.length; i++) {\n      fileNames.push(files[i].name);\n    }\n\n    var sortedFileNames = fileNames.sort();\n    var sortedFilesData = [];\n    var index = 0;\n\n    for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n      var name_4 = sortedFileNames_1[_i];\n\n      for (var i = 0; i < files.length; i++) {\n        if (name_4 === files[i].name) {\n          sortedFilesData.push(files[i]);\n        }\n      }\n    }\n\n    return sortedFilesData;\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   * @method destroy\n   * @return {void}.\n   */\n\n\n  Uploader.prototype.destroy = function () {\n    this.element.value = null;\n\n    if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n      this.clearAll();\n    }\n\n    this.unWireEvents();\n    this.unBindDropEvents();\n\n    if (this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n\n    if (!this.enabled) {\n      this.element.removeAttribute('disabled');\n    }\n\n    this.element.removeAttribute('accept');\n    this.setInitialAttributes();\n    var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n\n    for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n      var key = attributes_2[_i];\n      this.element.removeAttribute(key);\n    }\n\n    if (!this.isServerBlazor) {\n      if (!isNullOrUndefined(this.uploadWrapper)) {\n        this.uploadWrapper.parentElement.appendChild(this.element);\n        detach(this.uploadWrapper);\n      }\n\n      this.uploadWrapper = null;\n\n      _super.prototype.destroy.call(this);\n    } else {\n      this.uploadWrapper = null;\n    }\n  };\n  /**\n   * Allows you to call the upload process manually by calling save URL action.\n   * To process the selected files (added in upload queue), pass an empty argument otherwise\n   * upload the specific file based on its argument.\n   * @param { FileInfo | FileInfo[] } files - specifies the files data for upload.\n   * @returns void\n   */\n\n\n  Uploader.prototype.upload = function (files, custom) {\n    var _this = this;\n\n    files = files ? files : this.filesData;\n\n    if (this.sequentialUpload && this.isFirstFileOnSelection) {\n      this.sequenceUpload(files);\n    } else {\n      var uploadFiles_1 = this.getFilesInArray(files);\n      var eventArgs = {\n        customFormData: [],\n        currentRequest: null,\n        cancel: false\n      };\n      this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n        if (!eventArgs.cancel) {\n          if (isBlazor()) {\n            _this.currentRequestHeader = eventArgs.currentRequest ? eventArgs.currentRequest : _this.currentRequestHeader;\n            _this.customFormDatas = eventArgs.customFormData && eventArgs.customFormData.length > 0 ? eventArgs.customFormData : _this.customFormDatas;\n          }\n\n          _this.uploadFiles(uploadFiles_1, custom);\n        }\n      });\n    }\n  };\n\n  Uploader.prototype.getFilesInArray = function (files) {\n    var uploadFiles = [];\n\n    if (files instanceof Array) {\n      uploadFiles = files;\n    } else {\n      uploadFiles.push(files);\n    }\n\n    return uploadFiles;\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var file = _this.fileStreams[fileIndex].rawFile;\n\n      try {\n        var reader = new FileReader(); // tslint:disable-next-line\n\n        reader.onload = function (args) {\n          return function () {\n            try {\n              var contents = args.result;\n              var data = contents ? contents.split(';base64,')[1] : null;\n              resolve(data);\n            } catch (e) {\n              reject(e);\n            }\n          };\n        }(reader);\n\n        reader.readAsDataURL(file.slice(position, position + totalCount));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.uploadFileCount = function (ele) {\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return -1;\n    }\n\n    var result = files.length;\n    return result;\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFileRead = function (index, ele) {\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return -1;\n    }\n\n    var file = files[index];\n    var fileCount = this.newFileRef++;\n    this.fileStreams[fileCount] = file;\n    return fileCount;\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFileInfo = function (index, ele) {\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return null;\n    }\n\n    var file = files[index];\n\n    if (!file) {\n      return null;\n    }\n\n    return this.filesData[index];\n  };\n\n  Uploader.prototype.uploadFiles = function (files, custom) {\n    var _this = this;\n\n    var selectedFiles = [];\n\n    if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n      if (this.isServerBlazor) {\n        // tslint:disable-next-line\n        this.interopAdaptor.invokeMethodAsync('GetFileDetails', files);\n      }\n\n      return;\n    }\n\n    if (!custom || isNullOrUndefined(custom)) {\n      if (!this.multiple) {\n        var file = [];\n        file.push(files[0]);\n        selectedFiles = this.filterfileList(file);\n      } else {\n        selectedFiles = this.filterfileList(files);\n      }\n    } else {\n      selectedFiles = files;\n    }\n\n    var _loop_5 = function (i) {\n      if (this_3.isServerBlazor && !this_3.checkChunkUpload()) {\n        /* istanbul ignore next */\n\n        /* tslint:disable */\n        if (selectedFiles[i] && selectedFiles[i].rawFile instanceof File) {\n          this_3.getBase64(selectedFiles[i].rawFile).then(function (data) {\n            _this.base64String.push(data);\n\n            _this.uploadFilesRequest(selectedFiles, i, custom);\n          });\n        }\n        /* tslint:disable */\n\n      } else {\n        this_3.uploadFilesRequest(selectedFiles, i, custom);\n      }\n    };\n\n    var this_3 = this;\n\n    for (var i = 0; i < selectedFiles.length; i++) {\n      _loop_5(i);\n    }\n  };\n\n  Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n    var _this = this;\n\n    var cloneFiles = [];\n    var chunkEnabled = this.checkChunkUpload();\n    var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var getFileData;\n    /* istanbul ignore next */\n\n    if (this.isServerBlazor) {\n      getFileData = selectedFiles.slice(0);\n      cloneFiles.push(getFileData[i].rawFile);\n    }\n\n    var eventArgs = {\n      fileData: this.isServerBlazor ? getFileData[i] : selectedFiles[i],\n      customFormData: [],\n      cancel: false\n    };\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      /* istanbul ignore next */\n\n      if (isBlazor()) {\n        eventArgs.fileData.rawFile = !chunkEnabled ? _this.base64String[i] : eventArgs.fileData.rawFile;\n\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      _this.trigger('uploading', eventArgs, function (eventArgs) {\n        /* istanbul ignore next */\n        if (_this.isServerBlazor && !chunkEnabled) {\n          selectedFiles[i].rawFile = eventArgs.fileData.rawFile = cloneFiles[i];\n        }\n\n        if (eventArgs.cancel) {\n          _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n        }\n\n        _this.updateFormData(formData, eventArgs.customFormData);\n      });\n    };\n\n    if (selectedFiles[i].statusCode === '1') {\n      var name_5 = this.element.getAttribute('name');\n      formData.append(name_5, selectedFiles[i].rawFile, selectedFiles[i].name);\n\n      if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n        this.chunkUpload(selectedFiles[i], custom, i);\n      } else {\n        ajax.onLoad = function (e) {\n          if (eventArgs.cancel && _this.isServerBlazor) {\n            return {};\n          } else {\n            _this.uploadComplete(e, selectedFiles[i], custom);\n\n            return {};\n          }\n        };\n\n        ajax.onUploadProgress = function (e) {\n          if (eventArgs.cancel && _this.isServerBlazor) {\n            return {};\n          } else {\n            _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n\n            return {};\n          }\n        };\n        /* istanbul ignore next */\n\n\n        ajax.onError = function (e) {\n          _this.uploadFailed(e, selectedFiles[i]);\n\n          return {};\n        };\n\n        ajax.send(formData);\n      }\n    }\n  };\n\n  Uploader.prototype.spliceFiles = function (liIndex) {\n    var liElement = this.fileList[liIndex];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < liIndex; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    var endIndex = startIndex + nameElements - 1;\n\n    for (var j = endIndex; j >= startIndex; j--) {\n      allFiles.splice(j, 1);\n    }\n  };\n  /**\n   * Remove the uploaded file from server manually by calling the remove URL action.\n   * If you pass an empty argument to this method, the complete file list can be cleared,\n   * otherwise remove the specific file based on its argument (“file_data”).\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n   * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n   * @param { boolean } removeDirectly - Set true if files remove without removing event.\n   * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n   * @returns void\n   */\n\n\n  Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n    var _this = this;\n\n    if (isNullOrUndefined(postRawFile)) {\n      postRawFile = true;\n    }\n\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      customFormData: [],\n      postRawFile: postRawFile,\n      currentRequest: null\n    };\n    var beforeEventArgs = {\n      cancel: false,\n      customFormData: [],\n      currentRequest: null\n    };\n    this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n      if (!beforeEventArgs.cancel) {\n        if (isBlazor()) {\n          _this.currentRequestHeader = beforeEventArgs.currentRequest;\n          _this.customFormDatas = beforeEventArgs.customFormData;\n        }\n\n        var index = void 0;\n\n        if (_this.isFormUpload() && !_this.isBlazorSaveUrl) {\n          eventArgs.filesData = fileData;\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              var removingFiles = _this.getFilesInArray(fileData);\n\n              var isLiRemoved = false;\n              var liIndex = void 0;\n\n              for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                var data = removingFiles_1[_i];\n\n                if (!isLiRemoved) {\n                  liIndex = _this.fileList.indexOf(data.list);\n                }\n\n                if (liIndex > -1) {\n                  var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n\n                  if (inputElement) {\n                    detach(inputElement);\n                  }\n\n                  _this.spliceFiles(liIndex);\n\n                  detach(_this.fileList[liIndex]);\n\n                  _this.fileList.splice(liIndex, 1);\n\n                  isLiRemoved = true;\n                  liIndex = -1;\n                }\n              }\n            }\n          });\n        } else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '') && !_this.isBlazorSaveUrl) {\n          eventArgs.filesData = _this.getFilesData();\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              _this.clearAll();\n            }\n          });\n        } else {\n          var removeFiles = [];\n          fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n\n          if (fileData instanceof Array) {\n            removeFiles = fileData;\n          } else {\n            removeFiles.push(fileData);\n          }\n\n          eventArgs.filesData = removeFiles;\n          var removeUrl = _this.asyncSettings.removeUrl;\n          var validUrl = removeUrl === '' || isNullOrUndefined(removeUrl) ? false : true;\n\n          var _loop_6 = function (files) {\n            index = _this.filesData.indexOf(files);\n\n            if ((files.statusCode === '2' || files.statusCode === '4') && validUrl) {\n              _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n            } else {\n              if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                  if (!eventArgs.cancel) {\n                    _this.removeFilesData(files, customTemplate);\n                  }\n                });\n              } else {\n                _this.removeFilesData(files, customTemplate);\n              }\n            }\n\n            if (args && !args.target.classList.contains(REMOVE_ICON)) {\n              _this.checkActionComplete(false);\n            }\n          };\n\n          for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n            var files = removeFiles_1[_i];\n\n            _loop_6(files);\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Clear all the file entries from list that can be uploaded files or added in upload queue.\n   * @returns void\n   */\n\n\n  Uploader.prototype.clearAll = function () {\n    var _this = this;\n\n    if (isNullOrUndefined(this.listParent) && !(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n      if (this.browserName !== 'msie') {\n        this.element.value = '';\n      }\n\n      this.filesData = [];\n      return;\n    }\n\n    var eventArgs = {\n      cancel: false,\n      filesData: this.filesData\n    };\n    this.trigger('clearing', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel) {\n        _this.clearData();\n\n        _this.actionCompleteCount = 0;\n        _this.count = -1;\n      }\n    });\n  };\n  /**\n   * Get the data of files which are shown in file list.\n   * @param { number } index - specifies the file list item(li) index.\n   * @returns FileInfo[]\n   */\n\n\n  Uploader.prototype.getFilesData = function (index) {\n    if (!this.isServerBlazor) {\n      if (isNullOrUndefined(index)) {\n        return this.filesData;\n      } else {\n        return this.getSelectedFiles(index);\n      }\n    } else {\n      for (var i = 0; i < this.filesData.length; i++) {\n        this.filesData[i].rawFile = this.base64String[i];\n      }\n\n      return this.filesData;\n    }\n  };\n  /**\n   * Pauses the in-progress chunked upload based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns void\n   */\n\n\n  Uploader.prototype.pause = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.pauseUploading(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.pauseUploading = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '3') {\n        this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n\n  Uploader.prototype.getFiles = function (fileData) {\n    var files = [];\n\n    if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n      files.push(fileData);\n    } else {\n      files = fileData;\n    }\n\n    return files;\n  };\n  /**\n   * Resumes the chunked upload that is previously paused based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns void\n   */\n\n\n  Uploader.prototype.resume = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.resumeFiles(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.resumeFiles = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '4') {\n        this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n  /**\n   * Retries the canceled or failed file upload based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n   * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n   * @returns void\n   */\n\n\n  Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n  };\n\n  Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n        if (this.asyncSettings.chunkSize > 0) {\n          this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n        } else {\n          var liElement = void 0;\n\n          if (!custom) {\n            liElement = this.fileList[this.filesData.indexOf(files[i])];\n          }\n\n          this.reloadcanceledFile(null, files[i], liElement, custom);\n        }\n      }\n    }\n  };\n  /**\n   * Stops the in-progress chunked upload based on the file data.\n   * When the file upload is canceled, the partially uploaded file is removed from server.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n   * @returns void\n   */\n\n\n  Uploader.prototype.cancel = function (fileData) {\n    fileData = fileData ? fileData : this.filesData;\n    var cancelingFiles = this.getFilesInArray(fileData);\n    this.cancelUpload(cancelingFiles);\n  };\n\n  Uploader.prototype.cancelUpload = function (fileData) {\n    var files = this.getFiles(fileData);\n\n    if (this.asyncSettings.chunkSize > 0) {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          var metaData = this.getCurrentMetaData(files[i], null);\n          metaData.file.statusCode = '5';\n          metaData.file.status = this.localizedTexts('fileUploadCancel');\n          this.updateMetaData(metaData);\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    } else {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          files[i].statusCode = '5';\n          files[i].status = this.localizedTexts('fileUploadCancel');\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.showHideUploadSpinner = function (files) {\n    var liElement = this.getLiElement(files);\n\n    if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n      var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n  };\n\n  __decorate([Complex({\n    saveUrl: '',\n    removeUrl: ''\n  }, AsyncSettings)], Uploader.prototype, \"asyncSettings\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"sequentialUpload\", void 0);\n\n  __decorate([Property({})], Uploader.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"enabled\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"template\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"multiple\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"autoUpload\", void 0);\n\n  __decorate([Complex({}, ButtonsProps)], Uploader.prototype, \"buttons\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"allowedExtensions\", void 0);\n\n  __decorate([Property(0)], Uploader.prototype, \"minFileSize\", void 0);\n\n  __decorate([Property(30000000)], Uploader.prototype, \"maxFileSize\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"dropArea\", void 0);\n\n  __decorate([Collection([{}], FilesProp)], Uploader.prototype, \"files\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"showFileList\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"directoryUpload\", void 0);\n\n  __decorate([Property('Default')], Uploader.prototype, \"dropEffect\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"created\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"rendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeUpload\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"fileListRendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"selected\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"uploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"success\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"failure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"removing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeRemove\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"clearing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"progress\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"change\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkSuccess\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkFailure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkUploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"canceling\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"pausing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"resuming\", void 0);\n\n  Uploader = __decorate([NotifyPropertyChanges], Uploader);\n  return Uploader;\n}(Component);\n\nexport { Uploader };","map":{"version":3,"sources":["C:/Users/rraval/Desktop/schedule-component-copy/node_modules/@syncfusion/ej2-inputs/src/uploader/uploader.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","compile","isNullOrUndefined","NotifyPropertyChanges","detach","append","Animation","addClass","removeClass","KeyboardEvents","setValue","getValue","ChildProperty","Collection","Complex","Browser","Ajax","getUniqueID","closest","createSpinner","showSpinner","hideSpinner","updateBlazorTemplate","resetBlazorTemplate","isBlazor","ROOT","CONTROL_WRAPPER","INPUT_WRAPPER","DROP_AREA","DROP_WRAPPER","LIST_PARENT","FILE","STATUS","ACTION_BUTTONS","UPLOAD_BUTTONS","CLEAR_BUTTONS","FILE_NAME","FILE_TYPE","FILE_SIZE","REMOVE_ICON","DELETE_ICON","SPINNER_PANE","ABORT_ICON","RETRY_ICON","DRAG_HOVER","PROGRESS_WRAPPER","PROGRESSBAR","PROGRESSBAR_TEXT","UPLOAD_INPROGRESS","UPLOAD_SUCCESS","UPLOAD_FAILED","TEXT_CONTAINER","VALIDATION_FAILS","RTL","DISABLED","RTL_CONTAINER","ICON_FOCUSED","PROGRESS_INNER_WRAPPER","PAUSE_UPLOAD","RESUME_UPLOAD","RESTRICT_RETRY","wrapperAttr","FORM_UPLOAD","HIDDEN_INPUT","INVALID_FILE","INFORMATION","FilesProp","_super","apply","ButtonsProps","AsyncSettings","Uploader","options","element","_this","call","initialAttr","accept","multiple","disabled","uploadedFilesData","base64String","isForm","allTypes","pausedData","uploadMetaData","tabIndex","btnTabIndex","disableKeyboardNavigation","count","actionCompleteCount","flag","selectedFiles","uploaderName","fileStreams","newFileRef","isFirstFileOnSelection","fileList","filesData","uploaderOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setExtensions","allowedExtensions","clearAll","setControlStatus","setMultipleSelection","setRTL","reRenderFileList","buttons","browse","clear","upload","renderButtonTemplates","unBindDropEvents","updateDropArea","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkHTMLAttributes","renderPreLoadFiles","updateDirectoryAttributes","isServerBlazor","l10n","setLocale","locale","setLocalizedTexts","preLocaleObj","setCSSClass","cssClass","template","browseButton","innerText","localizedTexts","setAttribute","uploadWrapper","querySelector","innerHTML","updateFileList","getKeyValue","val","keyValue","status","classList","contains","autoUpload","uploadButton","clearButton","listParent","createFileList","actionButtons","removeActionButtons","renderActionButtons","checkActionButtonStatus","preRender","localeText","Browse","Clear","Upload","dropFilesHint","invalidMaxFileSize","invalidMinFileSize","invalidFileType","uploadFailedMessage","uploadSuccessMessage","removedSuccessMessage","removedFailedMessage","inProgress","readyToUploadMessage","abort","remove","cancel","delete","pauseUpload","pause","resume","retry","fileUploadCancel","invalidFileSelection","totalFiles","size","isServerRendered","isBlazorTemplate","isBlazorSaveUrl","asyncSettings","saveUrl","sequentialUpload","formRendered","ejInstance","tagName","inputElement","createElement","attrs","type","index","attributes","nodeName","nodeValue","hasAttribute","appendChild","isPureReactComponent","props","name","id","getAttribute","keyConfigs","enter","browserName","info","parentEle","document","documentElement","parentElement","formElement","getPersistData","addOnPersist","getModuleName","directoryUpload","removeAttribute","render","renderBrowseButton","initializeUpload","wireEvents","dropAreaWrapper","setDropArea","renderComplete","className","textContent","blur","focus","wireActionButtonEvents","serverActionButtonsEventBind","unwireActionButtonEvents","serverUlElement","slice","querySelectorAll","serverRemoveIconBindEvent","checkAutoUpload","add","uploadButtonClick","clearButtonClick","uploadText","clearText","inputWrapper","insertBefore","files","enablePersistence","clearData","files_1","data","fileData","split","rawFile","validationMessages","minSize","maxSize","statusCode","push","allowUpload","showFileList","length_1","dropTextArea","dropArea","dropZoneElement","enableDropText","parentNode","createDropTextHint","undefined","setProperties","bindDropEvents","fileDropArea","htmlAttributes","pro","indexOf","updatedClassValues","replace","trim","uploadStyle","newAttr","createAttribute","value","setAttributeNode","sequenceUpload","isFileListCreated","oldCSSClass","updatedCssClassValue","updatedOldCssClass","browseButtonClick","onSelectFiles","removeFocus","keyboardModule","keyAction","keyActionHandler","bind","eventName","resetForm","unWireEvents","destroy","e","targetElement","action","metaData","getCurrentMetaData","file","abortUpload","resumeUpload","chunkUpload","removeFiles","preventDefault","stopPropagation","fileInfo","targetMetaData","activeElement","click","dropElement","dragHover","onDragLeave","onPasteFile","enabled","dropEffect","dataTransfer","toLowerCase","event","item","clipboardData","items","pasteFile","kind","match","renderSelectedFiles","getAsFile","getSelectedFiles","liElement","allFiles","getFilesData","nameElements","startIndex","j","args","selectedElement","formUpload","isFormUpload","getFilesInArray","spinnerTarget","width","uploadSequential","checkActionComplete","removeFilesData","customTemplate","splice","getLiElement","interopAdaptor","invokeMethodAsync","removeUploadedFile","eventArgs","removeDirectly","custom","ajax","removeUrl","emitError","formData","FormData","beforeSend","currentRequest","httpRequest","currentRequestHeader","updateCustomheader","customFormDatas","updateFormData","trigger","removingEventCallback","name_1","onLoad","removeCompleted","onError","removeFailed","send","postRawFile","customFormData","customData","_loop_1","map","request","_loop_2","setRequestHeader","response","currentTarget","getResponse","operation","updateStatus","rootElement","statusElement","getFilesFromFolder","filesEntries","validDirectoryUpload","checkDirectoryUpload","_loop_3","webkitGetAsEntry","isFile","files_2","fileObj","path","fullPath","this_1","isDirectory","traverseFileTree","directoryReader","createReader","readFileFromDirectory","readEntries","entries","pushFilesEntries","_loop_4","this_2","targetFiles","sortFilesList","sortFileList","getBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","directory","paste","isModified","modifiedFilesData","progressInterval","isCanceled","updateInitialFileDetails","checkExtension","_internalRenderSelect","fileName","substring","lastIndexOf","getFileType","webkitRelativePath","fileDetails","validatedFileSize","fileSource","k","dataFiles","updateSortedFileList","concat","raiseActionComplete","allowFormUpload","singleUpload","previousListClone","added","removedList","cloneNode","removedList_1","oldList","childNodes","createParentUL","isBlank","str","test","dropFiles","extensions","extensions_1","extension","toLocaleLowerCase","fileSize","minSizeError","maxSizeError","minFileSize","maxFileSize","errorMessage","isPreLoadFile","isPreload","createCustomfileList","fileData_1","listItem","uploadTemplateFn","templateComplier","fromElements","isStringTemplate","eventsArgs","formFileList","fileContainer","statusMessage","fileData_2","fileNameEle","getFileNameOnly","fileTypeEle","enableRtl","rtlContainer","truncateName","formValidateFileInfo","setListToFileInfo","infoEle","bytesToSize","getFileSize","createFormInput","iconElement","mergeFileInfo","addInvalidClass","typeValidationMessage","fileData_3","input","fileData_4","list","fileNames","fileData_5","join","statusForFormUpload","isValid","fileData_6","formCustomFileList","isSelectedFile","fileListData","fileData_7","textContainer","textElement","fileExtension","preventActionComplete","getSlicedName","nameElement","text","dataset","tail","fileData_8","offsetWidth","scrollWidth","names","setInitialAttributes","filterfileList","filterFiles","li","updateLiStatus","createProgressBar","progressbarWrapper","progressBar","max","progressbarInnerWrapper","progressbarText","updateProgressbar","isNaN","Math","round","loaded","total","parseInt","changeProgressValue","toString","progressValue","uploadInProgress","customUI","cancelUploadingFile","updateProgressBarClasses","iconEle","name_2","removecanceledFile","renderFailureState","requestResponse","removeProgressbar","deleteIcon","pauseButton","retryElement","addEventListener","reloadcanceledFile","uploadComplete","readyState","raiseSuccessEvent","uploadFailed","statusText","headers","getAllResponseHeaders","withCredentials","removeIconEle","spinnerEle","increment","getSelectedFileStatus","matchFiles","matchFilesIndex","selectFileIndex","selectedFileData","fileDataIndex","callType","progressAnimation","duration","animate","setTimeout","animateProgressBar","uploadTemplate","exception","getConstant","isDynamic","attributes_1","isMutiple","isDisabled","fileIndex","start","end","min","chunkSize","blob","chunkIndex","retryCount","sendRequest","cloneFile","totalChunk","ceil","url","async","contentType","chunkUploadComplete","onUploadProgress","chunkUploadInProgress","currentChunkIndex","uploadingEventCallback","chunkUploadFailed","eventCancelByArgs","removeIcon","checkChunkUpload","updateMetaData","eventArgs_1","sendNextRequest","name_3","removeChunkFile","removeChunkProgressBar","pauseIcon","chunkCount","nextElementSibling","cancelButton","retryRequest","retryAfterDelay","file_1","failureMessage","checkPausePlayAction","retryUpload","fromcanceledStage","clearIcon","loadedSize","abortIcon","bytes","toFixed","sortedFileNames","sort","sortedFilesData","sortedFileNames_1","name_4","attributes_2","uploadFiles_1","uploadFiles","serverReadFileBase64","position","totalCount","reader","contents","uploadFileCount","ele","getFileRead","fileCount","getFileInfo","_loop_5","this_3","File","then","uploadFilesRequest","cloneFiles","chunkEnabled","getFileData","name_5","spliceFiles","liIndex","endIndex","beforeEventArgs","removingFiles","isLiRemoved","removingFiles_1","validUrl","_loop_6","removeFiles_1","fileDataFiles","pauseUploading","getFiles","resumeFiles","retryFailedFiles","cancelingFiles","cancelUpload","showHideUploadSpinner"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nvar ROOT = 'e-uploader';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\nvar FilesProp = /** @class */ (function (_super) {\n    __extends(FilesProp, _super);\n    function FilesProp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"name\", void 0);\n    __decorate([\n        Property(null)\n    ], FilesProp.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"type\", void 0);\n    return FilesProp;\n}(ChildProperty));\nexport { FilesProp };\nvar ButtonsProps = /** @class */ (function (_super) {\n    __extends(ButtonsProps, _super);\n    function ButtonsProps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Browse...')\n    ], ButtonsProps.prototype, \"browse\", void 0);\n    __decorate([\n        Property('Upload')\n    ], ButtonsProps.prototype, \"upload\", void 0);\n    __decorate([\n        Property('Clear')\n    ], ButtonsProps.prototype, \"clear\", void 0);\n    return ButtonsProps;\n}(ChildProperty));\nexport { ButtonsProps };\nvar AsyncSettings = /** @class */ (function (_super) {\n    __extends(AsyncSettings, _super);\n    function AsyncSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"saveUrl\", void 0);\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"removeUrl\", void 0);\n    __decorate([\n        Property(0)\n    ], AsyncSettings.prototype, \"chunkSize\", void 0);\n    __decorate([\n        Property(3)\n    ], AsyncSettings.prototype, \"retryCount\", void 0);\n    __decorate([\n        Property(500)\n    ], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n    return AsyncSettings;\n}(ChildProperty));\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\nvar Uploader = /** @class */ (function (_super) {\n    __extends(Uploader, _super);\n    /**\n     * Triggers when change the Uploader value.\n     */\n    function Uploader(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.initialAttr = { accept: null, multiple: false, disabled: false };\n        _this.uploadedFilesData = [];\n        _this.base64String = [];\n        _this.isForm = false;\n        _this.allTypes = false;\n        _this.pausedData = [];\n        _this.uploadMetaData = [];\n        _this.tabIndex = '0';\n        _this.btnTabIndex = '0';\n        _this.disableKeyboardNavigation = false;\n        _this.count = -1;\n        _this.actionCompleteCount = 0;\n        _this.flag = true;\n        _this.selectedFiles = [];\n        _this.uploaderName = 'UploadFiles';\n        _this.fileStreams = [];\n        _this.newFileRef = 0;\n        _this.isFirstFileOnSelection = false;\n        /**\n         * Get the file item(li) which are shown in file list.\n         * @private\n         */\n        _this.fileList = [];\n        /**\n         * Get the data of files which are shown in file list.\n         * @private\n         */\n        _this.filesData = [];\n        _this.uploaderOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     * @private\n     */\n    Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowedExtensions':\n                    this.setExtensions(this.allowedExtensions);\n                    this.clearAll();\n                    break;\n                case 'enabled':\n                    this.setControlStatus();\n                    break;\n                case 'multiple':\n                    this.setMultipleSelection();\n                    break;\n                case 'enableRtl':\n                    this.setRTL();\n                    this.reRenderFileList();\n                    break;\n                case 'buttons':\n                    this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n                    this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n                    this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n                    this.renderButtonTemplates();\n                    break;\n                case 'dropArea':\n                    this.unBindDropEvents();\n                    this.updateDropArea();\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttrToElement();\n                    this.updateHTMLAttrToWrapper();\n                    this.checkHTMLAttributes(true);\n                    break;\n                case 'files':\n                    this.renderPreLoadFiles();\n                    break;\n                case 'directoryUpload':\n                    this.updateDirectoryAttributes();\n                    break;\n                case 'template':\n                    if (!this.isServerBlazor) {\n                        this.clearAll();\n                    }\n                    break;\n                case 'minFileSize':\n                case 'maxFileSize':\n                case 'autoUpload':\n                    this.clearAll();\n                    break;\n                case 'sequentialUpload':\n                    this.clearAll();\n                    break;\n                case 'locale':\n                    this.l10n.setLocale(this.locale);\n                    this.setLocalizedTexts();\n                    this.preLocaleObj = getValue('currentLocale', this.l10n);\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n            }\n        }\n    };\n    Uploader.prototype.setLocalizedTexts = function () {\n        if (isNullOrUndefined(this.template)) {\n            if (typeof (this.buttons.browse) === 'string') {\n                this.browseButton.innerText = (this.buttons.browse === 'Browse...') ?\n                    this.localizedTexts('Browse') : this.buttons.browse;\n                this.browseButton.setAttribute('title', this.browseButton.innerText);\n                if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\n                    this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n                }\n            }\n            this.updateFileList();\n        }\n    };\n    Uploader.prototype.getKeyValue = function (val) {\n        var keyValue;\n        for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.preLocaleObj[key] === val) {\n                keyValue = key;\n            }\n        }\n        return keyValue;\n    };\n    Uploader.prototype.updateFileList = function () {\n        var element;\n        /* istanbul ignore next */\n        if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n            for (var i = 0; i < this.fileList.length; i++) {\n                element = this.fileList[i].querySelector('.e-file-status');\n                element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n                }\n                if (this.fileList[i].querySelector('.e-file-play-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n                }\n                if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n                }\n                if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n                }\n                if (!this.autoUpload) {\n                    this.uploadButton.innerText = (this.buttons.upload === 'Upload') ?\n                        this.localizedTexts('Upload') : this.buttons.upload;\n                    this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n                    this.clearButton.innerText = (this.buttons.clear === 'Clear') ?\n                        this.localizedTexts('Clear') : this.buttons.clear;\n                    this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n                }\n            }\n        }\n    };\n    Uploader.prototype.reRenderFileList = function () {\n        if (this.listParent) {\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createFileList(this.filesData);\n            if (this.actionButtons) {\n                this.removeActionButtons();\n                this.renderActionButtons();\n                this.checkActionButtonStatus();\n            }\n        }\n    };\n    Uploader.prototype.preRender = function () {\n        this.localeText = { Browse: 'Browse...', Clear: 'Clear', Upload: 'Upload',\n            dropFilesHint: 'Or drop files here', invalidMaxFileSize: 'File size is too large',\n            invalidMinFileSize: 'File size is too small', invalidFileType: 'File type is not allowed',\n            uploadFailedMessage: 'File failed to upload', uploadSuccessMessage: 'File uploaded successfully',\n            removedSuccessMessage: 'File removed successfully', removedFailedMessage: 'Unable to remove file', inProgress: 'Uploading',\n            readyToUploadMessage: 'Ready to upload', abort: 'Abort', remove: 'Remove', cancel: 'Cancel', delete: 'Delete file',\n            pauseUpload: 'File upload paused', pause: 'Pause', resume: 'Resume', retry: 'Retry',\n            fileUploadCancel: 'File upload canceled', invalidFileSelection: 'Invalid files selected', totalFiles: 'Total files',\n            size: 'Size'\n        };\n        this.l10n = new L10n('uploader', this.localeText, this.locale);\n        this.preLocaleObj = getValue('currentLocale', this.l10n);\n        this.isServerBlazor = (isBlazor() && this.isServerRendered) ? true : false;\n        this.isBlazorTemplate = this.isServerBlazor && this.template !== '' && !isNullOrUndefined(this.template) ? true : false;\n        this.isBlazorSaveUrl = (this.isServerRendered &&\n            (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl))) ? true : false;\n        if (this.isBlazorSaveUrl && this.sequentialUpload) {\n            this.sequentialUpload = false;\n        }\n        this.formRendered();\n        if (!this.isServerBlazor) {\n            this.updateHTMLAttrToElement();\n            this.checkHTMLAttributes(false);\n            // tslint:disable-next-line\n            var ejInstance = getValue('ej2_instances', this.element);\n            /* istanbul ignore next */\n            if (this.element.tagName === 'EJS-UPLOADER') {\n                var inputElement = this.createElement('input', { attrs: { type: 'file' } });\n                var index = 0;\n                for (index; index < this.element.attributes.length; index++) {\n                    inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n                    inputElement.innerHTML = this.element.innerHTML;\n                }\n                if (!inputElement.hasAttribute('name')) {\n                    inputElement.setAttribute('name', 'UploadFiles');\n                }\n                this.element.appendChild(inputElement);\n                this.element = inputElement;\n                setValue('ej2_instances', ejInstance, this.element);\n            }\n            /* istanbul ignore next */\n            if (ejInstance[0].isPureReactComponent) {\n                if (!isNullOrUndefined(ejInstance[0].props.name)) {\n                    this.element.setAttribute('name', ejInstance[0].props.name);\n                }\n                else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n                    this.element.setAttribute('name', ejInstance[0].props.id);\n                }\n                else {\n                    this.element.setAttribute('name', 'UploadFiles');\n                }\n            }\n            if (isNullOrUndefined(this.element.getAttribute('name'))) {\n                this.element.setAttribute('name', this.element.getAttribute('id'));\n            }\n            if (!this.element.hasAttribute('type')) {\n                this.element.setAttribute('type', 'file');\n            }\n            this.updateDirectoryAttributes();\n        }\n        this.keyConfigs = {\n            enter: 'enter'\n        };\n        if (this.element.hasAttribute('tabindex')) {\n            this.tabIndex = this.element.getAttribute('tabindex');\n        }\n        this.browserName = Browser.info.name;\n        this.uploaderName = this.element.getAttribute('name');\n    };\n    Uploader.prototype.formRendered = function () {\n        var parentEle = closest(this.element, 'form');\n        if (!isNullOrUndefined(parentEle)) {\n            for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n                if (parentEle.tagName === 'FORM') {\n                    this.isForm = true;\n                    this.formElement = parentEle;\n                    parentEle.setAttribute('enctype', 'multipart/form-data');\n                    parentEle.setAttribute('encoding', 'multipart/form-data');\n                }\n            }\n        }\n    };\n    Uploader.prototype.getPersistData = function () {\n        return this.addOnPersist(['filesData']);\n    };\n    /**\n     * Return the module name of the component.\n     */\n    Uploader.prototype.getModuleName = function () {\n        return 'uploader';\n    };\n    Uploader.prototype.updateDirectoryAttributes = function () {\n        if (this.directoryUpload) {\n            this.element.setAttribute('directory', 'true');\n            this.element.setAttribute('webkitdirectory', 'true');\n        }\n        else {\n            this.element.removeAttribute('directory');\n            this.element.removeAttribute('webkitdirectory');\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Uploader.prototype.render = function () {\n        if (!this.isServerBlazor) {\n            this.renderBrowseButton();\n            this.initializeUpload();\n            this.updateHTMLAttrToWrapper();\n            this.wireEvents();\n            this.setMultipleSelection();\n            this.setExtensions(this.allowedExtensions);\n            this.setRTL();\n            this.renderPreLoadFiles();\n            this.setControlStatus();\n            this.setCSSClass();\n        }\n        else {\n            this.dropAreaWrapper = closest(this.element, '.' + DROP_WRAPPER);\n            this.uploadWrapper = closest(this.element, '.e-upload.e-control-wrapper');\n            this.browseButton = this.dropAreaWrapper.querySelector('button.e-upload-browse-btn');\n            this.setDropArea();\n            this.renderPreLoadFiles();\n            this.wireEvents();\n        }\n        this.renderComplete();\n    };\n    Uploader.prototype.renderBrowseButton = function () {\n        this.browseButton = this.createElement('button', { className: 'e-css e-btn', attrs: { 'type': 'button' } });\n        this.browseButton.setAttribute('tabindex', this.tabIndex);\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.innerText);\n        }\n        else {\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        this.element.setAttribute('aria-label', 'Uploader');\n    };\n    Uploader.prototype.renderActionButtons = function () {\n        this.element.setAttribute('tabindex', '-1');\n        if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n            this.actionButtons = this.createElement('div', { className: ACTION_BUTTONS });\n            this.uploadButton = this.createElement('button', { className: UPLOAD_BUTTONS,\n                attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n            this.clearButton = this.createElement('button', { className: CLEAR_BUTTONS,\n                attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n            this.actionButtons.appendChild(this.clearButton);\n            this.actionButtons.appendChild(this.uploadButton);\n            this.renderButtonTemplates();\n            this.uploadWrapper.appendChild(this.actionButtons);\n            this.browseButton.blur();\n            this.uploadButton.focus();\n            this.wireActionButtonEvents();\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverActionButtonsEventBind = function (element) {\n        if (element && !this.isForm) {\n            this.browseButton.blur();\n            this.actionButtons = element;\n            this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\n            this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\n            this.uploadButton.focus();\n            this.unwireActionButtonEvents();\n            this.wireActionButtonEvents();\n            this.checkActionButtonStatus();\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverUlElement = function (element) {\n        if (element) {\n            if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n                this.listParent = element;\n                this.fileList = [].slice.call(this.listParent.querySelectorAll('li'));\n                this.serverRemoveIconBindEvent();\n                if (!this.isForm) {\n                    this.checkAutoUpload(this.filesData);\n                }\n            }\n        }\n    };\n    Uploader.prototype.wireActionButtonEvents = function () {\n        EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n        EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n    };\n    Uploader.prototype.unwireActionButtonEvents = function () {\n        EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n        EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n    };\n    Uploader.prototype.removeActionButtons = function () {\n        if (this.actionButtons) {\n            this.unwireActionButtonEvents();\n            if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n                detach(this.actionButtons);\n            }\n            this.actionButtons = null;\n        }\n    };\n    Uploader.prototype.renderButtonTemplates = function () {\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.textContent);\n        }\n        else {\n            this.browseButton.innerHTML = '';\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        if (this.uploadButton) {\n            var uploadText = void 0;\n            uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n            this.buttons.upload = uploadText;\n            if (typeof (this.buttons.upload) === 'string') {\n                this.uploadButton.textContent = (this.buttons.upload === 'Upload') ?\n                    this.localizedTexts('Upload') : this.buttons.upload;\n                this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n            }\n            else {\n                this.uploadButton.innerHTML = '';\n                this.uploadButton.appendChild(this.buttons.upload);\n            }\n        }\n        if (this.clearButton) {\n            var clearText = void 0;\n            clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n            this.buttons.clear = clearText;\n            if (typeof (this.buttons.clear) === 'string') {\n                this.clearButton.textContent = (this.buttons.clear === 'Clear') ?\n                    this.localizedTexts('Clear') : this.buttons.clear;\n                this.clearButton.setAttribute('title', this.clearButton.textContent);\n            }\n            else {\n                this.clearButton.innerHTML = '';\n                this.clearButton.appendChild(this.buttons.clear);\n            }\n        }\n    };\n    Uploader.prototype.initializeUpload = function () {\n        this.element.setAttribute('tabindex', '-1');\n        var inputWrapper = this.createElement('span', { className: INPUT_WRAPPER });\n        this.element.parentElement.insertBefore(inputWrapper, this.element);\n        this.dropAreaWrapper = this.createElement('div', { className: DROP_WRAPPER });\n        this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n        inputWrapper.appendChild(this.element);\n        this.dropAreaWrapper.appendChild(this.browseButton);\n        this.dropAreaWrapper.appendChild(inputWrapper);\n        this.uploadWrapper = this.createElement('div', { className: CONTROL_WRAPPER });\n        this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n        this.uploadWrapper.appendChild(this.dropAreaWrapper);\n        this.setDropArea();\n    };\n    Uploader.prototype.renderPreLoadFiles = function () {\n        if (this.files.length) {\n            if (this.enablePersistence && this.filesData.length) {\n                this.createFileList(this.filesData);\n                return;\n            }\n            if (isNullOrUndefined(this.files[0].size)) {\n                return;\n            }\n            var files = [].slice.call(this.files);\n            var filesData = [];\n            if (!this.multiple) {\n                this.clearData();\n                files = [files[0]];\n            }\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                var data = files_1[_i];\n                var fileData = {\n                    name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n                    rawFile: '',\n                    size: data.size,\n                    status: this.localizedTexts('uploadSuccessMessage'),\n                    type: data.type,\n                    validationMessages: { minSize: '', maxSize: '' },\n                    statusCode: '2'\n                };\n                filesData.push(fileData);\n                this.filesData.push(fileData);\n            }\n            this.createFileList(filesData);\n            if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n                this.renderActionButtons();\n            }\n            this.checkActionButtonStatus();\n            if (this.sequentialUpload) {\n                this.count = this.filesData.length - 1;\n            }\n        }\n    };\n    Uploader.prototype.checkActionButtonStatus = function () {\n        if (this.actionButtons) {\n            var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length +\n                this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n            if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n            else {\n                this.uploadButton.removeAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.setDropArea = function () {\n        var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n        if (this.dropArea) {\n            this.dropZoneElement = (typeof (this.dropArea) !== 'string') ? this.dropArea :\n                document.querySelector(this.dropArea);\n            var element = this.element;\n            var enableDropText = false;\n            while (element.parentNode) {\n                element = element.parentNode;\n                if (element === this.dropZoneElement) {\n                    enableDropText = true;\n                    if (!dropTextArea) {\n                        this.createDropTextHint();\n                    }\n                    else if (!this.isServerBlazor) {\n                        dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\n                    }\n                }\n            }\n            if (!enableDropText && dropTextArea) {\n                dropTextArea.remove();\n            }\n        }\n        else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\n            this.createDropTextHint();\n            this.dropZoneElement = this.uploadWrapper;\n            this.setProperties({ dropArea: this.uploadWrapper }, true);\n        }\n        this.bindDropEvents();\n    };\n    Uploader.prototype.updateDropArea = function () {\n        if (this.dropArea) {\n            this.setDropArea();\n        }\n        else {\n            this.dropZoneElement = null;\n            var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n            if (dropTextArea) {\n                dropTextArea.remove();\n            }\n        }\n    };\n    Uploader.prototype.createDropTextHint = function () {\n        if (!this.isServerBlazor) {\n            var fileDropArea = this.createElement('span', { className: DROP_AREA });\n            fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n            this.dropAreaWrapper.appendChild(fileDropArea);\n        }\n    };\n    Uploader.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) < 0) {\n                    this.element.setAttribute(pro, this.htmlAttributes[pro]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) > -1) {\n                    if (pro === 'class') {\n                        var updatedClassValues = (this.htmlAttributes[pro].replace(/\\s+/g, ' ')).trim();\n                        if (updatedClassValues !== '') {\n                            addClass([this.uploadWrapper], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (pro === 'style') {\n                        var uploadStyle = this.uploadWrapper.getAttribute(pro);\n                        uploadStyle = !isNullOrUndefined(uploadStyle) ? (uploadStyle + this.htmlAttributes[pro]) :\n                            this.htmlAttributes[pro];\n                        this.uploadWrapper.setAttribute(pro, uploadStyle);\n                    }\n                    else {\n                        this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\n                    }\n                }\n            }\n        }\n    };\n    Uploader.prototype.setMultipleSelection = function () {\n        if (this.multiple && !this.element.hasAttribute('multiple')) {\n            var newAttr = document.createAttribute('multiple');\n            newAttr.value = 'multiple';\n            this.element.setAttributeNode(newAttr);\n        }\n        else if (!this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n    };\n    Uploader.prototype.checkAutoUpload = function (fileData) {\n        if (this.autoUpload) {\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.sequenceUpload(fileData);\n            }\n            else {\n                this.upload(fileData);\n            }\n            this.removeActionButtons();\n        }\n        else if (!this.actionButtons) {\n            this.renderActionButtons();\n        }\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.sequenceUpload = function (fileData) {\n        if (this.filesData.length - fileData.length === 0 ||\n            this.filesData[(this.filesData.length - fileData.length - 1)].statusCode !== '1') {\n            ++this.count;\n            var isFileListCreated = this.showFileList ? false : true;\n            if (typeof this.filesData[this.count] === 'object') {\n                this.isFirstFileOnSelection = false;\n                this.upload(this.filesData[this.count], isFileListCreated);\n                if (this.filesData[this.count].statusCode === '0') {\n                    this.sequenceUpload(fileData);\n                }\n            }\n            else {\n                --this.count;\n            }\n        }\n    };\n    Uploader.prototype.setCSSClass = function (oldCSSClass) {\n        var updatedCssClassValue = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValue = (this.cssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\n            addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\n        }\n        var updatedOldCssClass = oldCSSClass;\n        if (!isNullOrUndefined(oldCSSClass)) {\n            updatedOldCssClass = (oldCSSClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\n            removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\n        }\n    };\n    Uploader.prototype.wireEvents = function () {\n        EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n        EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n        EventHandler.add(document, 'click', this.removeFocus, this);\n        this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown',\n        });\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n    };\n    Uploader.prototype.unWireEvents = function () {\n        EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n        EventHandler.remove(this.element, 'change', this.onSelectFiles);\n        EventHandler.remove(document, 'click', this.removeFocus);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        this.keyboardModule.destroy();\n    };\n    Uploader.prototype.resetForm = function () {\n        this.clearAll();\n    };\n    Uploader.prototype.keyActionHandler = function (e) {\n        var targetElement = e.target;\n        switch (e.action) {\n            case 'enter':\n                if (e.target === this.clearButton) {\n                    this.clearButtonClick();\n                }\n                else if (e.target === this.uploadButton) {\n                    this.uploadButtonClick();\n                }\n                else if (e.target === this.browseButton) {\n                    this.browseButtonClick();\n                }\n                else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    metaData.file.statusCode = '4';\n                    metaData.file.status = this.localizedTexts('pauseUpload');\n                    this.abortUpload(metaData, false);\n                }\n                else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n                    this.resumeUpload(this.getCurrentMetaData(null, e), e);\n                }\n                else if (targetElement.classList.contains(RETRY_ICON)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    if (!isNullOrUndefined(metaData)) {\n                        metaData.file.statusCode = '1';\n                        metaData.file.status = this.localizedTexts('readyToUploadMessage');\n                        this.chunkUpload(metaData.file);\n                    }\n                    else {\n                        var target = e.target.parentElement;\n                        var fileData = this.filesData[this.fileList.indexOf(target)];\n                        this.retry(fileData);\n                    }\n                }\n                else {\n                    this.removeFiles(e);\n                    if (!targetElement.classList.contains(ABORT_ICON)) {\n                        this.browseButton.focus();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n        }\n    };\n    Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n        var fileData;\n        var targetMetaData;\n        if (isNullOrUndefined(fileInfo)) {\n            var target = e.target.parentElement;\n            fileData = this.filesData[this.fileList.indexOf(target)];\n        }\n        else {\n            fileData = fileInfo;\n        }\n        for (var i = 0; i < this.uploadMetaData.length; i++) {\n            if (this.uploadMetaData[i].file.name === fileData.name) {\n                targetMetaData = this.uploadMetaData[i];\n            }\n        }\n        return targetMetaData;\n    };\n    Uploader.prototype.removeFocus = function () {\n        if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n            document.activeElement.blur();\n            this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n        }\n    };\n    Uploader.prototype.browseButtonClick = function () {\n        this.element.click();\n    };\n    Uploader.prototype.uploadButtonClick = function () {\n        if (this.sequentialUpload) {\n            this.sequenceUpload(this.filesData);\n        }\n        else {\n            this.upload(this.filesData);\n        }\n    };\n    Uploader.prototype.clearButtonClick = function () {\n        this.clearAll();\n        /* istanbul ignore next */\n        if (this.sequentialUpload) {\n            this.count = -1;\n        }\n        this.actionCompleteCount = 0;\n    };\n    Uploader.prototype.bindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n            EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n            EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n            EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n        }\n    };\n    Uploader.prototype.unBindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n            EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n            EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n        }\n    };\n    Uploader.prototype.onDragLeave = function (e) {\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\n    };\n    Uploader.prototype.dragHover = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.dropZoneElement.classList.add(DRAG_HOVER);\n        if (this.dropEffect !== 'Default') {\n            e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.dropElement = function (e) {\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\n        this.onSelectFiles(e);\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.onPasteFile = function (event) {\n        var item = event.clipboardData.items;\n        if (item.length !== 1) {\n            return;\n        }\n        var pasteFile = [].slice.call(item)[0];\n        if ((pasteFile.kind === 'file') && pasteFile.type.match('^image/')) {\n            this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n        }\n    };\n    Uploader.prototype.getSelectedFiles = function (index) {\n        var data = [];\n        var liElement = this.fileList[index];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < index; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        for (var j = startIndex; j < (startIndex + nameElements); j++) {\n            data.push(allFiles[j]);\n        }\n        return data;\n    };\n    Uploader.prototype.removeFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var selectedElement = args.target.parentElement;\n        if (this.isBlazorSaveUrl) {\n            this.fileList = [].slice.call(this.uploadWrapper.querySelectorAll('li'));\n        }\n        var index = this.fileList.indexOf(selectedElement);\n        var liElement = this.fileList[index];\n        var formUpload = this.isFormUpload();\n        var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n        if (isNullOrUndefined(fileData)) {\n            return;\n        }\n        if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n            fileData[0].statusCode = '5';\n            if (!isNullOrUndefined(liElement)) {\n                var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                createSpinner({ target: spinnerTarget, width: '20px' });\n                showSpinner(spinnerTarget);\n            }\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.uploadSequential();\n            }\n            if (!(liElement.classList.contains(RESTRICT_RETRY))) {\n                this.checkActionComplete(true);\n            }\n        }\n        else if (!closest(args.target, '.' + SPINNER_PANE)) {\n            this.remove(fileData, false, false, true, args);\n        }\n        this.element.value = '';\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.removeFilesData = function (file, customTemplate) {\n        var index;\n        if (customTemplate) {\n            if (!this.showFileList) {\n                index = this.filesData.indexOf(file);\n                this.filesData.splice(index, 1);\n            }\n            return;\n        }\n        var selectedElement = this.getLiElement(file);\n        if (isNullOrUndefined(selectedElement)) {\n            return;\n        }\n        if (!this.isBlazorSaveUrl) {\n            detach(selectedElement);\n        }\n        index = this.fileList.indexOf(selectedElement);\n        this.fileList.splice(index, 1);\n        this.filesData.splice(index, 1);\n        if (!this.isBlazorSaveUrl) {\n            if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n                detach(this.listParent);\n                this.listParent = null;\n                this.removeActionButtons();\n            }\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                if (index <= this.count) {\n                    --this.count;\n                }\n            }\n        }\n        else {\n            // tslint:disable-next-line\n            this.interopAdaptor.invokeMethodAsync('removeFileData', index);\n        }\n    };\n    Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n        var _this = this;\n        var selectedFiles = file;\n        var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            if (isBlazor()) {\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                    if (eventArgs.cancel) {\n                        e.cancel = true;\n                    }\n                    else {\n                        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n                    }\n                });\n            }\n            else {\n                _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n            }\n        };\n        if (this.isServerBlazor) {\n            var name_1 = this.element.getAttribute('name');\n            if (!isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n                formData.append(name_1, selectedFiles.rawFile, selectedFiles.name);\n            }\n            else {\n                formData.append(name_1, selectedFiles.name);\n            }\n        }\n        ajax.onLoad = function (e) { _this.removeCompleted(e, selectedFiles, custom); return {}; };\n        /* istanbul ignore next */\n        ajax.onError = function (e) { _this.removeFailed(e, selectedFiles, custom); return {}; };\n        ajax.send(formData);\n    };\n    Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n        /* istanbul ignore next */\n        var name = this.element.getAttribute('name');\n        var liElement = this.getLiElement(file);\n        if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) ||\n            !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n            var spinnerTarget = void 0;\n            spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) :\n                liElement.querySelector('.' + REMOVE_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n        if (!this.isServerBlazor) {\n            if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n                formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n            }\n            else {\n                formData.append(name, selectedFiles.name);\n            }\n            this.updateFormData(formData, eventArgs.customFormData);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateFormData = function (formData, customData) {\n        if (customData.length > 0 && customData[0]) {\n            var _loop_1 = function (i) {\n                var data = customData[i];\n                // tslint:disable-next-line\n                var value = Object.keys(data).map(function (e) {\n                    return data[e];\n                });\n                formData.append(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < customData.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n        if (currentRequest.length > 0 && currentRequest[0]) {\n            var _loop_2 = function (i) {\n                var data = currentRequest[i];\n                // tslint:disable-next-line\n                var value = Object.keys(data).map(function (e) {\n                    return data[e];\n                });\n                request.setRequestHeader(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < currentRequest.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = {\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n        };\n        this.trigger('success', args);\n        this.removeFilesData(files, customTemplate);\n        var index = this.uploadedFilesData.indexOf(files);\n        this.uploadedFilesData.splice(index, 1);\n        this.trigger('change', { files: this.uploadedFilesData });\n    };\n    Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = {\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n        };\n        if (!customTemplate) {\n            var index = this.filesData.indexOf(files);\n            var rootElement = this.fileList[index];\n            if (rootElement) {\n                var statusElement = rootElement.querySelector('.' + STATUS);\n                rootElement.classList.remove(UPLOAD_SUCCESS);\n                statusElement.classList.remove(UPLOAD_SUCCESS);\n                rootElement.classList.add(UPLOAD_FAILED);\n                statusElement.classList.add(UPLOAD_FAILED);\n            }\n            this.checkActionButtonStatus();\n        }\n        this.trigger('failure', args);\n        var liElement = this.getLiElement(files);\n        /* istanbul ignore next */\n        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n            hideSpinner(spinnerTarget);\n            detach(liElement.querySelector('.e-spinner-pane'));\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getFilesFromFolder = function (event) {\n        this.filesEntries = [];\n        var items;\n        items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n        var validDirectoryUpload = this.checkDirectoryUpload(items);\n        if (!validDirectoryUpload) {\n            return;\n        }\n        var _loop_3 = function (i) {\n            // tslint:disable-next-line\n            var item = items[i].webkitGetAsEntry();\n            if (item.isFile) {\n                var files_2 = [];\n                // tslint:disable-next-line\n                (item).file(function (fileObj) {\n                    var path = item.fullPath;\n                    files_2.push({ 'path': path, 'file': fileObj });\n                });\n                this_1.renderSelectedFiles(event, files_2, true);\n            }\n            else if (item.isDirectory) {\n                this_1.traverseFileTree(item, event);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < items.length; i++) {\n            _loop_3(i);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.checkDirectoryUpload = function (items) {\n        for (var i = 0; items && i < items.length; i++) {\n            // tslint:disable-next-line\n            var item = items[i].webkitGetAsEntry();\n            if (item.isDirectory) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // tslint:disable\n    /* istanbul ignore next */\n    Uploader.prototype.traverseFileTree = function (item, event) {\n        if (item.isFile) {\n            this.filesEntries.push(item);\n        }\n        else if (item.isDirectory) {\n            // tslint:disable-next-line\n            var directoryReader = item.createReader();\n            // tslint:disable-next-line\n            this.readFileFromDirectory(directoryReader, event);\n        }\n    };\n    // tslint:disable\n    /* istanbul ignore next */\n    Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\n        var _this = this;\n        // tslint:disable-next-line\n        directoryReader.readEntries(function (entries) {\n            for (var i = 0; i < entries.length; i++) {\n                _this.traverseFileTree(entries[i]);\n                // tslint:disable-next-line\n            }\n            ;\n            _this.pushFilesEntries(event);\n            if (entries.length) {\n                _this.readFileFromDirectory(directoryReader);\n            }\n        });\n    };\n    Uploader.prototype.pushFilesEntries = function (event) {\n        var _this = this;\n        var files = [];\n        var _loop_4 = function (i) {\n            // tslint:disable-next-line\n            this_2.filesEntries[i].file(function (fileObj) {\n                if (_this.filesEntries) {\n                    var path = _this.filesEntries[i].fullPath;\n                    files.push({ 'path': path, 'file': fileObj });\n                    if (i === _this.filesEntries.length - 1) {\n                        _this.filesEntries = [];\n                        _this.renderSelectedFiles(event, files, true);\n                    }\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.filesEntries.length; i++) {\n            _loop_4(i);\n        }\n    };\n    // tslint:enable\n    Uploader.prototype.onSelectFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var targetFiles;\n        /* istanbul ignore next */\n        if (args.type === 'drop') {\n            if (this.directoryUpload) {\n                this.getFilesFromFolder(args);\n            }\n            else {\n                var files = this.sortFilesList = args.dataTransfer.files;\n                if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n                    this.element.files = files;\n                }\n                targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n                this.renderSelectedFiles(args, targetFiles);\n            }\n        }\n        else {\n            targetFiles = [].slice.call(args.target.files);\n            this.renderSelectedFiles(args, targetFiles);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getBase64 = function (file) {\n        return new Promise(function (resolve, reject) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function () { return resolve(fileReader.result); };\n            fileReader.onerror = function (error) { return reject(error); };\n        });\n    };\n    /* istanbul ignore next */\n    /* tslint:ignore */\n    Uploader.prototype.renderSelectedFiles = function (args, \n    // tslint:disable-next-line\n    targetFiles, directory, paste) {\n        var _this = this;\n        this.base64String = [];\n        // tslint:disable-next-line\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            isModified: false,\n            modifiedFilesData: [],\n            progressInterval: '',\n            isCanceled: false,\n            currentRequest: null,\n            customFormData: null\n        };\n        /* istanbul ignore next */\n        if (targetFiles.length < 1) {\n            eventArgs.isCanceled = true;\n            this.trigger('selected', eventArgs);\n            return;\n        }\n        this.flag = true;\n        var fileData = [];\n        if (!this.multiple) {\n            this.clearData(true);\n            targetFiles = [targetFiles[0]];\n        }\n        for (var i = 0; i < targetFiles.length; i++) {\n            var file = directory ? targetFiles[i].file : targetFiles[i];\n            this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n        }\n        eventArgs.filesData = fileData;\n        if (this.allowedExtensions.indexOf('*') > -1) {\n            this.allTypes = true;\n        }\n        if (!this.allTypes) {\n            fileData = this.checkExtension(fileData);\n        }\n        this.trigger('selected', eventArgs, function (eventArgs) {\n            _this._internalRenderSelect(eventArgs, fileData);\n        });\n    };\n    Uploader.prototype.updateInitialFileDetails = function (args, \n    // tslint:disable-next-line\n    targetFiles, file, i, fileData, directory, paste) {\n        var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ?\n            getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) :\n            this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n        var fileDetails = {\n            name: fileName,\n            rawFile: file,\n            size: file.size,\n            status: this.localizedTexts('readyToUploadMessage'),\n            type: this.getFileType(file.name),\n            validationMessages: this.validatedFileSize(file.size),\n            statusCode: '1',\n            id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\n        };\n        /* istanbul ignore next */\n        if (paste) {\n            fileDetails.fileSource = 'paste';\n        }\n        fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n            fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n        if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n            fileDetails.statusCode = '0';\n        }\n        fileData.push(fileDetails);\n    };\n    Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n        if (!eventArgs.cancel) {\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                this.currentRequestHeader = eventArgs.currentRequest;\n                this.customFormDatas = eventArgs.customFormData;\n            }\n            this.selectedFiles = fileData;\n            this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n            if (this.showFileList) {\n                if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n                    for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\n                        for (var k = 0; k < fileData.length; k++) {\n                            if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\n                                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\n                            }\n                        }\n                    }\n                    var dataFiles = this.allTypes ? eventArgs.modifiedFilesData :\n                        this.checkExtension(eventArgs.modifiedFilesData);\n                    this.updateSortedFileList(dataFiles);\n                    this.filesData = dataFiles;\n                    if (!this.isForm || this.allowUpload()) {\n                        this.checkAutoUpload(dataFiles);\n                    }\n                }\n                else {\n                    this.createFileList(fileData, true);\n                    if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n                        this.filesData = this.filesData.concat(fileData);\n                    }\n                    if (!this.isForm || this.allowUpload()) {\n                        if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n                            this.checkAutoUpload(fileData);\n                        }\n                    }\n                }\n                if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n                    this.progressInterval = eventArgs.progressInterval;\n                }\n            }\n            else {\n                this.filesData = this.filesData.concat(fileData);\n                if (this.isBlazorSaveUrl) {\n                    // tslint:disable-next-line\n                    this.interopAdaptor.invokeMethodAsync('updateServerFileData', this.filesData, this.isForm);\n                }\n                if (this.autoUpload) {\n                    this.upload(this.filesData, true);\n                }\n            }\n            this.raiseActionComplete();\n            this.isFirstFileOnSelection = true;\n        }\n    };\n    Uploader.prototype.allowUpload = function () {\n        var allowFormUpload = false;\n        if (this.isForm && (!isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '')) {\n            allowFormUpload = true;\n        }\n        return allowFormUpload;\n    };\n    Uploader.prototype.isFormUpload = function () {\n        var isFormUpload = false;\n        if (this.isForm && ((isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '')\n            && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === ''))) {\n            isFormUpload = true;\n        }\n        return isFormUpload;\n    };\n    Uploader.prototype.clearData = function (singleUpload) {\n        if (!isNullOrUndefined(this.listParent) && !(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n            detach(this.listParent);\n            this.listParent = null;\n        }\n        if (this.browserName !== 'msie' && !singleUpload) {\n            this.element.value = '';\n        }\n        this.fileList = [];\n        this.filesData = [];\n        if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n            // tslint:disable-next-line\n            this.interopAdaptor.invokeMethodAsync('clearAll');\n        }\n        else {\n            this.removeActionButtons();\n        }\n    };\n    Uploader.prototype.updateSortedFileList = function (filesData) {\n        var previousListClone = this.createElement('div', { id: 'clonewrapper' });\n        var added = -1;\n        var removedList;\n        if (this.listParent) {\n            for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n                var liElement = this.listParent.querySelectorAll('li')[i];\n                previousListClone.appendChild(liElement.cloneNode(true));\n            }\n            removedList = this.listParent.querySelectorAll('li');\n            for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n                var item = removedList_1[_i];\n                detach(item);\n            }\n            this.removeActionButtons();\n            var oldList = [].slice.call(previousListClone.childNodes);\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createParentUL();\n            for (var index = 0; index < filesData.length; index++) {\n                for (var j = 0; j < this.filesData.length; j++) {\n                    if (this.filesData[j].name === filesData[index].name) {\n                        this.listParent.appendChild(oldList[j]);\n                        EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n                        this.fileList.push(oldList[j]);\n                        added = index;\n                    }\n                }\n                if (added !== index) {\n                    this.createFileList([filesData[index]]);\n                }\n            }\n        }\n        else {\n            this.createFileList(filesData);\n        }\n    };\n    Uploader.prototype.isBlank = function (str) {\n        return (!str || /^\\s*$/.test(str));\n    };\n    Uploader.prototype.checkExtension = function (files) {\n        var dropFiles = files;\n        if (!this.isBlank(this.allowedExtensions)) {\n            var allowedExtensions = [];\n            var extensions = this.allowedExtensions.split(',');\n            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n                var extension = extensions_1[_i];\n                allowedExtensions.push(extension.trim().toLocaleLowerCase());\n            }\n            for (var i = 0; i < files.length; i++) {\n                if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n                    files[i].status = this.localizedTexts('invalidFileType');\n                    files[i].statusCode = '0';\n                }\n            }\n        }\n        return dropFiles;\n    };\n    Uploader.prototype.validatedFileSize = function (fileSize) {\n        var minSizeError = '';\n        var maxSizeError = '';\n        if (fileSize < this.minFileSize) {\n            minSizeError = this.localizedTexts('invalidMinFileSize');\n        }\n        else if (fileSize > this.maxFileSize) {\n            maxSizeError = this.localizedTexts('invalidMaxFileSize');\n        }\n        else {\n            minSizeError = '';\n            maxSizeError = '';\n        }\n        var errorMessage = { minSize: minSizeError, maxSize: maxSizeError };\n        return errorMessage;\n    };\n    Uploader.prototype.isPreLoadFile = function (fileData) {\n        var isPreload = false;\n        for (var i = 0; i < this.files.length; i++) {\n            if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n                isPreload = true;\n            }\n        }\n        return isPreload;\n    };\n    Uploader.prototype.createCustomfileList = function (fileData) {\n        this.createParentUL();\n        resetBlazorTemplate(this.element.id + 'Template', 'Template');\n        for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n            var listItem = fileData_1[_i];\n            var liElement = this.createElement('li', { className: FILE, attrs: { 'data-file-name': listItem.name } });\n            this.uploadTemplateFn = this.templateComplier(this.template);\n            var fromElements = [].slice.call(this.uploadTemplateFn(listItem, null, null, this.element.id + 'Template', this.isStringTemplate));\n            var index = fileData.indexOf(listItem);\n            append(fromElements, liElement);\n            var eventArgs = {\n                element: liElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            var eventsArgs = {\n                element: liElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            this.trigger('rendering', eventArgs);\n            this.trigger('fileListRendering', eventsArgs);\n            this.listParent.appendChild(liElement);\n            this.fileList.push(liElement);\n        }\n        updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n    };\n    Uploader.prototype.createParentUL = function () {\n        if (isNullOrUndefined(this.listParent)) {\n            this.listParent = this.createElement('ul', { className: LIST_PARENT });\n            this.uploadWrapper.appendChild(this.listParent);\n        }\n    };\n    Uploader.prototype.formFileList = function (fileData, files) {\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        var fileContainer = this.createElement('span', { className: TEXT_CONTAINER });\n        var statusMessage;\n        for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n            var listItem = fileData_2[_i];\n            var fileNameEle = this.createElement('span', { className: FILE_NAME });\n            fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n            var fileTypeEle = this.createElement('span', { className: FILE_TYPE });\n            fileTypeEle.innerHTML = '.' + this.getFileType(listItem.name);\n            if (!this.enableRtl) {\n                fileContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(fileTypeEle);\n            }\n            else {\n                var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                rtlContainer.appendChild(fileTypeEle);\n                rtlContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(rtlContainer);\n            }\n            this.truncateName(fileNameEle);\n            statusMessage = this.formValidateFileInfo(listItem, fileList);\n        }\n        fileList.appendChild(fileContainer);\n        this.setListToFileInfo(fileData, fileList);\n        var index = this.listParent.querySelectorAll('li').length;\n        var infoEle = this.createElement('span');\n        if (fileList.classList.contains(INVALID_FILE)) {\n            infoEle.classList.add(STATUS);\n            infoEle.classList.add(INVALID_FILE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n            this.createFormInput(fileData);\n        }\n        fileContainer.appendChild(infoEle);\n        if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n            var iconElement = this.createElement('span', { className: 'e-icons', attrs: { 'tabindex': this.btnTabIndex } });\n            /* istanbul ignore next */\n            if (this.browserName === 'msie') {\n                iconElement.classList.add('e-msie');\n            }\n            iconElement.setAttribute('title', this.localizedTexts('remove'));\n            fileList.appendChild(fileContainer);\n            fileList.appendChild(iconElement);\n            EventHandler.add(iconElement, 'click', this.removeFiles, this);\n            iconElement.classList.add(REMOVE_ICON);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n    };\n    Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n        var statusMessage = listItem.status;\n        var validationMessages = this.validatedFileSize(listItem.size);\n        if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n            this.addInvalidClass(fileList);\n            statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n        }\n        var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n        if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n            this.addInvalidClass(fileList);\n            statusMessage = typeValidationMessage;\n        }\n        return statusMessage;\n    };\n    Uploader.prototype.addInvalidClass = function (fileList) {\n        fileList.classList.add(INVALID_FILE);\n    };\n    Uploader.prototype.createFormInput = function (fileData) {\n        var inputElement = this.element.cloneNode(true);\n        inputElement.classList.add(HIDDEN_INPUT);\n        for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n            var listItem = fileData_3[_i];\n            listItem.input = inputElement;\n        }\n        inputElement.setAttribute('name', this.uploaderName);\n        this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n        if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n            this.element.value = '';\n        }\n    };\n    Uploader.prototype.getFileSize = function (fileData) {\n        var fileSize = 0;\n        for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n            var file = fileData_4[_i];\n            fileSize += file.size;\n        }\n        return fileSize;\n    };\n    Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n        var result = {\n            name: '',\n            rawFile: '',\n            size: 0,\n            status: '',\n            type: '',\n            validationMessages: { minSize: '', maxSize: '' },\n            statusCode: '1',\n            list: fileList\n        };\n        var fileNames = [];\n        var type = '';\n        for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n            var listItem = fileData_5[_i];\n            fileNames.push(listItem.name);\n            type = listItem.type;\n        }\n        result.name = fileNames.join(', ');\n        result.size = this.getFileSize(fileData);\n        result.type = type;\n        result.status = this.statusForFormUpload(fileData, fileList);\n        return result;\n    };\n    Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n        var isValid = true;\n        var statusMessage;\n        for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n            var listItem = fileData_6[_i];\n            statusMessage = listItem.status;\n            var validationMessages = this.validatedFileSize(listItem.size);\n            if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n                isValid = false;\n                statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                    validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n            }\n            var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n            if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n                isValid = false;\n                statusMessage = typeValidationMessage;\n            }\n        }\n        if (!isValid) {\n            fileList.classList.add(INVALID_FILE);\n            statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData));\n        }\n        return statusMessage;\n    };\n    Uploader.prototype.formCustomFileList = function (fileData, files) {\n        this.createParentUL();\n        resetBlazorTemplate(this.element.id + 'Template', 'Template');\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        this.setListToFileInfo(fileData, fileList);\n        var result = this.mergeFileInfo(fileData, fileList);\n        fileList.setAttribute('data-file-name', result.name);\n        this.uploadTemplateFn = this.templateComplier(this.template);\n        var fromElements = [].slice.call(this.uploadTemplateFn(result, null, null, this.element.id + 'Template', this.isStringTemplate));\n        var index = this.listParent.querySelectorAll('li').length;\n        append(fromElements, fileList);\n        if (!fileList.classList.contains(INVALID_FILE)) {\n            this.createFormInput(fileData);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n        updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n    };\n    /**\n     * Create the file list for specified files data.\n     * @param { FileInfo[] } fileData - specifies the files data for file list creation.\n     * @returns void\n     */\n    Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\n        if (this.isBlazorSaveUrl || this.isBlazorTemplate) {\n            var fileListData = (isSelectedFile) ? this.filesData = this.filesData.concat(fileData) : fileData;\n            // tslint:disable-next-line\n            this.interopAdaptor.invokeMethodAsync('createFileList', fileListData, this.isForm);\n        }\n        else {\n            this.createParentUL();\n            if (this.template !== '' && !isNullOrUndefined(this.template)) {\n                if (this.isFormUpload()) {\n                    this.uploadWrapper.classList.add(FORM_UPLOAD);\n                    this.formCustomFileList(fileData, this.element.files);\n                }\n                else {\n                    this.createCustomfileList(fileData);\n                }\n            }\n            else if (this.isFormUpload()) {\n                this.uploadWrapper.classList.add(FORM_UPLOAD);\n                this.formFileList(fileData, this.element.files);\n            }\n            else {\n                for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n                    var listItem = fileData_7[_i];\n                    var liElement = this.createElement('li', {\n                        className: FILE,\n                        attrs: { 'data-file-name': listItem.name, 'data-files-count': '1' }\n                    });\n                    var textContainer = this.createElement('span', { className: TEXT_CONTAINER });\n                    var textElement = this.createElement('span', { className: FILE_NAME, attrs: { 'title': listItem.name } });\n                    textElement.innerHTML = this.getFileNameOnly(listItem.name);\n                    var fileExtension = this.createElement('span', { className: FILE_TYPE });\n                    fileExtension.innerHTML = '.' + this.getFileType(listItem.name);\n                    if (!this.enableRtl) {\n                        textContainer.appendChild(textElement);\n                        textContainer.appendChild(fileExtension);\n                    }\n                    else {\n                        var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                        rtlContainer.appendChild(fileExtension);\n                        rtlContainer.appendChild(textElement);\n                        textContainer.appendChild(rtlContainer);\n                    }\n                    var fileSize = this.createElement('span', { className: FILE_SIZE });\n                    fileSize.innerHTML = this.bytesToSize(listItem.size);\n                    textContainer.appendChild(fileSize);\n                    var statusElement = this.createElement('span', { className: STATUS });\n                    textContainer.appendChild(statusElement);\n                    statusElement.innerHTML = listItem.status;\n                    liElement.appendChild(textContainer);\n                    var iconElement = this.createElement('span', { className: ' e-icons',\n                        attrs: { 'tabindex': this.btnTabIndex } });\n                    /* istanbul ignore next */\n                    if (this.browserName === 'msie') {\n                        iconElement.classList.add('e-msie');\n                    }\n                    iconElement.setAttribute('title', this.localizedTexts('remove'));\n                    liElement.appendChild(iconElement);\n                    EventHandler.add(iconElement, 'click', this.removeFiles, this);\n                    if (listItem.statusCode === '2') {\n                        statusElement.classList.add(UPLOAD_SUCCESS);\n                        iconElement.classList.add(DELETE_ICON);\n                        iconElement.setAttribute('title', this.localizedTexts('delete'));\n                    }\n                    else if (listItem.statusCode !== '1') {\n                        statusElement.classList.remove(UPLOAD_SUCCESS);\n                        statusElement.classList.add(VALIDATION_FAILS);\n                    }\n                    if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n                        statusElement.innerHTML = '';\n                    }\n                    if (!iconElement.classList.contains(DELETE_ICON)) {\n                        iconElement.classList.add(REMOVE_ICON);\n                    }\n                    var index = fileData.indexOf(listItem);\n                    var eventArgs = {\n                        element: liElement,\n                        fileInfo: listItem,\n                        index: index,\n                        isPreload: this.isPreLoadFile(listItem)\n                    };\n                    var eventsArgs = {\n                        element: liElement,\n                        fileInfo: listItem,\n                        index: index,\n                        isPreload: this.isPreLoadFile(listItem)\n                    };\n                    this.trigger('rendering', eventArgs);\n                    this.trigger('fileListRendering', eventsArgs);\n                    this.listParent.appendChild(liElement);\n                    this.fileList.push(liElement);\n                    this.truncateName(textElement);\n                    var preventActionComplete = this.flag;\n                    if (this.isPreLoadFile(listItem)) {\n                        this.flag = false;\n                        this.checkActionComplete(true);\n                        this.flag = preventActionComplete;\n                    }\n                }\n            }\n        }\n    };\n    Uploader.prototype.getSlicedName = function (nameElement) {\n        var text;\n        text = nameElement.textContent;\n        nameElement.dataset.tail = text.slice(text.length - 10);\n    };\n    Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n        for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n            var listItem = fileData_8[_i];\n            listItem.list = fileList;\n        }\n    };\n    Uploader.prototype.truncateName = function (name) {\n        var nameElement = name;\n        if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n            /* istanbul ignore next */\n        }\n        else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n        }\n    };\n    Uploader.prototype.getFileType = function (name) {\n        var extension;\n        var index = name.lastIndexOf('.');\n        if (index >= 0) {\n            extension = name.substring(index + 1);\n        }\n        return extension ? extension : '';\n    };\n    Uploader.prototype.getFileNameOnly = function (name) {\n        var type = this.getFileType(name);\n        var names = name.split('.' + type);\n        return type = names[0];\n    };\n    Uploader.prototype.setInitialAttributes = function () {\n        if (this.initialAttr.accept) {\n            this.element.setAttribute('accept', this.initialAttr.accept);\n        }\n        if (this.initialAttr.disabled) {\n            this.element.setAttribute('disabled', 'disabled');\n        }\n        if (this.initialAttr.multiple) {\n            var newAttr = document.createAttribute('multiple');\n            this.element.setAttributeNode(newAttr);\n        }\n    };\n    Uploader.prototype.filterfileList = function (files) {\n        var filterFiles = [];\n        var li;\n        for (var i = 0; i < files.length; i++) {\n            li = this.getLiElement(files[i]);\n            if (!li.classList.contains(UPLOAD_SUCCESS)) {\n                filterFiles.push(files[i]);\n            }\n        }\n        return filterFiles;\n    };\n    Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n        if (updateLiStatus === void 0) { updateLiStatus = true; }\n        if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n            if (this.isBlazorSaveUrl) {\n                for (var i = 0; i < this.filesData.length; i++) {\n                    if (this.filesData[i].name === files.name) {\n                        this.filesData[i].status = status;\n                        this.filesData[i].statusCode = statusCode;\n                    }\n                }\n            }\n            else {\n                files.status = status;\n                files.statusCode = statusCode;\n            }\n        }\n        if (updateLiStatus) {\n            var li = this.getLiElement(files);\n            if (!isNullOrUndefined(li)) {\n                if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !((status === '' || isNullOrUndefined(status)))) {\n                    li.querySelector('.' + STATUS).textContent = status;\n                }\n            }\n        }\n        return files;\n    };\n    Uploader.prototype.getLiElement = function (files) {\n        var index;\n        for (var i = 0; i < this.filesData.length; i++) {\n            if (this.filesData[i].name === files.name) {\n                index = i;\n            }\n        }\n        return this.fileList[index];\n    };\n    Uploader.prototype.createProgressBar = function (liElement) {\n        var progressbarWrapper = this.createElement('span', { className: PROGRESS_WRAPPER });\n        var progressBar = this.createElement('progressbar', { className: PROGRESSBAR, attrs: { value: '0', max: '100' } });\n        var progressbarInnerWrapper = this.createElement('span', { className: PROGRESS_INNER_WRAPPER });\n        progressBar.setAttribute('style', 'width: 0%');\n        var progressbarText = this.createElement('span', { className: PROGRESSBAR_TEXT });\n        progressbarText.textContent = '0%';\n        progressbarInnerWrapper.appendChild(progressBar);\n        progressbarWrapper.appendChild(progressbarInnerWrapper);\n        progressbarWrapper.appendChild(progressbarText);\n        liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateProgressbar = function (e, li) {\n        if (!isNaN(Math.round((e.loaded / e.total) * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n            if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n                var value = (Math.round((e.loaded / e.total) * 100)) % parseInt(this.progressInterval, 10);\n                if (value === 0 || value === 100) {\n                    this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n                }\n            }\n            else {\n                this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n            }\n        }\n    };\n    Uploader.prototype.changeProgressValue = function (li, progressValue) {\n        li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n        li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n    };\n    Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n        var li = this.getLiElement(files);\n        if (isNullOrUndefined(li) && (!customUI)) {\n            return;\n        }\n        if (!isNullOrUndefined(li)) {\n            /* istanbul ignore next */\n            if (files.statusCode === '5') {\n                this.cancelUploadingFile(files, e, request, li);\n            }\n            if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n                this.createProgressBar(li);\n                this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            }\n            this.updateProgressbar(e, li);\n            var iconEle = li.querySelector('.' + REMOVE_ICON);\n            if (!isNullOrUndefined(iconEle)) {\n                iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n                iconEle.setAttribute('title', this.localizedTexts('abort'));\n                iconEle.classList.remove(REMOVE_ICON);\n            }\n        }\n        else {\n            this.cancelUploadingFile(files, e, request);\n        }\n        var args = { e: e, operation: 'upload', file: this.updateStatus(files, this.localizedTexts('inProgress'), '3') };\n        this.trigger('progress', args);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n        var _this = this;\n        if (files.statusCode === '5') {\n            var eventArgs = {\n                event: e,\n                fileData: files,\n                cancel: false\n            };\n            this.trigger('canceling', eventArgs, function (eventArgs) {\n                if (eventArgs.cancel) {\n                    files.statusCode = '3';\n                    if (!isNullOrUndefined(li)) {\n                        var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(li.querySelector('.e-spinner-pane'));\n                        }\n                    }\n                }\n                else {\n                    request.emitError = false;\n                    request.httpRequest.abort();\n                    var formData = new FormData();\n                    if (files.statusCode === '5') {\n                        var name_2 = _this.element.getAttribute('name');\n                        formData.append(name_2, files.name);\n                        formData.append('cancel-uploading', files.name);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) { _this.removecanceledFile(e, files); return {}; };\n                        ajax.send(formData);\n                    }\n                }\n            });\n        }\n    };\n    Uploader.prototype.removecanceledFile = function (e, file) {\n        var liElement = this.getLiElement(file);\n        if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n            return;\n        }\n        this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n        this.renderFailureState(e, file, liElement);\n        var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n        if (!isNullOrUndefined(liElement)) {\n            hideSpinner(spinnerTarget);\n            detach(liElement.querySelector('.e-spinner-pane'));\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = { event: e, response: requestResponse, operation: 'cancel', file: file };\n        this.trigger('success', args);\n    };\n    Uploader.prototype.renderFailureState = function (e, file, liElement) {\n        var _this = this;\n        this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        this.removeProgressbar(liElement, 'failure');\n        if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n            liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n        }\n        var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n        if (isNullOrUndefined(deleteIcon)) {\n            return;\n        }\n        deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n        deleteIcon.classList.add(REMOVE_ICON);\n        deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n        deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        /* istanbul ignore next */\n        retryElement.addEventListener('click', function (e) { _this.reloadcanceledFile(e, file, liElement, false); }, false);\n    };\n    Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n        file.statusCode = '1';\n        file.status = this.localizedTexts('readyToUploadMessage');\n        if (!custom) {\n            liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n                detach(liElement.querySelector('.' + RETRY_ICON));\n            }\n            this.pauseButton = null;\n        }\n        /* istanbul ignore next */\n        liElement.classList.add(RESTRICT_RETRY);\n        this.upload([file]);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.uploadComplete = function (e, file, customUI) {\n        var status = e.target;\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n            var li = this.getLiElement(file);\n            if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n                return;\n            }\n            if (!isNullOrUndefined(li)) {\n                this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n                this.removeProgressbar(li, 'success');\n                var iconEle = li.querySelector('.' + ABORT_ICON);\n                if (!isNullOrUndefined(iconEle)) {\n                    iconEle.classList.add(DELETE_ICON);\n                    iconEle.setAttribute('title', this.localizedTexts('delete'));\n                    iconEle.classList.remove(ABORT_ICON);\n                    iconEle.classList.remove(UPLOAD_INPROGRESS);\n                }\n            }\n            this.raiseSuccessEvent(e, file);\n        }\n        else {\n            this.uploadFailed(e, file);\n        }\n    };\n    Uploader.prototype.getResponse = function (e) {\n        // tslint:disable-next-line\n        var target = e.currentTarget;\n        var response = {\n            readyState: target.readyState,\n            statusCode: target.status,\n            statusText: target.statusText,\n            headers: target.getAllResponseHeaders(),\n            withCredentials: target.withCredentials\n        };\n        return response;\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverRemoveIconBindEvent = function () {\n        if (this.uploadWrapper && this.isBlazorSaveUrl) {\n            var iconElement = [].slice.call(this.uploadWrapper.querySelectorAll('ul li'));\n            for (var i = 0; i < iconElement.length; i++) {\n                var removeIconEle = (iconElement[i]) ? iconElement[i].querySelector('.e-icons') : null;\n                if (removeIconEle) {\n                    EventHandler.remove(removeIconEle, 'click', this.removeFiles);\n                    EventHandler.add(removeIconEle, 'click', this.removeFiles, this);\n                }\n            }\n        }\n    };\n    Uploader.prototype.raiseSuccessEvent = function (e, file) {\n        var _this = this;\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadSuccessMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '2', false), statusText: statusMessage\n        };\n        if (!this.isBlazorSaveUrl) {\n            var liElement = this.getLiElement(file);\n            if (!isNullOrUndefined(liElement)) {\n                var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n                if (!isNullOrUndefined(spinnerEle)) {\n                    hideSpinner(liElement);\n                    detach(spinnerEle);\n                }\n            }\n        }\n        this.trigger('success', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file, args.statusText, '2');\n            _this.uploadedFilesData.push(file);\n            if (!_this.isBlazorSaveUrl) {\n                _this.trigger('change', { file: _this.uploadedFilesData });\n            }\n            _this.checkActionButtonStatus();\n            if (_this.fileList.length > 0) {\n                if ((!(_this.getLiElement(file)).classList.contains(RESTRICT_RETRY))) {\n                    _this.uploadSequential();\n                    _this.checkActionComplete(true);\n                }\n                else {\n                    /* istanbul ignore next */\n                    (_this.getLiElement(file)).classList.remove(RESTRICT_RETRY);\n                }\n            }\n        });\n    };\n    Uploader.prototype.uploadFailed = function (e, file) {\n        var _this = this;\n        var li = this.getLiElement(file);\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadFailedMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '0', false), statusText: statusMessage\n        };\n        if (!isNullOrUndefined(li)) {\n            this.renderFailureState(e, file, li);\n        }\n        this.trigger('failure', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file, args.statusText, '0');\n            _this.checkActionButtonStatus();\n            _this.uploadSequential();\n            _this.checkActionComplete(true);\n        });\n    };\n    Uploader.prototype.uploadSequential = function () {\n        if (this.sequentialUpload) {\n            if (this.autoUpload) {\n                /* istanbul ignore next */\n                this.checkAutoUpload(this.filesData);\n            }\n            else {\n                this.uploadButtonClick();\n            }\n        }\n    };\n    Uploader.prototype.checkActionComplete = function (increment) {\n        increment ? ++this.actionCompleteCount : --this.actionCompleteCount;\n        this.raiseActionComplete();\n    };\n    Uploader.prototype.raiseActionComplete = function () {\n        if ((this.filesData.length === this.actionCompleteCount) && this.flag) {\n            this.flag = false;\n            var eventArgs = {\n                fileData: []\n            };\n            eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n            this.trigger('actionComplete', eventArgs);\n        }\n    };\n    Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n        var matchFiles = [];\n        var matchFilesIndex = 0;\n        for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n            var selectedFileData = selectedFiles[selectFileIndex];\n            for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n                if (this.filesData[fileDataIndex].name === selectedFileData.name) {\n                    matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n                    ++matchFilesIndex;\n                }\n            }\n        }\n        return matchFiles;\n    };\n    Uploader.prototype.updateProgressBarClasses = function (li, className) {\n        var progressBar = li.querySelector('.' + PROGRESSBAR);\n        if (!isNullOrUndefined(progressBar)) {\n            progressBar.classList.add(className);\n        }\n    };\n    Uploader.prototype.removeProgressbar = function (li, callType) {\n        var _this = this;\n        if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n            this.progressAnimation = new Animation({ duration: 1250 });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), { name: 'FadeOut' });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), { name: 'FadeOut' });\n            setTimeout(function () { _this.animateProgressBar(li, callType); }, 750);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.animateProgressBar = function (li, callType) {\n        if (callType === 'success') {\n            li.classList.add(UPLOAD_SUCCESS);\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n            }\n        }\n        if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n            detach(li.querySelector('.' + PROGRESS_WRAPPER));\n        }\n    };\n    Uploader.prototype.setExtensions = function (extensions) {\n        if (extensions !== '' && !isNullOrUndefined(extensions)) {\n            this.element.setAttribute('accept', extensions);\n        }\n        else {\n            this.element.removeAttribute('accept');\n        }\n    };\n    Uploader.prototype.templateComplier = function (uploadTemplate) {\n        if (uploadTemplate) {\n            var exception = void 0;\n            try {\n                if (document.querySelectorAll(uploadTemplate).length) {\n                    return compile(document.querySelector(uploadTemplate).innerHTML.trim());\n                }\n            }\n            catch (exception) {\n                return compile(uploadTemplate);\n            }\n        }\n        return undefined;\n    };\n    Uploader.prototype.setRTL = function () {\n        this.enableRtl ? addClass([this.uploadWrapper], RTL) : removeClass([this.uploadWrapper], RTL);\n    };\n    Uploader.prototype.localizedTexts = function (localeText) {\n        this.l10n.setLocale(this.locale);\n        return this.l10n.getConstant(localeText);\n    };\n    Uploader.prototype.setControlStatus = function () {\n        if (!this.enabled) {\n            this.uploadWrapper.classList.add(DISABLED);\n            this.element.setAttribute('disabled', 'disabled');\n            this.browseButton.setAttribute('disabled', 'disabled');\n            if (!isNullOrUndefined(this.clearButton)) {\n                this.clearButton.setAttribute('disabled', 'disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton)) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n        }\n        else {\n            if (this.uploadWrapper.classList.contains(DISABLED)) {\n                this.uploadWrapper.classList.remove(DISABLED);\n            }\n            if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n                this.element.removeAttribute('disabled');\n                this.browseButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n                this.clearButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n                this.uploadButton.hasAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n        var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['accept', 'multiple', 'disabled'];\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var prop = attributes_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n                switch (prop) {\n                    case 'accept':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['allowedExtensions'] === undefined))\n                            || isDynamic) {\n                            this.setProperties({ allowedExtensions: this.element.getAttribute('accept') }, !isDynamic);\n                            this.initialAttr.accept = this.allowedExtensions;\n                        }\n                        break;\n                    case 'multiple':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['multiple'] === undefined)) || isDynamic) {\n                            var isMutiple = this.element.getAttribute(prop) === 'multiple' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n                            this.setProperties({ multiple: isMutiple }, !isDynamic);\n                            this.initialAttr.multiple = true;\n                        }\n                        break;\n                    case 'disabled':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['enabled'] === undefined)) || isDynamic) {\n                            var isDisabled = this.element.getAttribute(prop) === 'disabled' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n                            this.setProperties({ enabled: isDisabled }, !isDynamic);\n                            this.initialAttr.disabled = true;\n                        }\n                }\n            }\n        }\n    };\n    Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n        var start = 0;\n        var end = Math.min(this.asyncSettings.chunkSize, file.size);\n        var index = 0;\n        var blob = file.rawFile.slice(start, end);\n        var metaData = { chunkIndex: index, blob: blob, file: file, start: start, end: end, retryCount: 0, request: null };\n        this.sendRequest(file, metaData, custom, fileIndex);\n    };\n    Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n        var _this = this;\n        var formData = new FormData();\n        var cloneFile;\n        var blob = file.rawFile.slice(metaData.start, metaData.end);\n        formData.append('chunkFile', blob, file.name);\n        formData.append(this.uploaderName, blob, file.name);\n        formData.append('chunk-index', metaData.chunkIndex.toString());\n        formData.append('chunkIndex', metaData.chunkIndex.toString());\n        var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n        formData.append('total-chunk', totalChunk.toString());\n        formData.append('totalChunk', totalChunk.toString());\n        var ajax = new Ajax({ url: this.asyncSettings.saveUrl, type: 'POST', async: true, contentType: null });\n        ajax.emitError = false;\n        ajax.onLoad = function (e) { _this.chunkUploadComplete(e, metaData, custom); return {}; };\n        ajax.onUploadProgress = function (e) {\n            _this.chunkUploadInProgress(e, metaData, custom);\n            return {};\n        };\n        var eventArgs = {\n            fileData: file,\n            customFormData: [],\n            cancel: false,\n            chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n        };\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            eventArgs.currentChunkIndex = metaData.chunkIndex;\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            if (eventArgs.currentChunkIndex === 0) {\n                // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n                _this.trigger('uploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n            else {\n                _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n        };\n        /* istanbul ignore next */\n        ajax.onError = function (e) { _this.chunkUploadFailed(e, metaData, custom); return {}; };\n        ajax.send(formData);\n        metaData.request = ajax;\n    };\n    Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n        if (eventArgs.cancel) {\n            this.eventCancelByArgs(e, eventArgs, file);\n        }\n        else {\n            this.updateFormData(formData, eventArgs.customFormData);\n        }\n    };\n    Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n        var _this = this;\n        e.cancel = true;\n        if (eventArgs.fileData.statusCode === '5') {\n            return;\n        }\n        var liElement = this.getLiElement(eventArgs.fileData);\n        liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n        liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n        eventArgs.fileData.statusCode = '5';\n        eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n        var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n        removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n        /* istanbul ignore next */\n        this.pauseButton.addEventListener('click', function (e) { _this.reloadcanceledFile(e, file, liElement); }, false);\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.checkChunkUpload = function () {\n        return (this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize)) ? false : true;\n    };\n    Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n        var _this = this;\n        var response = e.target;\n        var liElement;\n        if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n            var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n            var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n            var eventArgs = {\n                event: e,\n                file: metaData.file,\n                chunkIndex: metaData.chunkIndex,\n                totalChunk: totalChunk,\n                chunkSize: this.asyncSettings.chunkSize,\n                response: requestResponse\n            };\n            this.trigger('chunkSuccess', eventArgs);\n            if (isNullOrUndefined(custom) || !custom) {\n                liElement = this.getLiElement(metaData.file);\n            }\n            this.updateMetaData(metaData);\n            if (metaData.end === metaData.file.size) {\n                metaData.file.statusCode = '3';\n            }\n            if (metaData.file.statusCode === '5') {\n                var eventArgs_1 = { event: e, fileData: metaData.file, cancel: false };\n                this.trigger('canceling', eventArgs_1, function (eventArgs) {\n                    /* istanbul ignore next */\n                    if (eventArgs.cancel) {\n                        metaData.file.statusCode = '3';\n                        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(liElement.querySelector('.e-spinner-pane'));\n                        }\n                        _this.sendNextRequest(metaData);\n                    }\n                    else {\n                        metaData.request.emitError = false;\n                        response.abort();\n                        var formData = new FormData();\n                        var name_3 = _this.element.getAttribute('name');\n                        formData.append(name_3, metaData.file.name);\n                        formData.append('cancel-uploading', metaData.file.name);\n                        formData.append('cancelUploading', metaData.file.name);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) { _this.removeChunkFile(e, metaData, custom); return {}; };\n                        ajax.send(formData);\n                    }\n                });\n            }\n            else {\n                if ((totalChunk - 1) === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n                    var index = this.pausedData.indexOf(metaData);\n                    if (index >= 0) {\n                        this.pausedData.splice(index, 1);\n                    }\n                    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n                        if (liElement) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        this.removeChunkProgressBar(metaData);\n                    }\n                    this.raiseSuccessEvent(e, metaData.file);\n                    return;\n                }\n                this.sendNextRequest(metaData);\n            }\n        }\n        else {\n            this.chunkUploadFailed(e, metaData);\n        }\n    };\n    Uploader.prototype.sendNextRequest = function (metaData) {\n        metaData.start = metaData.end;\n        metaData.end += this.asyncSettings.chunkSize;\n        metaData.end = Math.min(metaData.end, metaData.file.size);\n        metaData.chunkIndex += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) && !custom)) {\n            var liElement = this.getLiElement(metaData.file);\n            var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n            var spinnerTarget = deleteIcon;\n            this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n            this.removeProgressbar(liElement, 'failure');\n            deleteIcon.classList.remove(ABORT_ICON);\n            deleteIcon.classList.add(REMOVE_ICON);\n            deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n            var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n            pauseIcon.classList.add(RETRY_ICON);\n            pauseIcon.classList.remove(PAUSE_UPLOAD);\n            pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)) {\n                hideSpinner(spinnerTarget);\n                detach(liElement.querySelector('.e-spinner-pane'));\n            }\n        }\n    };\n    Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n        metaData.file.statusCode = '4';\n        metaData.file.status = this.localizedTexts('pause');\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.abortUpload(metaData, custom, eventArgs);\n    };\n    Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n        metaData.request.emitError = false;\n        metaData.request.httpRequest.abort();\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n            targetElement.classList.remove(PAUSE_UPLOAD);\n            targetElement.classList.add(RESUME_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('resume'));\n            targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n        }\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].file.name === metaData.file.name) {\n                this.pausedData.splice(i, 1);\n            }\n        }\n        this.pausedData.push(metaData);\n        this.trigger('pausing', eventArgs);\n    };\n    Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n        var liElement = this.getLiElement(metaData.file);\n        var targetElement;\n        if (!isNullOrUndefined(liElement)) {\n            targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n        }\n        if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n            targetElement.classList.remove(RESUME_UPLOAD);\n            targetElement.classList.add(PAUSE_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('pause'));\n            targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.add(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n        }\n        metaData.file.status = this.localizedTexts('inProgress');\n        metaData.file.statusCode = '3';\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.trigger('resuming', eventArgs);\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].end === this.pausedData[i].file.size) {\n                this.chunkUploadComplete(e, metaData, custom);\n            }\n            else {\n                if (this.pausedData[i].file.name === metaData.file.name) {\n                    this.pausedData[i].start = this.pausedData[i].end;\n                    this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n                    this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n                    this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n                    this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateMetaData = function (metaData) {\n        if (this.uploadMetaData.indexOf(metaData) === -1) {\n            this.uploadMetaData.push(metaData);\n        }\n        else {\n            this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n            this.uploadMetaData.push(metaData);\n        }\n    };\n    Uploader.prototype.removeChunkProgressBar = function (metaData) {\n        var liElement = this.getLiElement(metaData.file);\n        if (!isNullOrUndefined(liElement)) {\n            this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n            this.removeProgressbar(liElement, 'success');\n            var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n            if (!isNullOrUndefined(cancelButton)) {\n                cancelButton.classList.add(DELETE_ICON);\n                cancelButton.setAttribute('title', this.localizedTexts('delete'));\n                cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n            }\n        }\n    };\n    Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n        var _this = this;\n        var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n        var liElement;\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            liElement = this.getLiElement(metaData.file);\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var eventArgs = {\n            event: e,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            totalChunk: chunkCount,\n            chunkSize: this.asyncSettings.chunkSize,\n            cancel: false,\n            response: requestResponse\n        };\n        this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n            // To prevent triggering of failure event\n            // tslint:disable-next-line\n            if (!eventArgs.cancel) {\n                if (metaData.retryCount < _this.asyncSettings.retryCount) {\n                    setTimeout(function () { _this.retryRequest(liElement, metaData, custom); }, _this.asyncSettings.retryAfterDelay);\n                }\n                else {\n                    if (!isNullOrUndefined(liElement)) {\n                        var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ?\n                            liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n                        if (!isNullOrUndefined(pauseButton)) {\n                            pauseButton.classList.add(RETRY_ICON);\n                            pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n                        }\n                        _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n                        _this.removeProgressbar(liElement, 'failure');\n                        liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n                        var iconElement = liElement.querySelector('.' + ABORT_ICON) ?\n                            liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n                        iconElement.classList.remove(ABORT_ICON);\n                        if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        if (metaData.start > 0) {\n                            iconElement.classList.add(DELETE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('delete'));\n                        }\n                        else {\n                            iconElement.classList.add(REMOVE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('remove'));\n                        }\n                    }\n                    metaData.retryCount = 0;\n                    var file_1 = metaData.file;\n                    var failureMessage = _this.localizedTexts('uploadFailedMessage');\n                    var args = {\n                        e: e, response: requestResponse,\n                        operation: 'upload',\n                        file: _this.updateStatus(file_1, failureMessage, '0', false),\n                        statusText: failureMessage\n                    };\n                    _this.trigger('failure', args, function (args) {\n                        // tslint:disable-next-line\n                        _this.updateStatus(file_1, args.statusText, '0');\n                        _this.uploadSequential();\n                        _this.checkActionComplete(true);\n                    });\n                }\n            }\n        });\n    };\n    Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        }\n        metaData.retryCount += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.checkPausePlayAction = function (e) {\n        var targetElement = e.target;\n        var selectedElement = e.target.parentElement;\n        var index = this.fileList.indexOf(selectedElement);\n        var fileData = this.filesData[index];\n        var metaData = this.getCurrentMetaData(fileData);\n        if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n            /* istanbul ignore next */\n            this.pauseUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n            /* istanbul ignore next */\n            this.resumeUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RETRY_ICON)) {\n            if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n                this.retryUpload(metaData, false);\n            }\n            else {\n                this.retryUpload(metaData, true);\n            }\n        }\n    };\n    Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n        if (fromcanceledStage) {\n            metaData.end = metaData.end + this.asyncSettings.chunkSize;\n            metaData.start = metaData.start + this.asyncSettings.chunkSize;\n            this.sendRequest(metaData.file, metaData);\n        }\n        else {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n        }\n        /* istanbul ignore next */\n        (this.getLiElement(metaData.file)).classList.add(RESTRICT_RETRY);\n    };\n    Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n        var _this = this;\n        if (metaData.file.statusCode === '4') {\n            return;\n        }\n        if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n            metaData.file.statusCode = '3';\n            metaData.file.status = this.localizedTexts('inProgress');\n        }\n        this.updateMetaData(metaData);\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(liElement)) {\n            return;\n        }\n        var target;\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        if (!isNullOrUndefined(retryElement)) {\n            retryElement.classList.add(PAUSE_UPLOAD);\n            retryElement.setAttribute('title', this.localizedTexts('pause'));\n            retryElement.classList.remove(RETRY_ICON);\n        }\n        if (!isNullOrUndefined(liElement)) {\n            if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n                var statusElement = liElement.querySelector('.' + STATUS);\n                if (isNullOrUndefined(this.template)) {\n                    statusElement.classList.add(UPLOAD_INPROGRESS);\n                    statusElement.classList.remove(UPLOAD_FAILED);\n                    this.createProgressBar(liElement);\n                    this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n                }\n                var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) :\n                    liElement.querySelector('.' + DELETE_ICON);\n                if (!isNullOrUndefined(clearIcon)) {\n                    clearIcon.classList.add(ABORT_ICON);\n                    clearIcon.setAttribute('title', this.localizedTexts('abort'));\n                    clearIcon.classList.remove(REMOVE_ICON);\n                }\n            }\n            if (!isNaN(Math.round((e.loaded / e.total) * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n                var loadedSize = (metaData.chunkIndex * this.asyncSettings.chunkSize);\n                var value = Math.min((((loadedSize + e.loaded) / metaData.file.size) * 100), 100);\n                this.changeProgressValue(liElement, Math.round(value).toString() + '%');\n            }\n            if (metaData.chunkIndex === 0) {\n                this.checkActionButtonStatus();\n            }\n        }\n        if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)) {\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-pause-btn', attrs: { 'tabindex': this.btnTabIndex } });\n            if (this.browserName === 'msie') {\n                this.pauseButton.classList.add('e-msie');\n            }\n            var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n            abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n            this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n            this.pauseButton.addEventListener('click', function (e) { _this.checkPausePlayAction(e); }, false);\n        }\n    };\n    /**\n     * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n     * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n     * @param { number } bytes - specifies the file size in bytes.\n     * @returns string\n     */\n    Uploader.prototype.bytesToSize = function (bytes) {\n        var i = -1;\n        var size;\n        if (!bytes) {\n            return '0.0 KB';\n        }\n        do {\n            bytes = bytes / 1024;\n            i++;\n        } while (bytes > 99);\n        if (i >= 2) {\n            bytes = bytes * 1024;\n            i = 1;\n        }\n        return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n    };\n    /**\n     * Allows you to sort the file data alphabetically based on its file name clearly.\n     * @param { FileList } filesData - specifies the files data for upload.\n     * @returns File[]\n     */\n    /* istanbul ignore next */\n    Uploader.prototype.sortFileList = function (filesData) {\n        filesData = filesData ? filesData : this.sortFilesList;\n        var files = filesData;\n        var fileNames = [];\n        for (var i = 0; i < files.length; i++) {\n            fileNames.push(files[i].name);\n        }\n        var sortedFileNames = fileNames.sort();\n        var sortedFilesData = [];\n        var index = 0;\n        for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n            var name_4 = sortedFileNames_1[_i];\n            for (var i = 0; i < files.length; i++) {\n                if (name_4 === files[i].name) {\n                    sortedFilesData.push(files[i]);\n                }\n            }\n        }\n        return sortedFilesData;\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n     * @method destroy\n     * @return {void}.\n     */\n    Uploader.prototype.destroy = function () {\n        this.element.value = null;\n        if (!(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n            this.clearAll();\n        }\n        this.unWireEvents();\n        this.unBindDropEvents();\n        if (this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n        if (!this.enabled) {\n            this.element.removeAttribute('disabled');\n        }\n        this.element.removeAttribute('accept');\n        this.setInitialAttributes();\n        var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n        for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n            var key = attributes_2[_i];\n            this.element.removeAttribute(key);\n        }\n        if (!this.isServerBlazor) {\n            if (!isNullOrUndefined(this.uploadWrapper)) {\n                this.uploadWrapper.parentElement.appendChild(this.element);\n                detach(this.uploadWrapper);\n            }\n            this.uploadWrapper = null;\n            _super.prototype.destroy.call(this);\n        }\n        else {\n            this.uploadWrapper = null;\n        }\n    };\n    /**\n     * Allows you to call the upload process manually by calling save URL action.\n     * To process the selected files (added in upload queue), pass an empty argument otherwise\n     * upload the specific file based on its argument.\n     * @param { FileInfo | FileInfo[] } files - specifies the files data for upload.\n     * @returns void\n     */\n    Uploader.prototype.upload = function (files, custom) {\n        var _this = this;\n        files = files ? files : this.filesData;\n        if (this.sequentialUpload && this.isFirstFileOnSelection) {\n            this.sequenceUpload(files);\n        }\n        else {\n            var uploadFiles_1 = this.getFilesInArray(files);\n            var eventArgs = {\n                customFormData: [],\n                currentRequest: null,\n                cancel: false\n            };\n            this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n                if (!eventArgs.cancel) {\n                    if (isBlazor()) {\n                        _this.currentRequestHeader = eventArgs.currentRequest ? eventArgs.currentRequest : _this.currentRequestHeader;\n                        _this.customFormDatas = (eventArgs.customFormData && eventArgs.customFormData.length > 0) ?\n                            eventArgs.customFormData : _this.customFormDatas;\n                    }\n                    _this.uploadFiles(uploadFiles_1, custom);\n                }\n            });\n        }\n    };\n    Uploader.prototype.getFilesInArray = function (files) {\n        var uploadFiles = [];\n        if (files instanceof Array) {\n            uploadFiles = files;\n        }\n        else {\n            uploadFiles.push(files);\n        }\n        return uploadFiles;\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var file = _this.fileStreams[fileIndex].rawFile;\n            try {\n                var reader = new FileReader();\n                // tslint:disable-next-line\n                reader.onload = (function (args) {\n                    return function () {\n                        try {\n                            var contents = args.result;\n                            var data = contents ? contents.split(';base64,')[1] : null;\n                            resolve(data);\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    };\n                })(reader);\n                reader.readAsDataURL(file.slice(position, position + totalCount));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.uploadFileCount = function (ele) {\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return -1;\n        }\n        var result = files.length;\n        return result;\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getFileRead = function (index, ele) {\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return -1;\n        }\n        var file = files[index];\n        var fileCount = this.newFileRef++;\n        this.fileStreams[fileCount] = file;\n        return fileCount;\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getFileInfo = function (index, ele) {\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return null;\n        }\n        var file = files[index];\n        if (!file) {\n            return null;\n        }\n        return this.filesData[index];\n    };\n    Uploader.prototype.uploadFiles = function (files, custom) {\n        var _this = this;\n        var selectedFiles = [];\n        if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n            if (this.isServerBlazor) {\n                // tslint:disable-next-line\n                this.interopAdaptor.invokeMethodAsync('GetFileDetails', files);\n            }\n            return;\n        }\n        if (!custom || isNullOrUndefined(custom)) {\n            if (!this.multiple) {\n                var file = [];\n                file.push(files[0]);\n                selectedFiles = this.filterfileList(file);\n            }\n            else {\n                selectedFiles = this.filterfileList(files);\n            }\n        }\n        else {\n            selectedFiles = files;\n        }\n        var _loop_5 = function (i) {\n            if (this_3.isServerBlazor && !this_3.checkChunkUpload()) {\n                /* istanbul ignore next */\n                /* tslint:disable */\n                if (selectedFiles[i] && selectedFiles[i].rawFile instanceof File) {\n                    this_3.getBase64(selectedFiles[i].rawFile).then(function (data) {\n                        _this.base64String.push(data);\n                        _this.uploadFilesRequest(selectedFiles, i, custom);\n                    });\n                }\n                /* tslint:disable */\n            }\n            else {\n                this_3.uploadFilesRequest(selectedFiles, i, custom);\n            }\n        };\n        var this_3 = this;\n        for (var i = 0; i < selectedFiles.length; i++) {\n            _loop_5(i);\n        }\n    };\n    Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n        var _this = this;\n        var cloneFiles = [];\n        var chunkEnabled = this.checkChunkUpload();\n        var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var getFileData;\n        /* istanbul ignore next */\n        if (this.isServerBlazor) {\n            getFileData = selectedFiles.slice(0);\n            cloneFiles.push(getFileData[i].rawFile);\n        }\n        var eventArgs = {\n            fileData: (this.isServerBlazor) ? getFileData[i] : selectedFiles[i],\n            customFormData: [],\n            cancel: false\n        };\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                eventArgs.fileData.rawFile = !chunkEnabled ? _this.base64String[i] : eventArgs.fileData.rawFile;\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            _this.trigger('uploading', eventArgs, function (eventArgs) {\n                /* istanbul ignore next */\n                if (_this.isServerBlazor && !chunkEnabled) {\n                    selectedFiles[i].rawFile = eventArgs.fileData.rawFile = cloneFiles[i];\n                }\n                if (eventArgs.cancel) {\n                    _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n                }\n                _this.updateFormData(formData, eventArgs.customFormData);\n            });\n        };\n        if (selectedFiles[i].statusCode === '1') {\n            var name_5 = this.element.getAttribute('name');\n            formData.append(name_5, selectedFiles[i].rawFile, selectedFiles[i].name);\n            if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n                this.chunkUpload(selectedFiles[i], custom, i);\n            }\n            else {\n                ajax.onLoad = function (e) {\n                    if (eventArgs.cancel && _this.isServerBlazor) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadComplete(e, selectedFiles[i], custom);\n                        return {};\n                    }\n                };\n                ajax.onUploadProgress = function (e) {\n                    if (eventArgs.cancel && _this.isServerBlazor) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n                        return {};\n                    }\n                };\n                /* istanbul ignore next */\n                ajax.onError = function (e) { _this.uploadFailed(e, selectedFiles[i]); return {}; };\n                ajax.send(formData);\n            }\n        }\n    };\n    Uploader.prototype.spliceFiles = function (liIndex) {\n        var liElement = this.fileList[liIndex];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < liIndex; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        var endIndex = (startIndex + nameElements) - 1;\n        for (var j = endIndex; j >= startIndex; j--) {\n            allFiles.splice(j, 1);\n        }\n    };\n    /**\n     * Remove the uploaded file from server manually by calling the remove URL action.\n     * If you pass an empty argument to this method, the complete file list can be cleared,\n     * otherwise remove the specific file based on its argument (“file_data”).\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n     * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n     * @param { boolean } removeDirectly - Set true if files remove without removing event.\n     * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n     * @returns void\n     */\n    Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n        var _this = this;\n        if (isNullOrUndefined(postRawFile)) {\n            postRawFile = true;\n        }\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            customFormData: [],\n            postRawFile: postRawFile,\n            currentRequest: null\n        };\n        var beforeEventArgs = {\n            cancel: false,\n            customFormData: [],\n            currentRequest: null\n        };\n        this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n            if (!beforeEventArgs.cancel) {\n                if (isBlazor()) {\n                    _this.currentRequestHeader = beforeEventArgs.currentRequest;\n                    _this.customFormDatas = beforeEventArgs.customFormData;\n                }\n                var index = void 0;\n                if (_this.isFormUpload() && !_this.isBlazorSaveUrl) {\n                    eventArgs.filesData = fileData;\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            var removingFiles = _this.getFilesInArray(fileData);\n                            var isLiRemoved = false;\n                            var liIndex = void 0;\n                            for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                                var data = removingFiles_1[_i];\n                                if (!isLiRemoved) {\n                                    liIndex = _this.fileList.indexOf(data.list);\n                                }\n                                if (liIndex > -1) {\n                                    var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n                                    if (inputElement) {\n                                        detach(inputElement);\n                                    }\n                                    _this.spliceFiles(liIndex);\n                                    detach(_this.fileList[liIndex]);\n                                    _this.fileList.splice(liIndex, 1);\n                                    isLiRemoved = true;\n                                    liIndex = -1;\n                                }\n                            }\n                        }\n                    });\n                }\n                else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')\n                    && !_this.isBlazorSaveUrl) {\n                    eventArgs.filesData = _this.getFilesData();\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            _this.clearAll();\n                        }\n                    });\n                }\n                else {\n                    var removeFiles = [];\n                    fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n                    if (fileData instanceof Array) {\n                        removeFiles = fileData;\n                    }\n                    else {\n                        removeFiles.push(fileData);\n                    }\n                    eventArgs.filesData = removeFiles;\n                    var removeUrl = _this.asyncSettings.removeUrl;\n                    var validUrl = (removeUrl === '' || isNullOrUndefined(removeUrl)) ? false : true;\n                    var _loop_6 = function (files) {\n                        index = _this.filesData.indexOf(files);\n                        if ((files.statusCode === '2' || files.statusCode === '4') && validUrl) {\n                            _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n                        }\n                        else {\n                            if (!removeDirectly) {\n                                _this.trigger('removing', eventArgs, function (eventArgs) {\n                                    if (!eventArgs.cancel) {\n                                        _this.removeFilesData(files, customTemplate);\n                                    }\n                                });\n                            }\n                            else {\n                                _this.removeFilesData(files, customTemplate);\n                            }\n                        }\n                        if (args && !args.target.classList.contains(REMOVE_ICON)) {\n                            _this.checkActionComplete(false);\n                        }\n                    };\n                    for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n                        var files = removeFiles_1[_i];\n                        _loop_6(files);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Clear all the file entries from list that can be uploaded files or added in upload queue.\n     * @returns void\n     */\n    Uploader.prototype.clearAll = function () {\n        var _this = this;\n        if (isNullOrUndefined(this.listParent) && !(this.isBlazorSaveUrl || this.isBlazorTemplate)) {\n            if (this.browserName !== 'msie') {\n                this.element.value = '';\n            }\n            this.filesData = [];\n            return;\n        }\n        var eventArgs = {\n            cancel: false,\n            filesData: this.filesData\n        };\n        this.trigger('clearing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n                _this.clearData();\n                _this.actionCompleteCount = 0;\n                _this.count = -1;\n            }\n        });\n    };\n    /**\n     * Get the data of files which are shown in file list.\n     * @param { number } index - specifies the file list item(li) index.\n     * @returns FileInfo[]\n     */\n    Uploader.prototype.getFilesData = function (index) {\n        if (!this.isServerBlazor) {\n            if (isNullOrUndefined(index)) {\n                return this.filesData;\n            }\n            else {\n                return this.getSelectedFiles(index);\n            }\n        }\n        else {\n            for (var i = 0; i < this.filesData.length; i++) {\n                this.filesData[i].rawFile = this.base64String[i];\n            }\n            return this.filesData;\n        }\n    };\n    /**\n     * Pauses the in-progress chunked upload based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns void\n     */\n    Uploader.prototype.pause = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.pauseUploading(fileDataFiles, custom);\n    };\n    Uploader.prototype.pauseUploading = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '3') {\n                this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    Uploader.prototype.getFiles = function (fileData) {\n        var files = [];\n        if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n            files.push(fileData);\n        }\n        else {\n            files = fileData;\n        }\n        return files;\n    };\n    /**\n     * Resumes the chunked upload that is previously paused based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns void\n     */\n    Uploader.prototype.resume = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.resumeFiles(fileDataFiles, custom);\n    };\n    Uploader.prototype.resumeFiles = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '4') {\n                this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    /**\n     * Retries the canceled or failed file upload based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n     * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n     * @returns void\n     */\n    Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n    };\n    Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n                if (this.asyncSettings.chunkSize > 0) {\n                    this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n                }\n                else {\n                    var liElement = void 0;\n                    if (!custom) {\n                        liElement = this.fileList[this.filesData.indexOf(files[i])];\n                    }\n                    this.reloadcanceledFile(null, files[i], liElement, custom);\n                }\n            }\n        }\n    };\n    /**\n     * Stops the in-progress chunked upload based on the file data.\n     * When the file upload is canceled, the partially uploaded file is removed from server.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n     * @returns void\n     */\n    Uploader.prototype.cancel = function (fileData) {\n        fileData = fileData ? fileData : this.filesData;\n        var cancelingFiles = this.getFilesInArray(fileData);\n        this.cancelUpload(cancelingFiles);\n    };\n    Uploader.prototype.cancelUpload = function (fileData) {\n        var files = this.getFiles(fileData);\n        if (this.asyncSettings.chunkSize > 0) {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    var metaData = this.getCurrentMetaData(files[i], null);\n                    metaData.file.statusCode = '5';\n                    metaData.file.status = this.localizedTexts('fileUploadCancel');\n                    this.updateMetaData(metaData);\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    files[i].statusCode = '5';\n                    files[i].status = this.localizedTexts('fileUploadCancel');\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.showHideUploadSpinner = function (files) {\n        var liElement = this.getLiElement(files);\n        if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n    };\n    __decorate([\n        Complex({ saveUrl: '', removeUrl: '' }, AsyncSettings)\n    ], Uploader.prototype, \"asyncSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"sequentialUpload\", void 0);\n    __decorate([\n        Property({})\n    ], Uploader.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"multiple\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"autoUpload\", void 0);\n    __decorate([\n        Complex({}, ButtonsProps)\n    ], Uploader.prototype, \"buttons\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"allowedExtensions\", void 0);\n    __decorate([\n        Property(0)\n    ], Uploader.prototype, \"minFileSize\", void 0);\n    __decorate([\n        Property(30000000)\n    ], Uploader.prototype, \"maxFileSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"dropArea\", void 0);\n    __decorate([\n        Collection([{}], FilesProp)\n    ], Uploader.prototype, \"files\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"showFileList\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"directoryUpload\", void 0);\n    __decorate([\n        Property('Default')\n    ], Uploader.prototype, \"dropEffect\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"rendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeUpload\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"fileListRendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"uploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"success\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"failure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"removing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeRemove\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"clearing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"progress\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkSuccess\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkFailure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkUploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"canceling\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"pausing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"resuming\", void 0);\n    Uploader = __decorate([\n        NotifyPropertyChanges\n    ], Uploader);\n    return Uploader;\n}(Component));\nexport { Uploader };\n"]},"metadata":{},"sourceType":"module"}